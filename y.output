Terminals unused in grammar

    VOID
    THEN
    DO
    LEFT_SQUARE_BRACKET
    RIGHT_SQUARE_BRACKET
    SCAN


Rules useless in parser due to conflicts

  112 $@3: %empty


State 7 conflicts: 1 reduce/reduce
State 9 conflicts: 1 shift/reduce
State 10 conflicts: 1 shift/reduce
State 23 conflicts: 18 shift/reduce
State 69 conflicts: 20 reduce/reduce
State 120 conflicts: 12 reduce/reduce
State 227 conflicts: 1 shift/reduce
State 277 conflicts: 9 reduce/reduce
State 339 conflicts: 1 shift/reduce
State 342 conflicts: 1 shift/reduce
State 346 conflicts: 1 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: statement
    2        | program statement

    3 statement: blockStatements
    4          | functionStatement
    5          | main

    6 blockStatements: blockStatement
    7                | blockStatements blockStatement

    8 blockStatement: variableDeclarationStatement
    9               | constDeclarationStatement
   10               | assignmentStatement
   11               | incStatement
   12               | decStatement
   13               | ifStatement
   14               | switchStatement
   15               | whileStatement
   16               | forStatement
   17               | repeatStatement
   18               | enumStatement
   19               | returnStatement
   20               | printStatement
   21               | continueBreakStatement
   22               | functionCallStatement
   23               | comment

   24 values: DIGIT
   25       | FLOAT_LITERAL
   26       | STRING_LITERAL
   27       | CHAR_LITERAL
   28       | BOOL_LITERAL

   29 expression: intMathExpression
   30           | floatMathExpression
   31           | stringExpression
   32           | logicalExpression

   33 variableDeclarationStatement: assignVariableDeclaration
   34                             | nonAssignVariableDeclaration

   35 noSemiColumnVariableDeclarationStatement: noSemiColumnAssignVariableDeclaration
   36                                         | noSemiColumnNonAssignVariableDeclaration

   37 assignVariableDeclaration: noSemiColumnAssignVariableDeclaration ';'

   38 noSemiColumnAssignVariableDeclaration: CHAR IDENTIFIER ASSIGN CHAR_LITERAL
   39                                      | INT IDENTIFIER ASSIGN intMathExpression
   40                                      | FLOAT IDENTIFIER ASSIGN floatMathExpression
   41                                      | STRING IDENTIFIER ASSIGN stringExpression
   42                                      | BOOL IDENTIFIER ASSIGN logicalExpression

   43 nonAssignVariableDeclaration: noSemiColumnNonAssignVariableDeclaration ';'

   44 noSemiColumnNonAssignVariableDeclaration: INT IDENTIFIER
   45                                         | CHAR IDENTIFIER
   46                                         | FLOAT IDENTIFIER
   47                                         | STRING IDENTIFIER
   48                                         | BOOL IDENTIFIER

   49 constDeclarationStatement: noSemiColumnConstDeclaration ';'

   50 noSemiColumnConstDeclaration: CONST CHAR IDENTIFIER ASSIGN CHAR_LITERAL
   51                             | CONST INT IDENTIFIER ASSIGN intMathExpression
   52                             | CONST FLOAT IDENTIFIER ASSIGN floatMathExpression
   53                             | CONST STRING IDENTIFIER ASSIGN stringExpression
   54                             | CONST BOOL IDENTIFIER ASSIGN logicalExpression

   55 assignmentStatement: IDENTIFIER ASSIGN intMathExpression ';'
   56                    | IDENTIFIER ASSIGN floatMathExpression ';'
   57                    | IDENTIFIER ASSIGN stringExpression ';'
   58                    | IDENTIFIER ASSIGN logicalExpression ';'
   59                    | IDENTIFIER ASSIGN CHAR_LITERAL ';'

   60 incStatement: IDENTIFIER INCREMENT ';'

   61 decStatement: IDENTIFIER DECREMENT ';'

   62 intMathExpression: intMathExpression PLUS intMathTerm
   63                  | intMathExpression MINUS intMathTerm
   64                  | intMathTerm

   65 intMathTerm: intMathTerm MULTIPLY intMathFactor
   66            | intMathTerm DIVIDE intMathFactor
   67            | intMathTerm MODULO intMathFactor
   68            | intMathFactor

   69 intMathFactor: intMathPrimary
   70              | IDENTIFIER INCREMENT
   71              | IDENTIFIER DECREMENT

   72 intMathPrimary: IDENTIFIER
   73               | DIGIT
   74               | LEFT_PARENTHESIS intMathExpression RIGHT_PARENTHESIS

   75 floatMathExpression: floatMathExpression PLUS floatMathTerm
   76                    | floatMathExpression MINUS floatMathTerm
   77                    | floatMathTerm

   78 floatMathTerm: floatMathTerm MULTIPLY floatMathFactor
   79              | floatMathTerm DIVIDE floatMathFactor
   80              | floatMathFactor

   81 floatMathFactor: IDENTIFIER
   82                | FLOAT_LITERAL
   83                | LEFT_PARENTHESIS floatMathExpression RIGHT_PARENTHESIS

   84 stringExpression: STRING_LITERAL
   85                 | IDENTIFIER
   86                 | stringExpression PLUS stringExpression
   87                 | LEFT_PARENTHESIS stringExpression RIGHT_PARENTHESIS

   88 logicalExpression: logicalTerm
   89                  | logicalExpression OR logicalTerm

   90 logicalTerm: logicalFactor
   91            | logicalTerm AND logicalFactor

   92 logicalFactor: logicalPrimary
   93              | NOT logicalFactor

   94 logicalPrimary: intMathExpression GREATER intMathExpression
   95               | intMathExpression LESS intMathExpression
   96               | intMathExpression GREATER_EQUAL intMathExpression
   97               | intMathExpression LESS_EQUAL intMathExpression
   98               | intMathExpression EQUAL intMathExpression
   99               | intMathExpression NOT_EQUAL intMathExpression
  100               | floatMathExpression GREATER floatMathExpression
  101               | floatMathExpression LESS floatMathExpression
  102               | floatMathExpression GREATER_EQUAL floatMathExpression
  103               | floatMathExpression LESS_EQUAL floatMathExpression
  104               | floatMathExpression EQUAL floatMathExpression
  105               | floatMathExpression NOT_EQUAL floatMathExpression
  106               | LEFT_PARENTHESIS logicalExpression RIGHT_PARENTHESIS
  107               | BOOL_LITERAL
  108               | IDENTIFIER

  109 $@1: %empty

  110 $@2: %empty

  111 ifStatement: IF $@1 LEFT_PARENTHESIS logicalExpression RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@2 blockStatements RIGHT_CURLY_BRACE

  112 $@3: %empty

  113 $@4: %empty

  114 $@5: %empty

  115 $@6: %empty

  116 $@7: %empty

  117 ifStatement: IF $@3 LEFT_PARENTHESIS logicalExpression RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@4 blockStatements RIGHT_CURLY_BRACE $@5 ELSE $@6 LEFT_CURLY_BRACE $@7 blockStatements RIGHT_CURLY_BRACE

  118 $@8: %empty

  119 whileStatement: WHILE LEFT_PARENTHESIS logicalExpression RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@8 blockStatements RIGHT_CURLY_BRACE

  120 $@9: %empty

  121 repeatStatement: REPEAT LEFT_CURLY_BRACE $@9 blockStatements RIGHT_CURLY_BRACE UNTIL LEFT_PARENTHESIS logicalExpression RIGHT_PARENTHESIS

  122 forAssignment: IDENTIFIER ASSIGN intMathExpression
  123              | IDENTIFIER ASSIGN floatMathExpression
  124              | IDENTIFIER ASSIGN stringExpression
  125              | IDENTIFIER ASSIGN BOOL_LITERAL
  126              | IDENTIFIER INCREMENT
  127              | IDENTIFIER DECREMENT

  128 forDeclaration: IDENTIFIER ASSIGN intMathExpression ';'
  129               | IDENTIFIER ASSIGN floatMathExpression ';'
  130               | IDENTIFIER ASSIGN stringExpression ';'
  131               | IDENTIFIER ASSIGN BOOL_LITERAL ';'
  132               | assignVariableDeclaration

  133 $@10: %empty

  134 forStatement: FOR LEFT_PARENTHESIS $@10 forDeclaration logicalExpression ';' forAssignment RIGHT_PARENTHESIS LEFT_CURLY_BRACE blockStatements RIGHT_CURLY_BRACE

  135 $@11: %empty

  136 switchStatement: SWITCH LEFT_PARENTHESIS IDENTIFIER RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@11 caseStatement RIGHT_CURLY_BRACE

  137 caseStatement: CASE values ':' blockStatements BREAK ';' caseStatement
  138              | CASE values ':' blockStatements BREAK ';'
  139              | DEFAULT ':' blockStatements BREAK ';'
  140              | %empty

  141 enumIdentifiers: IDENTIFIER ',' enumIdentifiers
  142                | IDENTIFIER

  143 $@12: %empty

  144 enumStatement: ENUM IDENTIFIER LEFT_CURLY_BRACE $@12 enumIdentifiers RIGHT_CURLY_BRACE

  145 $@13: %empty

  146 functionStatement: FUNCTION IDENTIFIER LEFT_PARENTHESIS $@13 parameter RIGHT_PARENTHESIS LEFT_CURLY_BRACE blockStatements RIGHT_CURLY_BRACE

  147 parameter: noSemiColumnVariableDeclarationStatement ',' parameter
  148          | noSemiColumnVariableDeclarationStatement
  149          | noSemiColumnConstDeclaration ',' parameter
  150          | noSemiColumnConstDeclaration
  151          | %empty

  152 returnStatement: RETURN argument ';'
  153                | RETURN ';'

  154 continueBreakStatement: BREAK ';'
  155                       | BREAK IDENTIFIER ';'
  156                       | BREAK
  157                       | CONTINUE ';'
  158                       | CONTINUE IDENTIFIER ';'
  159                       | CONTINUE

  160 printStatement: PRINT LEFT_PARENTHESIS argument RIGHT_PARENTHESIS ';'
  161               | PRINT LEFT_PARENTHESIS RIGHT_PARENTHESIS ';'

  162 functionCallStatement: IDENTIFIER LEFT_PARENTHESIS argument RIGHT_PARENTHESIS ';'
  163                      | IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS ';'

  164 argument: expression ',' argument
  165         | expression

  166 comment: COMMENT

  167 $@14: %empty

  168 $@15: %empty

  169 main: MAIN $@14 LEFT_PARENTHESIS RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@15 blockStatements RIGHT_CURLY_BRACE


Terminals, with rules where they appear

    $end (0) 0
    ',' (44) 141 147 149 164
    ':' (58) 137 138 139
    ';' (59) 37 43 49 55 56 57 58 59 60 61 128 129 130 131 134 137 138 139 152 153 154 155 157 158 160 161 162 163
    error (256)
    INT (258) 39 44 51
    CHAR (259) 38 45 50
    FLOAT (260) 40 46 52
    STRING (261) 41 47 53
    CONST (262) 50 51 52 53 54
    BOOL (263) 42 48 54
    VOID (264)
    PLUS (265) 62 75 86
    MINUS (266) 63 76
    MULTIPLY (267) 65 78
    DIVIDE (268) 66 79
    MODULO (269) 67
    INCREMENT (270) 60 70 126
    DECREMENT (271) 61 71 127
    GREATER (272) 94 100
    LESS (273) 95 101
    GREATER_EQUAL (274) 96 102
    LESS_EQUAL (275) 97 103
    EQUAL (276) 98 104
    NOT_EQUAL (277) 99 105
    AND (278) 91
    OR (279) 89
    NOT (280) 93
    ASSIGN (281) 38 39 40 41 42 50 51 52 53 54 55 56 57 58 59 122 123 124 125 128 129 130 131
    IF (282) 111 117
    ELSE (283) 117
    SWITCH (284) 136
    CASE (285) 137 138
    DEFAULT (286) 139
    CONTINUE (287) 157 158 159
    BREAK (288) 137 138 139 154 155 156
    THEN (289)
    WHILE (290) 119
    DO (291)
    FOR (292) 134
    RETURN (293) 152 153
    REPEAT (294) 121
    UNTIL (295) 121
    LEFT_CURLY_BRACE (296) 111 117 119 121 134 136 144 146 169
    RIGHT_CURLY_BRACE (297) 111 117 119 121 134 136 144 146 169
    LEFT_PARENTHESIS (298) 74 83 87 106 111 117 119 121 134 136 146 160 161 162 163 169
    RIGHT_PARENTHESIS (299) 74 83 87 106 111 117 119 121 134 136 146 160 161 162 163 169
    LEFT_SQUARE_BRACKET (300)
    RIGHT_SQUARE_BRACKET (301)
    ENUM (302) 144
    FUNCTION (303) 146
    MAIN (304) 169
    PRINT (305) 160 161
    SCAN (306)
    COMMENT (307) 166
    IDENTIFIER <sVal> (308) 38 39 40 41 42 44 45 46 47 48 50 51 52 53 54 55 56 57 58 59 60 61 70 71 72 81 85 108 122 123 124 125 126 127 128 129 130 131 136 141 142 144 146 155 158 162 163
    DIGIT <iVal> (309) 24 73
    FLOAT_LITERAL <fVal> (310) 25 82
    STRING_LITERAL <sVal> (311) 26 84
    CHAR_LITERAL <cVal> (312) 27 38 50 59
    BOOL_LITERAL <bVal> (313) 28 107 125 131


Nonterminals, with rules where they appear

    $accept (62)
        on left: 0
    program (63)
        on left: 1 2
        on right: 0 2
    statement (64)
        on left: 3 4 5
        on right: 1 2
    blockStatements (65)
        on left: 6 7
        on right: 3 7 111 117 119 121 134 137 138 139 146 169
    blockStatement (66)
        on left: 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
        on right: 6 7
    values (67)
        on left: 24 25 26 27 28
        on right: 137 138
    expression (68)
        on left: 29 30 31 32
        on right: 164 165
    variableDeclarationStatement (69)
        on left: 33 34
        on right: 8
    noSemiColumnVariableDeclarationStatement (70)
        on left: 35 36
        on right: 147 148
    assignVariableDeclaration (71)
        on left: 37
        on right: 33 132
    noSemiColumnAssignVariableDeclaration (72)
        on left: 38 39 40 41 42
        on right: 35 37
    nonAssignVariableDeclaration (73)
        on left: 43
        on right: 34
    noSemiColumnNonAssignVariableDeclaration (74)
        on left: 44 45 46 47 48
        on right: 36 43
    constDeclarationStatement (75)
        on left: 49
        on right: 9
    noSemiColumnConstDeclaration (76)
        on left: 50 51 52 53 54
        on right: 49 149 150
    assignmentStatement (77)
        on left: 55 56 57 58 59
        on right: 10
    incStatement (78)
        on left: 60
        on right: 11
    decStatement (79)
        on left: 61
        on right: 12
    intMathExpression <iVal> (80)
        on left: 62 63 64
        on right: 29 39 51 55 62 63 74 94 95 96 97 98 99 122 128
    intMathTerm <iVal> (81)
        on left: 65 66 67 68
        on right: 62 63 64 65 66 67
    intMathFactor <iVal> (82)
        on left: 69 70 71
        on right: 65 66 67 68
    intMathPrimary <iVal> (83)
        on left: 72 73 74
        on right: 69
    floatMathExpression <fVal> (84)
        on left: 75 76 77
        on right: 30 40 52 56 75 76 83 100 101 102 103 104 105 123 129
    floatMathTerm <fVal> (85)
        on left: 78 79 80
        on right: 75 76 77 78 79
    floatMathFactor <fVal> (86)
        on left: 81 82 83
        on right: 78 79 80
    stringExpression <sVal> (87)
        on left: 84 85 86 87
        on right: 31 41 53 57 86 87 124 130
    logicalExpression <bVal> (88)
        on left: 88 89
        on right: 32 42 54 58 89 106 111 117 119 121 134
    logicalTerm <bVal> (89)
        on left: 90 91
        on right: 88 89 91
    logicalFactor <bVal> (90)
        on left: 92 93
        on right: 90 91 93
    logicalPrimary <bVal> (91)
        on left: 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108
        on right: 92
    ifStatement (92)
        on left: 111 117
        on right: 13
    $@1 (93)
        on left: 109
        on right: 111
    $@2 (94)
        on left: 110
        on right: 111
    $@3 (95)
        on left: 112
        on right: 117
    $@4 (96)
        on left: 113
        on right: 117
    $@5 (97)
        on left: 114
        on right: 117
    $@6 (98)
        on left: 115
        on right: 117
    $@7 (99)
        on left: 116
        on right: 117
    whileStatement (100)
        on left: 119
        on right: 15
    $@8 (101)
        on left: 118
        on right: 119
    repeatStatement (102)
        on left: 121
        on right: 17
    $@9 (103)
        on left: 120
        on right: 121
    forAssignment (104)
        on left: 122 123 124 125 126 127
        on right: 134
    forDeclaration (105)
        on left: 128 129 130 131 132
        on right: 134
    forStatement (106)
        on left: 134
        on right: 16
    $@10 (107)
        on left: 133
        on right: 134
    switchStatement (108)
        on left: 136
        on right: 14
    $@11 (109)
        on left: 135
        on right: 136
    caseStatement (110)
        on left: 137 138 139 140
        on right: 136 137
    enumIdentifiers (111)
        on left: 141 142
        on right: 141 144
    enumStatement (112)
        on left: 144
        on right: 18
    $@12 (113)
        on left: 143
        on right: 144
    functionStatement (114)
        on left: 146
        on right: 4
    $@13 (115)
        on left: 145
        on right: 146
    parameter (116)
        on left: 147 148 149 150 151
        on right: 146 147 149
    returnStatement (117)
        on left: 152 153
        on right: 19
    continueBreakStatement (118)
        on left: 154 155 156 157 158 159
        on right: 21
    printStatement (119)
        on left: 160 161
        on right: 20
    functionCallStatement (120)
        on left: 162 163
        on right: 22
    argument (121)
        on left: 164 165
        on right: 152 160 162 164
    comment (122)
        on left: 166
        on right: 23
    main (123)
        on left: 169
        on right: 5
    $@14 (124)
        on left: 167
        on right: 169
    $@15 (125)
        on left: 168
        on right: 169


State 0

    0 $accept: . program $end

    INT         shift, and go to state 1
    CHAR        shift, and go to state 2
    FLOAT       shift, and go to state 3
    STRING      shift, and go to state 4
    CONST       shift, and go to state 5
    BOOL        shift, and go to state 6
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    CONTINUE    shift, and go to state 9
    BREAK       shift, and go to state 10
    WHILE       shift, and go to state 11
    FOR         shift, and go to state 12
    RETURN      shift, and go to state 13
    REPEAT      shift, and go to state 14
    ENUM        shift, and go to state 15
    FUNCTION    shift, and go to state 16
    MAIN        shift, and go to state 17
    PRINT       shift, and go to state 18
    COMMENT     shift, and go to state 19
    IDENTIFIER  shift, and go to state 20

    program                                   go to state 21
    statement                                 go to state 22
    blockStatements                           go to state 23
    blockStatement                            go to state 24
    variableDeclarationStatement              go to state 25
    assignVariableDeclaration                 go to state 26
    noSemiColumnAssignVariableDeclaration     go to state 27
    nonAssignVariableDeclaration              go to state 28
    noSemiColumnNonAssignVariableDeclaration  go to state 29
    constDeclarationStatement                 go to state 30
    noSemiColumnConstDeclaration              go to state 31
    assignmentStatement                       go to state 32
    incStatement                              go to state 33
    decStatement                              go to state 34
    ifStatement                               go to state 35
    whileStatement                            go to state 36
    repeatStatement                           go to state 37
    forStatement                              go to state 38
    switchStatement                           go to state 39
    enumStatement                             go to state 40
    functionStatement                         go to state 41
    returnStatement                           go to state 42
    continueBreakStatement                    go to state 43
    printStatement                            go to state 44
    functionCallStatement                     go to state 45
    comment                                   go to state 46
    main                                      go to state 47


State 1

   39 noSemiColumnAssignVariableDeclaration: INT . IDENTIFIER ASSIGN intMathExpression
   44 noSemiColumnNonAssignVariableDeclaration: INT . IDENTIFIER

    IDENTIFIER  shift, and go to state 48


State 2

   38 noSemiColumnAssignVariableDeclaration: CHAR . IDENTIFIER ASSIGN CHAR_LITERAL
   45 noSemiColumnNonAssignVariableDeclaration: CHAR . IDENTIFIER

    IDENTIFIER  shift, and go to state 49


State 3

   40 noSemiColumnAssignVariableDeclaration: FLOAT . IDENTIFIER ASSIGN floatMathExpression
   46 noSemiColumnNonAssignVariableDeclaration: FLOAT . IDENTIFIER

    IDENTIFIER  shift, and go to state 50


State 4

   41 noSemiColumnAssignVariableDeclaration: STRING . IDENTIFIER ASSIGN stringExpression
   47 noSemiColumnNonAssignVariableDeclaration: STRING . IDENTIFIER

    IDENTIFIER  shift, and go to state 51


State 5

   50 noSemiColumnConstDeclaration: CONST . CHAR IDENTIFIER ASSIGN CHAR_LITERAL
   51                             | CONST . INT IDENTIFIER ASSIGN intMathExpression
   52                             | CONST . FLOAT IDENTIFIER ASSIGN floatMathExpression
   53                             | CONST . STRING IDENTIFIER ASSIGN stringExpression
   54                             | CONST . BOOL IDENTIFIER ASSIGN logicalExpression

    INT     shift, and go to state 52
    CHAR    shift, and go to state 53
    FLOAT   shift, and go to state 54
    STRING  shift, and go to state 55
    BOOL    shift, and go to state 56


State 6

   42 noSemiColumnAssignVariableDeclaration: BOOL . IDENTIFIER ASSIGN logicalExpression
   48 noSemiColumnNonAssignVariableDeclaration: BOOL . IDENTIFIER

    IDENTIFIER  shift, and go to state 57


State 7

  111 ifStatement: IF . $@1 LEFT_PARENTHESIS logicalExpression RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@2 blockStatements RIGHT_CURLY_BRACE
  117            | IF . $@3 LEFT_PARENTHESIS logicalExpression RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@4 blockStatements RIGHT_CURLY_BRACE $@5 ELSE $@6 LEFT_CURLY_BRACE $@7 blockStatements RIGHT_CURLY_BRACE

    LEFT_PARENTHESIS  reduce using rule 109 ($@1)
    LEFT_PARENTHESIS  [reduce using rule 112 ($@3)]
    $default          reduce using rule 109 ($@1)

    $@1  go to state 58
    $@3  go to state 59


State 8

  136 switchStatement: SWITCH . LEFT_PARENTHESIS IDENTIFIER RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@11 caseStatement RIGHT_CURLY_BRACE

    LEFT_PARENTHESIS  shift, and go to state 60


State 9

  157 continueBreakStatement: CONTINUE . ';'
  158                       | CONTINUE . IDENTIFIER ';'
  159                       | CONTINUE .

    IDENTIFIER  shift, and go to state 61
    ';'         shift, and go to state 62

    IDENTIFIER  [reduce using rule 159 (continueBreakStatement)]
    $default    reduce using rule 159 (continueBreakStatement)


State 10

  154 continueBreakStatement: BREAK . ';'
  155                       | BREAK . IDENTIFIER ';'
  156                       | BREAK .

    IDENTIFIER  shift, and go to state 63
    ';'         shift, and go to state 64

    IDENTIFIER  [reduce using rule 156 (continueBreakStatement)]
    $default    reduce using rule 156 (continueBreakStatement)


State 11

  119 whileStatement: WHILE . LEFT_PARENTHESIS logicalExpression RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@8 blockStatements RIGHT_CURLY_BRACE

    LEFT_PARENTHESIS  shift, and go to state 65


State 12

  134 forStatement: FOR . LEFT_PARENTHESIS $@10 forDeclaration logicalExpression ';' forAssignment RIGHT_PARENTHESIS LEFT_CURLY_BRACE blockStatements RIGHT_CURLY_BRACE

    LEFT_PARENTHESIS  shift, and go to state 66


State 13

  152 returnStatement: RETURN . argument ';'
  153                | RETURN . ';'

    NOT               shift, and go to state 67
    LEFT_PARENTHESIS  shift, and go to state 68
    IDENTIFIER        shift, and go to state 69
    DIGIT             shift, and go to state 70
    FLOAT_LITERAL     shift, and go to state 71
    STRING_LITERAL    shift, and go to state 72
    BOOL_LITERAL      shift, and go to state 73
    ';'               shift, and go to state 74

    expression           go to state 75
    intMathExpression    go to state 76
    intMathTerm          go to state 77
    intMathFactor        go to state 78
    intMathPrimary       go to state 79
    floatMathExpression  go to state 80
    floatMathTerm        go to state 81
    floatMathFactor      go to state 82
    stringExpression     go to state 83
    logicalExpression    go to state 84
    logicalTerm          go to state 85
    logicalFactor        go to state 86
    logicalPrimary       go to state 87
    argument             go to state 88


State 14

  121 repeatStatement: REPEAT . LEFT_CURLY_BRACE $@9 blockStatements RIGHT_CURLY_BRACE UNTIL LEFT_PARENTHESIS logicalExpression RIGHT_PARENTHESIS

    LEFT_CURLY_BRACE  shift, and go to state 89


State 15

  144 enumStatement: ENUM . IDENTIFIER LEFT_CURLY_BRACE $@12 enumIdentifiers RIGHT_CURLY_BRACE

    IDENTIFIER  shift, and go to state 90


State 16

  146 functionStatement: FUNCTION . IDENTIFIER LEFT_PARENTHESIS $@13 parameter RIGHT_PARENTHESIS LEFT_CURLY_BRACE blockStatements RIGHT_CURLY_BRACE

    IDENTIFIER  shift, and go to state 91


State 17

  169 main: MAIN . $@14 LEFT_PARENTHESIS RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@15 blockStatements RIGHT_CURLY_BRACE

    $default  reduce using rule 167 ($@14)

    $@14  go to state 92


State 18

  160 printStatement: PRINT . LEFT_PARENTHESIS argument RIGHT_PARENTHESIS ';'
  161               | PRINT . LEFT_PARENTHESIS RIGHT_PARENTHESIS ';'

    LEFT_PARENTHESIS  shift, and go to state 93


State 19

  166 comment: COMMENT .

    $default  reduce using rule 166 (comment)


State 20

   55 assignmentStatement: IDENTIFIER . ASSIGN intMathExpression ';'
   56                    | IDENTIFIER . ASSIGN floatMathExpression ';'
   57                    | IDENTIFIER . ASSIGN stringExpression ';'
   58                    | IDENTIFIER . ASSIGN logicalExpression ';'
   59                    | IDENTIFIER . ASSIGN CHAR_LITERAL ';'
   60 incStatement: IDENTIFIER . INCREMENT ';'
   61 decStatement: IDENTIFIER . DECREMENT ';'
  162 functionCallStatement: IDENTIFIER . LEFT_PARENTHESIS argument RIGHT_PARENTHESIS ';'
  163                      | IDENTIFIER . LEFT_PARENTHESIS RIGHT_PARENTHESIS ';'

    INCREMENT         shift, and go to state 94
    DECREMENT         shift, and go to state 95
    ASSIGN            shift, and go to state 96
    LEFT_PARENTHESIS  shift, and go to state 97


State 21

    0 $accept: program . $end
    2 program: program . statement

    $end        shift, and go to state 98
    INT         shift, and go to state 1
    CHAR        shift, and go to state 2
    FLOAT       shift, and go to state 3
    STRING      shift, and go to state 4
    CONST       shift, and go to state 5
    BOOL        shift, and go to state 6
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    CONTINUE    shift, and go to state 9
    BREAK       shift, and go to state 10
    WHILE       shift, and go to state 11
    FOR         shift, and go to state 12
    RETURN      shift, and go to state 13
    REPEAT      shift, and go to state 14
    ENUM        shift, and go to state 15
    FUNCTION    shift, and go to state 16
    MAIN        shift, and go to state 17
    PRINT       shift, and go to state 18
    COMMENT     shift, and go to state 19
    IDENTIFIER  shift, and go to state 20

    statement                                 go to state 99
    blockStatements                           go to state 23
    blockStatement                            go to state 24
    variableDeclarationStatement              go to state 25
    assignVariableDeclaration                 go to state 26
    noSemiColumnAssignVariableDeclaration     go to state 27
    nonAssignVariableDeclaration              go to state 28
    noSemiColumnNonAssignVariableDeclaration  go to state 29
    constDeclarationStatement                 go to state 30
    noSemiColumnConstDeclaration              go to state 31
    assignmentStatement                       go to state 32
    incStatement                              go to state 33
    decStatement                              go to state 34
    ifStatement                               go to state 35
    whileStatement                            go to state 36
    repeatStatement                           go to state 37
    forStatement                              go to state 38
    switchStatement                           go to state 39
    enumStatement                             go to state 40
    functionStatement                         go to state 41
    returnStatement                           go to state 42
    continueBreakStatement                    go to state 43
    printStatement                            go to state 44
    functionCallStatement                     go to state 45
    comment                                   go to state 46
    main                                      go to state 47


State 22

    1 program: statement .

    $default  reduce using rule 1 (program)


State 23

    3 statement: blockStatements .
    7 blockStatements: blockStatements . blockStatement

    INT         shift, and go to state 1
    CHAR        shift, and go to state 2
    FLOAT       shift, and go to state 3
    STRING      shift, and go to state 4
    CONST       shift, and go to state 5
    BOOL        shift, and go to state 6
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    CONTINUE    shift, and go to state 9
    BREAK       shift, and go to state 10
    WHILE       shift, and go to state 11
    FOR         shift, and go to state 12
    RETURN      shift, and go to state 13
    REPEAT      shift, and go to state 14
    ENUM        shift, and go to state 15
    PRINT       shift, and go to state 18
    COMMENT     shift, and go to state 19
    IDENTIFIER  shift, and go to state 20

    INT         [reduce using rule 3 (statement)]
    CHAR        [reduce using rule 3 (statement)]
    FLOAT       [reduce using rule 3 (statement)]
    STRING      [reduce using rule 3 (statement)]
    CONST       [reduce using rule 3 (statement)]
    BOOL        [reduce using rule 3 (statement)]
    IF          [reduce using rule 3 (statement)]
    SWITCH      [reduce using rule 3 (statement)]
    CONTINUE    [reduce using rule 3 (statement)]
    BREAK       [reduce using rule 3 (statement)]
    WHILE       [reduce using rule 3 (statement)]
    FOR         [reduce using rule 3 (statement)]
    RETURN      [reduce using rule 3 (statement)]
    REPEAT      [reduce using rule 3 (statement)]
    ENUM        [reduce using rule 3 (statement)]
    PRINT       [reduce using rule 3 (statement)]
    COMMENT     [reduce using rule 3 (statement)]
    IDENTIFIER  [reduce using rule 3 (statement)]
    $default    reduce using rule 3 (statement)

    blockStatement                            go to state 100
    variableDeclarationStatement              go to state 25
    assignVariableDeclaration                 go to state 26
    noSemiColumnAssignVariableDeclaration     go to state 27
    nonAssignVariableDeclaration              go to state 28
    noSemiColumnNonAssignVariableDeclaration  go to state 29
    constDeclarationStatement                 go to state 30
    noSemiColumnConstDeclaration              go to state 31
    assignmentStatement                       go to state 32
    incStatement                              go to state 33
    decStatement                              go to state 34
    ifStatement                               go to state 35
    whileStatement                            go to state 36
    repeatStatement                           go to state 37
    forStatement                              go to state 38
    switchStatement                           go to state 39
    enumStatement                             go to state 40
    returnStatement                           go to state 42
    continueBreakStatement                    go to state 43
    printStatement                            go to state 44
    functionCallStatement                     go to state 45
    comment                                   go to state 46


State 24

    6 blockStatements: blockStatement .

    $default  reduce using rule 6 (blockStatements)


State 25

    8 blockStatement: variableDeclarationStatement .

    $default  reduce using rule 8 (blockStatement)


State 26

   33 variableDeclarationStatement: assignVariableDeclaration .

    $default  reduce using rule 33 (variableDeclarationStatement)


State 27

   37 assignVariableDeclaration: noSemiColumnAssignVariableDeclaration . ';'

    ';'  shift, and go to state 101


State 28

   34 variableDeclarationStatement: nonAssignVariableDeclaration .

    $default  reduce using rule 34 (variableDeclarationStatement)


State 29

   43 nonAssignVariableDeclaration: noSemiColumnNonAssignVariableDeclaration . ';'

    ';'  shift, and go to state 102


State 30

    9 blockStatement: constDeclarationStatement .

    $default  reduce using rule 9 (blockStatement)


State 31

   49 constDeclarationStatement: noSemiColumnConstDeclaration . ';'

    ';'  shift, and go to state 103


State 32

   10 blockStatement: assignmentStatement .

    $default  reduce using rule 10 (blockStatement)


State 33

   11 blockStatement: incStatement .

    $default  reduce using rule 11 (blockStatement)


State 34

   12 blockStatement: decStatement .

    $default  reduce using rule 12 (blockStatement)


State 35

   13 blockStatement: ifStatement .

    $default  reduce using rule 13 (blockStatement)


State 36

   15 blockStatement: whileStatement .

    $default  reduce using rule 15 (blockStatement)


State 37

   17 blockStatement: repeatStatement .

    $default  reduce using rule 17 (blockStatement)


State 38

   16 blockStatement: forStatement .

    $default  reduce using rule 16 (blockStatement)


State 39

   14 blockStatement: switchStatement .

    $default  reduce using rule 14 (blockStatement)


State 40

   18 blockStatement: enumStatement .

    $default  reduce using rule 18 (blockStatement)


State 41

    4 statement: functionStatement .

    $default  reduce using rule 4 (statement)


State 42

   19 blockStatement: returnStatement .

    $default  reduce using rule 19 (blockStatement)


State 43

   21 blockStatement: continueBreakStatement .

    $default  reduce using rule 21 (blockStatement)


State 44

   20 blockStatement: printStatement .

    $default  reduce using rule 20 (blockStatement)


State 45

   22 blockStatement: functionCallStatement .

    $default  reduce using rule 22 (blockStatement)


State 46

   23 blockStatement: comment .

    $default  reduce using rule 23 (blockStatement)


State 47

    5 statement: main .

    $default  reduce using rule 5 (statement)


State 48

   39 noSemiColumnAssignVariableDeclaration: INT IDENTIFIER . ASSIGN intMathExpression
   44 noSemiColumnNonAssignVariableDeclaration: INT IDENTIFIER .

    ASSIGN  shift, and go to state 104

    $default  reduce using rule 44 (noSemiColumnNonAssignVariableDeclaration)


State 49

   38 noSemiColumnAssignVariableDeclaration: CHAR IDENTIFIER . ASSIGN CHAR_LITERAL
   45 noSemiColumnNonAssignVariableDeclaration: CHAR IDENTIFIER .

    ASSIGN  shift, and go to state 105

    $default  reduce using rule 45 (noSemiColumnNonAssignVariableDeclaration)


State 50

   40 noSemiColumnAssignVariableDeclaration: FLOAT IDENTIFIER . ASSIGN floatMathExpression
   46 noSemiColumnNonAssignVariableDeclaration: FLOAT IDENTIFIER .

    ASSIGN  shift, and go to state 106

    $default  reduce using rule 46 (noSemiColumnNonAssignVariableDeclaration)


State 51

   41 noSemiColumnAssignVariableDeclaration: STRING IDENTIFIER . ASSIGN stringExpression
   47 noSemiColumnNonAssignVariableDeclaration: STRING IDENTIFIER .

    ASSIGN  shift, and go to state 107

    $default  reduce using rule 47 (noSemiColumnNonAssignVariableDeclaration)


State 52

   51 noSemiColumnConstDeclaration: CONST INT . IDENTIFIER ASSIGN intMathExpression

    IDENTIFIER  shift, and go to state 108


State 53

   50 noSemiColumnConstDeclaration: CONST CHAR . IDENTIFIER ASSIGN CHAR_LITERAL

    IDENTIFIER  shift, and go to state 109


State 54

   52 noSemiColumnConstDeclaration: CONST FLOAT . IDENTIFIER ASSIGN floatMathExpression

    IDENTIFIER  shift, and go to state 110


State 55

   53 noSemiColumnConstDeclaration: CONST STRING . IDENTIFIER ASSIGN stringExpression

    IDENTIFIER  shift, and go to state 111


State 56

   54 noSemiColumnConstDeclaration: CONST BOOL . IDENTIFIER ASSIGN logicalExpression

    IDENTIFIER  shift, and go to state 112


State 57

   42 noSemiColumnAssignVariableDeclaration: BOOL IDENTIFIER . ASSIGN logicalExpression
   48 noSemiColumnNonAssignVariableDeclaration: BOOL IDENTIFIER .

    ASSIGN  shift, and go to state 113

    $default  reduce using rule 48 (noSemiColumnNonAssignVariableDeclaration)


State 58

  111 ifStatement: IF $@1 . LEFT_PARENTHESIS logicalExpression RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@2 blockStatements RIGHT_CURLY_BRACE

    LEFT_PARENTHESIS  shift, and go to state 114


State 59

  117 ifStatement: IF $@3 . LEFT_PARENTHESIS logicalExpression RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@4 blockStatements RIGHT_CURLY_BRACE $@5 ELSE $@6 LEFT_CURLY_BRACE $@7 blockStatements RIGHT_CURLY_BRACE

    LEFT_PARENTHESIS  shift, and go to state 115


State 60

  136 switchStatement: SWITCH LEFT_PARENTHESIS . IDENTIFIER RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@11 caseStatement RIGHT_CURLY_BRACE

    IDENTIFIER  shift, and go to state 116


State 61

  158 continueBreakStatement: CONTINUE IDENTIFIER . ';'

    ';'  shift, and go to state 117


State 62

  157 continueBreakStatement: CONTINUE ';' .

    $default  reduce using rule 157 (continueBreakStatement)


State 63

  155 continueBreakStatement: BREAK IDENTIFIER . ';'

    ';'  shift, and go to state 118


State 64

  154 continueBreakStatement: BREAK ';' .

    $default  reduce using rule 154 (continueBreakStatement)


State 65

  119 whileStatement: WHILE LEFT_PARENTHESIS . logicalExpression RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@8 blockStatements RIGHT_CURLY_BRACE

    NOT               shift, and go to state 67
    LEFT_PARENTHESIS  shift, and go to state 119
    IDENTIFIER        shift, and go to state 120
    DIGIT             shift, and go to state 70
    FLOAT_LITERAL     shift, and go to state 71
    BOOL_LITERAL      shift, and go to state 73

    intMathExpression    go to state 121
    intMathTerm          go to state 77
    intMathFactor        go to state 78
    intMathPrimary       go to state 79
    floatMathExpression  go to state 122
    floatMathTerm        go to state 81
    floatMathFactor      go to state 82
    logicalExpression    go to state 123
    logicalTerm          go to state 85
    logicalFactor        go to state 86
    logicalPrimary       go to state 87


State 66

  134 forStatement: FOR LEFT_PARENTHESIS . $@10 forDeclaration logicalExpression ';' forAssignment RIGHT_PARENTHESIS LEFT_CURLY_BRACE blockStatements RIGHT_CURLY_BRACE

    $default  reduce using rule 133 ($@10)

    $@10  go to state 124


State 67

   93 logicalFactor: NOT . logicalFactor

    NOT               shift, and go to state 67
    LEFT_PARENTHESIS  shift, and go to state 119
    IDENTIFIER        shift, and go to state 120
    DIGIT             shift, and go to state 70
    FLOAT_LITERAL     shift, and go to state 71
    BOOL_LITERAL      shift, and go to state 73

    intMathExpression    go to state 121
    intMathTerm          go to state 77
    intMathFactor        go to state 78
    intMathPrimary       go to state 79
    floatMathExpression  go to state 122
    floatMathTerm        go to state 81
    floatMathFactor      go to state 82
    logicalFactor        go to state 125
    logicalPrimary       go to state 87


State 68

   74 intMathPrimary: LEFT_PARENTHESIS . intMathExpression RIGHT_PARENTHESIS
   83 floatMathFactor: LEFT_PARENTHESIS . floatMathExpression RIGHT_PARENTHESIS
   87 stringExpression: LEFT_PARENTHESIS . stringExpression RIGHT_PARENTHESIS
  106 logicalPrimary: LEFT_PARENTHESIS . logicalExpression RIGHT_PARENTHESIS

    NOT               shift, and go to state 67
    LEFT_PARENTHESIS  shift, and go to state 68
    IDENTIFIER        shift, and go to state 69
    DIGIT             shift, and go to state 70
    FLOAT_LITERAL     shift, and go to state 71
    STRING_LITERAL    shift, and go to state 72
    BOOL_LITERAL      shift, and go to state 73

    intMathExpression    go to state 126
    intMathTerm          go to state 77
    intMathFactor        go to state 78
    intMathPrimary       go to state 79
    floatMathExpression  go to state 127
    floatMathTerm        go to state 81
    floatMathFactor      go to state 82
    stringExpression     go to state 128
    logicalExpression    go to state 129
    logicalTerm          go to state 85
    logicalFactor        go to state 86
    logicalPrimary       go to state 87


State 69

   70 intMathFactor: IDENTIFIER . INCREMENT
   71              | IDENTIFIER . DECREMENT
   72 intMathPrimary: IDENTIFIER .
   81 floatMathFactor: IDENTIFIER .
   85 stringExpression: IDENTIFIER .
  108 logicalPrimary: IDENTIFIER .

    INCREMENT  shift, and go to state 130
    DECREMENT  shift, and go to state 131

    PLUS               reduce using rule 72 (intMathPrimary)
    PLUS               [reduce using rule 81 (floatMathFactor)]
    PLUS               [reduce using rule 85 (stringExpression)]
    MINUS              reduce using rule 72 (intMathPrimary)
    MINUS              [reduce using rule 81 (floatMathFactor)]
    MULTIPLY           reduce using rule 72 (intMathPrimary)
    MULTIPLY           [reduce using rule 81 (floatMathFactor)]
    DIVIDE             reduce using rule 72 (intMathPrimary)
    DIVIDE             [reduce using rule 81 (floatMathFactor)]
    GREATER            reduce using rule 72 (intMathPrimary)
    GREATER            [reduce using rule 81 (floatMathFactor)]
    LESS               reduce using rule 72 (intMathPrimary)
    LESS               [reduce using rule 81 (floatMathFactor)]
    GREATER_EQUAL      reduce using rule 72 (intMathPrimary)
    GREATER_EQUAL      [reduce using rule 81 (floatMathFactor)]
    LESS_EQUAL         reduce using rule 72 (intMathPrimary)
    LESS_EQUAL         [reduce using rule 81 (floatMathFactor)]
    EQUAL              reduce using rule 72 (intMathPrimary)
    EQUAL              [reduce using rule 81 (floatMathFactor)]
    NOT_EQUAL          reduce using rule 72 (intMathPrimary)
    NOT_EQUAL          [reduce using rule 81 (floatMathFactor)]
    AND                reduce using rule 108 (logicalPrimary)
    OR                 reduce using rule 108 (logicalPrimary)
    RIGHT_PARENTHESIS  reduce using rule 72 (intMathPrimary)
    RIGHT_PARENTHESIS  [reduce using rule 81 (floatMathFactor)]
    RIGHT_PARENTHESIS  [reduce using rule 85 (stringExpression)]
    RIGHT_PARENTHESIS  [reduce using rule 108 (logicalPrimary)]
    ';'                reduce using rule 72 (intMathPrimary)
    ';'                [reduce using rule 81 (floatMathFactor)]
    ';'                [reduce using rule 85 (stringExpression)]
    ';'                [reduce using rule 108 (logicalPrimary)]
    ','                reduce using rule 72 (intMathPrimary)
    ','                [reduce using rule 81 (floatMathFactor)]
    ','                [reduce using rule 85 (stringExpression)]
    ','                [reduce using rule 108 (logicalPrimary)]
    $default           reduce using rule 72 (intMathPrimary)


State 70

   73 intMathPrimary: DIGIT .

    $default  reduce using rule 73 (intMathPrimary)


State 71

   82 floatMathFactor: FLOAT_LITERAL .

    $default  reduce using rule 82 (floatMathFactor)


State 72

   84 stringExpression: STRING_LITERAL .

    $default  reduce using rule 84 (stringExpression)


State 73

  107 logicalPrimary: BOOL_LITERAL .

    $default  reduce using rule 107 (logicalPrimary)


State 74

  153 returnStatement: RETURN ';' .

    $default  reduce using rule 153 (returnStatement)


State 75

  164 argument: expression . ',' argument
  165         | expression .

    ','  shift, and go to state 132

    $default  reduce using rule 165 (argument)


State 76

   29 expression: intMathExpression .
   62 intMathExpression: intMathExpression . PLUS intMathTerm
   63                  | intMathExpression . MINUS intMathTerm
   94 logicalPrimary: intMathExpression . GREATER intMathExpression
   95               | intMathExpression . LESS intMathExpression
   96               | intMathExpression . GREATER_EQUAL intMathExpression
   97               | intMathExpression . LESS_EQUAL intMathExpression
   98               | intMathExpression . EQUAL intMathExpression
   99               | intMathExpression . NOT_EQUAL intMathExpression

    PLUS           shift, and go to state 133
    MINUS          shift, and go to state 134
    GREATER        shift, and go to state 135
    LESS           shift, and go to state 136
    GREATER_EQUAL  shift, and go to state 137
    LESS_EQUAL     shift, and go to state 138
    EQUAL          shift, and go to state 139
    NOT_EQUAL      shift, and go to state 140

    $default  reduce using rule 29 (expression)


State 77

   64 intMathExpression: intMathTerm .
   65 intMathTerm: intMathTerm . MULTIPLY intMathFactor
   66            | intMathTerm . DIVIDE intMathFactor
   67            | intMathTerm . MODULO intMathFactor

    MULTIPLY  shift, and go to state 141
    DIVIDE    shift, and go to state 142
    MODULO    shift, and go to state 143

    $default  reduce using rule 64 (intMathExpression)


State 78

   68 intMathTerm: intMathFactor .

    $default  reduce using rule 68 (intMathTerm)


State 79

   69 intMathFactor: intMathPrimary .

    $default  reduce using rule 69 (intMathFactor)


State 80

   30 expression: floatMathExpression .
   75 floatMathExpression: floatMathExpression . PLUS floatMathTerm
   76                    | floatMathExpression . MINUS floatMathTerm
  100 logicalPrimary: floatMathExpression . GREATER floatMathExpression
  101               | floatMathExpression . LESS floatMathExpression
  102               | floatMathExpression . GREATER_EQUAL floatMathExpression
  103               | floatMathExpression . LESS_EQUAL floatMathExpression
  104               | floatMathExpression . EQUAL floatMathExpression
  105               | floatMathExpression . NOT_EQUAL floatMathExpression

    PLUS           shift, and go to state 144
    MINUS          shift, and go to state 145
    GREATER        shift, and go to state 146
    LESS           shift, and go to state 147
    GREATER_EQUAL  shift, and go to state 148
    LESS_EQUAL     shift, and go to state 149
    EQUAL          shift, and go to state 150
    NOT_EQUAL      shift, and go to state 151

    $default  reduce using rule 30 (expression)


State 81

   77 floatMathExpression: floatMathTerm .
   78 floatMathTerm: floatMathTerm . MULTIPLY floatMathFactor
   79              | floatMathTerm . DIVIDE floatMathFactor

    MULTIPLY  shift, and go to state 152
    DIVIDE    shift, and go to state 153

    $default  reduce using rule 77 (floatMathExpression)


State 82

   80 floatMathTerm: floatMathFactor .

    $default  reduce using rule 80 (floatMathTerm)


State 83

   31 expression: stringExpression .
   86 stringExpression: stringExpression . PLUS stringExpression

    PLUS  shift, and go to state 154

    $default  reduce using rule 31 (expression)


State 84

   32 expression: logicalExpression .
   89 logicalExpression: logicalExpression . OR logicalTerm

    OR  shift, and go to state 155

    $default  reduce using rule 32 (expression)


State 85

   88 logicalExpression: logicalTerm .
   91 logicalTerm: logicalTerm . AND logicalFactor

    AND  shift, and go to state 156

    $default  reduce using rule 88 (logicalExpression)


State 86

   90 logicalTerm: logicalFactor .

    $default  reduce using rule 90 (logicalTerm)


State 87

   92 logicalFactor: logicalPrimary .

    $default  reduce using rule 92 (logicalFactor)


State 88

  152 returnStatement: RETURN argument . ';'

    ';'  shift, and go to state 157


State 89

  121 repeatStatement: REPEAT LEFT_CURLY_BRACE . $@9 blockStatements RIGHT_CURLY_BRACE UNTIL LEFT_PARENTHESIS logicalExpression RIGHT_PARENTHESIS

    $default  reduce using rule 120 ($@9)

    $@9  go to state 158


State 90

  144 enumStatement: ENUM IDENTIFIER . LEFT_CURLY_BRACE $@12 enumIdentifiers RIGHT_CURLY_BRACE

    LEFT_CURLY_BRACE  shift, and go to state 159


State 91

  146 functionStatement: FUNCTION IDENTIFIER . LEFT_PARENTHESIS $@13 parameter RIGHT_PARENTHESIS LEFT_CURLY_BRACE blockStatements RIGHT_CURLY_BRACE

    LEFT_PARENTHESIS  shift, and go to state 160


State 92

  169 main: MAIN $@14 . LEFT_PARENTHESIS RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@15 blockStatements RIGHT_CURLY_BRACE

    LEFT_PARENTHESIS  shift, and go to state 161


State 93

  160 printStatement: PRINT LEFT_PARENTHESIS . argument RIGHT_PARENTHESIS ';'
  161               | PRINT LEFT_PARENTHESIS . RIGHT_PARENTHESIS ';'

    NOT                shift, and go to state 67
    LEFT_PARENTHESIS   shift, and go to state 68
    RIGHT_PARENTHESIS  shift, and go to state 162
    IDENTIFIER         shift, and go to state 69
    DIGIT              shift, and go to state 70
    FLOAT_LITERAL      shift, and go to state 71
    STRING_LITERAL     shift, and go to state 72
    BOOL_LITERAL       shift, and go to state 73

    expression           go to state 75
    intMathExpression    go to state 76
    intMathTerm          go to state 77
    intMathFactor        go to state 78
    intMathPrimary       go to state 79
    floatMathExpression  go to state 80
    floatMathTerm        go to state 81
    floatMathFactor      go to state 82
    stringExpression     go to state 83
    logicalExpression    go to state 84
    logicalTerm          go to state 85
    logicalFactor        go to state 86
    logicalPrimary       go to state 87
    argument             go to state 163


State 94

   60 incStatement: IDENTIFIER INCREMENT . ';'

    ';'  shift, and go to state 164


State 95

   61 decStatement: IDENTIFIER DECREMENT . ';'

    ';'  shift, and go to state 165


State 96

   55 assignmentStatement: IDENTIFIER ASSIGN . intMathExpression ';'
   56                    | IDENTIFIER ASSIGN . floatMathExpression ';'
   57                    | IDENTIFIER ASSIGN . stringExpression ';'
   58                    | IDENTIFIER ASSIGN . logicalExpression ';'
   59                    | IDENTIFIER ASSIGN . CHAR_LITERAL ';'

    NOT               shift, and go to state 67
    LEFT_PARENTHESIS  shift, and go to state 68
    IDENTIFIER        shift, and go to state 69
    DIGIT             shift, and go to state 70
    FLOAT_LITERAL     shift, and go to state 71
    STRING_LITERAL    shift, and go to state 72
    CHAR_LITERAL      shift, and go to state 166
    BOOL_LITERAL      shift, and go to state 73

    intMathExpression    go to state 167
    intMathTerm          go to state 77
    intMathFactor        go to state 78
    intMathPrimary       go to state 79
    floatMathExpression  go to state 168
    floatMathTerm        go to state 81
    floatMathFactor      go to state 82
    stringExpression     go to state 169
    logicalExpression    go to state 170
    logicalTerm          go to state 85
    logicalFactor        go to state 86
    logicalPrimary       go to state 87


State 97

  162 functionCallStatement: IDENTIFIER LEFT_PARENTHESIS . argument RIGHT_PARENTHESIS ';'
  163                      | IDENTIFIER LEFT_PARENTHESIS . RIGHT_PARENTHESIS ';'

    NOT                shift, and go to state 67
    LEFT_PARENTHESIS   shift, and go to state 68
    RIGHT_PARENTHESIS  shift, and go to state 171
    IDENTIFIER         shift, and go to state 69
    DIGIT              shift, and go to state 70
    FLOAT_LITERAL      shift, and go to state 71
    STRING_LITERAL     shift, and go to state 72
    BOOL_LITERAL       shift, and go to state 73

    expression           go to state 75
    intMathExpression    go to state 76
    intMathTerm          go to state 77
    intMathFactor        go to state 78
    intMathPrimary       go to state 79
    floatMathExpression  go to state 80
    floatMathTerm        go to state 81
    floatMathFactor      go to state 82
    stringExpression     go to state 83
    logicalExpression    go to state 84
    logicalTerm          go to state 85
    logicalFactor        go to state 86
    logicalPrimary       go to state 87
    argument             go to state 172


State 98

    0 $accept: program $end .

    $default  accept


State 99

    2 program: program statement .

    $default  reduce using rule 2 (program)


State 100

    7 blockStatements: blockStatements blockStatement .

    $default  reduce using rule 7 (blockStatements)


State 101

   37 assignVariableDeclaration: noSemiColumnAssignVariableDeclaration ';' .

    $default  reduce using rule 37 (assignVariableDeclaration)


State 102

   43 nonAssignVariableDeclaration: noSemiColumnNonAssignVariableDeclaration ';' .

    $default  reduce using rule 43 (nonAssignVariableDeclaration)


State 103

   49 constDeclarationStatement: noSemiColumnConstDeclaration ';' .

    $default  reduce using rule 49 (constDeclarationStatement)


State 104

   39 noSemiColumnAssignVariableDeclaration: INT IDENTIFIER ASSIGN . intMathExpression

    LEFT_PARENTHESIS  shift, and go to state 173
    IDENTIFIER        shift, and go to state 174
    DIGIT             shift, and go to state 70

    intMathExpression  go to state 175
    intMathTerm        go to state 77
    intMathFactor      go to state 78
    intMathPrimary     go to state 79


State 105

   38 noSemiColumnAssignVariableDeclaration: CHAR IDENTIFIER ASSIGN . CHAR_LITERAL

    CHAR_LITERAL  shift, and go to state 176


State 106

   40 noSemiColumnAssignVariableDeclaration: FLOAT IDENTIFIER ASSIGN . floatMathExpression

    LEFT_PARENTHESIS  shift, and go to state 177
    IDENTIFIER        shift, and go to state 178
    FLOAT_LITERAL     shift, and go to state 71

    floatMathExpression  go to state 179
    floatMathTerm        go to state 81
    floatMathFactor      go to state 82


State 107

   41 noSemiColumnAssignVariableDeclaration: STRING IDENTIFIER ASSIGN . stringExpression

    LEFT_PARENTHESIS  shift, and go to state 180
    IDENTIFIER        shift, and go to state 181
    STRING_LITERAL    shift, and go to state 72

    stringExpression  go to state 182


State 108

   51 noSemiColumnConstDeclaration: CONST INT IDENTIFIER . ASSIGN intMathExpression

    ASSIGN  shift, and go to state 183


State 109

   50 noSemiColumnConstDeclaration: CONST CHAR IDENTIFIER . ASSIGN CHAR_LITERAL

    ASSIGN  shift, and go to state 184


State 110

   52 noSemiColumnConstDeclaration: CONST FLOAT IDENTIFIER . ASSIGN floatMathExpression

    ASSIGN  shift, and go to state 185


State 111

   53 noSemiColumnConstDeclaration: CONST STRING IDENTIFIER . ASSIGN stringExpression

    ASSIGN  shift, and go to state 186


State 112

   54 noSemiColumnConstDeclaration: CONST BOOL IDENTIFIER . ASSIGN logicalExpression

    ASSIGN  shift, and go to state 187


State 113

   42 noSemiColumnAssignVariableDeclaration: BOOL IDENTIFIER ASSIGN . logicalExpression

    NOT               shift, and go to state 67
    LEFT_PARENTHESIS  shift, and go to state 119
    IDENTIFIER        shift, and go to state 120
    DIGIT             shift, and go to state 70
    FLOAT_LITERAL     shift, and go to state 71
    BOOL_LITERAL      shift, and go to state 73

    intMathExpression    go to state 121
    intMathTerm          go to state 77
    intMathFactor        go to state 78
    intMathPrimary       go to state 79
    floatMathExpression  go to state 122
    floatMathTerm        go to state 81
    floatMathFactor      go to state 82
    logicalExpression    go to state 188
    logicalTerm          go to state 85
    logicalFactor        go to state 86
    logicalPrimary       go to state 87


State 114

  111 ifStatement: IF $@1 LEFT_PARENTHESIS . logicalExpression RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@2 blockStatements RIGHT_CURLY_BRACE

    NOT               shift, and go to state 67
    LEFT_PARENTHESIS  shift, and go to state 119
    IDENTIFIER        shift, and go to state 120
    DIGIT             shift, and go to state 70
    FLOAT_LITERAL     shift, and go to state 71
    BOOL_LITERAL      shift, and go to state 73

    intMathExpression    go to state 121
    intMathTerm          go to state 77
    intMathFactor        go to state 78
    intMathPrimary       go to state 79
    floatMathExpression  go to state 122
    floatMathTerm        go to state 81
    floatMathFactor      go to state 82
    logicalExpression    go to state 189
    logicalTerm          go to state 85
    logicalFactor        go to state 86
    logicalPrimary       go to state 87


State 115

  117 ifStatement: IF $@3 LEFT_PARENTHESIS . logicalExpression RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@4 blockStatements RIGHT_CURLY_BRACE $@5 ELSE $@6 LEFT_CURLY_BRACE $@7 blockStatements RIGHT_CURLY_BRACE

    NOT               shift, and go to state 67
    LEFT_PARENTHESIS  shift, and go to state 119
    IDENTIFIER        shift, and go to state 120
    DIGIT             shift, and go to state 70
    FLOAT_LITERAL     shift, and go to state 71
    BOOL_LITERAL      shift, and go to state 73

    intMathExpression    go to state 121
    intMathTerm          go to state 77
    intMathFactor        go to state 78
    intMathPrimary       go to state 79
    floatMathExpression  go to state 122
    floatMathTerm        go to state 81
    floatMathFactor      go to state 82
    logicalExpression    go to state 190
    logicalTerm          go to state 85
    logicalFactor        go to state 86
    logicalPrimary       go to state 87


State 116

  136 switchStatement: SWITCH LEFT_PARENTHESIS IDENTIFIER . RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@11 caseStatement RIGHT_CURLY_BRACE

    RIGHT_PARENTHESIS  shift, and go to state 191


State 117

  158 continueBreakStatement: CONTINUE IDENTIFIER ';' .

    $default  reduce using rule 158 (continueBreakStatement)


State 118

  155 continueBreakStatement: BREAK IDENTIFIER ';' .

    $default  reduce using rule 155 (continueBreakStatement)


State 119

   74 intMathPrimary: LEFT_PARENTHESIS . intMathExpression RIGHT_PARENTHESIS
   83 floatMathFactor: LEFT_PARENTHESIS . floatMathExpression RIGHT_PARENTHESIS
  106 logicalPrimary: LEFT_PARENTHESIS . logicalExpression RIGHT_PARENTHESIS

    NOT               shift, and go to state 67
    LEFT_PARENTHESIS  shift, and go to state 119
    IDENTIFIER        shift, and go to state 120
    DIGIT             shift, and go to state 70
    FLOAT_LITERAL     shift, and go to state 71
    BOOL_LITERAL      shift, and go to state 73

    intMathExpression    go to state 126
    intMathTerm          go to state 77
    intMathFactor        go to state 78
    intMathPrimary       go to state 79
    floatMathExpression  go to state 127
    floatMathTerm        go to state 81
    floatMathFactor      go to state 82
    logicalExpression    go to state 129
    logicalTerm          go to state 85
    logicalFactor        go to state 86
    logicalPrimary       go to state 87


State 120

   70 intMathFactor: IDENTIFIER . INCREMENT
   71              | IDENTIFIER . DECREMENT
   72 intMathPrimary: IDENTIFIER .
   81 floatMathFactor: IDENTIFIER .
  108 logicalPrimary: IDENTIFIER .

    INCREMENT  shift, and go to state 130
    DECREMENT  shift, and go to state 131

    PLUS               reduce using rule 72 (intMathPrimary)
    PLUS               [reduce using rule 81 (floatMathFactor)]
    MINUS              reduce using rule 72 (intMathPrimary)
    MINUS              [reduce using rule 81 (floatMathFactor)]
    MULTIPLY           reduce using rule 72 (intMathPrimary)
    MULTIPLY           [reduce using rule 81 (floatMathFactor)]
    DIVIDE             reduce using rule 72 (intMathPrimary)
    DIVIDE             [reduce using rule 81 (floatMathFactor)]
    GREATER            reduce using rule 72 (intMathPrimary)
    GREATER            [reduce using rule 81 (floatMathFactor)]
    LESS               reduce using rule 72 (intMathPrimary)
    LESS               [reduce using rule 81 (floatMathFactor)]
    GREATER_EQUAL      reduce using rule 72 (intMathPrimary)
    GREATER_EQUAL      [reduce using rule 81 (floatMathFactor)]
    LESS_EQUAL         reduce using rule 72 (intMathPrimary)
    LESS_EQUAL         [reduce using rule 81 (floatMathFactor)]
    EQUAL              reduce using rule 72 (intMathPrimary)
    EQUAL              [reduce using rule 81 (floatMathFactor)]
    NOT_EQUAL          reduce using rule 72 (intMathPrimary)
    NOT_EQUAL          [reduce using rule 81 (floatMathFactor)]
    AND                reduce using rule 108 (logicalPrimary)
    OR                 reduce using rule 108 (logicalPrimary)
    RIGHT_PARENTHESIS  reduce using rule 72 (intMathPrimary)
    RIGHT_PARENTHESIS  [reduce using rule 81 (floatMathFactor)]
    RIGHT_PARENTHESIS  [reduce using rule 108 (logicalPrimary)]
    ';'                reduce using rule 108 (logicalPrimary)
    ','                reduce using rule 108 (logicalPrimary)
    $default           reduce using rule 72 (intMathPrimary)


State 121

   62 intMathExpression: intMathExpression . PLUS intMathTerm
   63                  | intMathExpression . MINUS intMathTerm
   94 logicalPrimary: intMathExpression . GREATER intMathExpression
   95               | intMathExpression . LESS intMathExpression
   96               | intMathExpression . GREATER_EQUAL intMathExpression
   97               | intMathExpression . LESS_EQUAL intMathExpression
   98               | intMathExpression . EQUAL intMathExpression
   99               | intMathExpression . NOT_EQUAL intMathExpression

    PLUS           shift, and go to state 133
    MINUS          shift, and go to state 134
    GREATER        shift, and go to state 135
    LESS           shift, and go to state 136
    GREATER_EQUAL  shift, and go to state 137
    LESS_EQUAL     shift, and go to state 138
    EQUAL          shift, and go to state 139
    NOT_EQUAL      shift, and go to state 140


State 122

   75 floatMathExpression: floatMathExpression . PLUS floatMathTerm
   76                    | floatMathExpression . MINUS floatMathTerm
  100 logicalPrimary: floatMathExpression . GREATER floatMathExpression
  101               | floatMathExpression . LESS floatMathExpression
  102               | floatMathExpression . GREATER_EQUAL floatMathExpression
  103               | floatMathExpression . LESS_EQUAL floatMathExpression
  104               | floatMathExpression . EQUAL floatMathExpression
  105               | floatMathExpression . NOT_EQUAL floatMathExpression

    PLUS           shift, and go to state 144
    MINUS          shift, and go to state 145
    GREATER        shift, and go to state 146
    LESS           shift, and go to state 147
    GREATER_EQUAL  shift, and go to state 148
    LESS_EQUAL     shift, and go to state 149
    EQUAL          shift, and go to state 150
    NOT_EQUAL      shift, and go to state 151


State 123

   89 logicalExpression: logicalExpression . OR logicalTerm
  119 whileStatement: WHILE LEFT_PARENTHESIS logicalExpression . RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@8 blockStatements RIGHT_CURLY_BRACE

    OR                 shift, and go to state 155
    RIGHT_PARENTHESIS  shift, and go to state 192


State 124

  134 forStatement: FOR LEFT_PARENTHESIS $@10 . forDeclaration logicalExpression ';' forAssignment RIGHT_PARENTHESIS LEFT_CURLY_BRACE blockStatements RIGHT_CURLY_BRACE

    INT         shift, and go to state 193
    CHAR        shift, and go to state 194
    FLOAT       shift, and go to state 195
    STRING      shift, and go to state 196
    BOOL        shift, and go to state 197
    IDENTIFIER  shift, and go to state 198

    assignVariableDeclaration              go to state 199
    noSemiColumnAssignVariableDeclaration  go to state 27
    forDeclaration                         go to state 200


State 125

   93 logicalFactor: NOT logicalFactor .

    $default  reduce using rule 93 (logicalFactor)


State 126

   62 intMathExpression: intMathExpression . PLUS intMathTerm
   63                  | intMathExpression . MINUS intMathTerm
   74 intMathPrimary: LEFT_PARENTHESIS intMathExpression . RIGHT_PARENTHESIS
   94 logicalPrimary: intMathExpression . GREATER intMathExpression
   95               | intMathExpression . LESS intMathExpression
   96               | intMathExpression . GREATER_EQUAL intMathExpression
   97               | intMathExpression . LESS_EQUAL intMathExpression
   98               | intMathExpression . EQUAL intMathExpression
   99               | intMathExpression . NOT_EQUAL intMathExpression

    PLUS               shift, and go to state 133
    MINUS              shift, and go to state 134
    GREATER            shift, and go to state 135
    LESS               shift, and go to state 136
    GREATER_EQUAL      shift, and go to state 137
    LESS_EQUAL         shift, and go to state 138
    EQUAL              shift, and go to state 139
    NOT_EQUAL          shift, and go to state 140
    RIGHT_PARENTHESIS  shift, and go to state 201


State 127

   75 floatMathExpression: floatMathExpression . PLUS floatMathTerm
   76                    | floatMathExpression . MINUS floatMathTerm
   83 floatMathFactor: LEFT_PARENTHESIS floatMathExpression . RIGHT_PARENTHESIS
  100 logicalPrimary: floatMathExpression . GREATER floatMathExpression
  101               | floatMathExpression . LESS floatMathExpression
  102               | floatMathExpression . GREATER_EQUAL floatMathExpression
  103               | floatMathExpression . LESS_EQUAL floatMathExpression
  104               | floatMathExpression . EQUAL floatMathExpression
  105               | floatMathExpression . NOT_EQUAL floatMathExpression

    PLUS               shift, and go to state 144
    MINUS              shift, and go to state 145
    GREATER            shift, and go to state 146
    LESS               shift, and go to state 147
    GREATER_EQUAL      shift, and go to state 148
    LESS_EQUAL         shift, and go to state 149
    EQUAL              shift, and go to state 150
    NOT_EQUAL          shift, and go to state 151
    RIGHT_PARENTHESIS  shift, and go to state 202


State 128

   86 stringExpression: stringExpression . PLUS stringExpression
   87                 | LEFT_PARENTHESIS stringExpression . RIGHT_PARENTHESIS

    PLUS               shift, and go to state 154
    RIGHT_PARENTHESIS  shift, and go to state 203


State 129

   89 logicalExpression: logicalExpression . OR logicalTerm
  106 logicalPrimary: LEFT_PARENTHESIS logicalExpression . RIGHT_PARENTHESIS

    OR                 shift, and go to state 155
    RIGHT_PARENTHESIS  shift, and go to state 204


State 130

   70 intMathFactor: IDENTIFIER INCREMENT .

    $default  reduce using rule 70 (intMathFactor)


State 131

   71 intMathFactor: IDENTIFIER DECREMENT .

    $default  reduce using rule 71 (intMathFactor)


State 132

  164 argument: expression ',' . argument

    NOT               shift, and go to state 67
    LEFT_PARENTHESIS  shift, and go to state 68
    IDENTIFIER        shift, and go to state 69
    DIGIT             shift, and go to state 70
    FLOAT_LITERAL     shift, and go to state 71
    STRING_LITERAL    shift, and go to state 72
    BOOL_LITERAL      shift, and go to state 73

    expression           go to state 75
    intMathExpression    go to state 76
    intMathTerm          go to state 77
    intMathFactor        go to state 78
    intMathPrimary       go to state 79
    floatMathExpression  go to state 80
    floatMathTerm        go to state 81
    floatMathFactor      go to state 82
    stringExpression     go to state 83
    logicalExpression    go to state 84
    logicalTerm          go to state 85
    logicalFactor        go to state 86
    logicalPrimary       go to state 87
    argument             go to state 205


State 133

   62 intMathExpression: intMathExpression PLUS . intMathTerm

    LEFT_PARENTHESIS  shift, and go to state 173
    IDENTIFIER        shift, and go to state 174
    DIGIT             shift, and go to state 70

    intMathTerm     go to state 206
    intMathFactor   go to state 78
    intMathPrimary  go to state 79


State 134

   63 intMathExpression: intMathExpression MINUS . intMathTerm

    LEFT_PARENTHESIS  shift, and go to state 173
    IDENTIFIER        shift, and go to state 174
    DIGIT             shift, and go to state 70

    intMathTerm     go to state 207
    intMathFactor   go to state 78
    intMathPrimary  go to state 79


State 135

   94 logicalPrimary: intMathExpression GREATER . intMathExpression

    LEFT_PARENTHESIS  shift, and go to state 173
    IDENTIFIER        shift, and go to state 174
    DIGIT             shift, and go to state 70

    intMathExpression  go to state 208
    intMathTerm        go to state 77
    intMathFactor      go to state 78
    intMathPrimary     go to state 79


State 136

   95 logicalPrimary: intMathExpression LESS . intMathExpression

    LEFT_PARENTHESIS  shift, and go to state 173
    IDENTIFIER        shift, and go to state 174
    DIGIT             shift, and go to state 70

    intMathExpression  go to state 209
    intMathTerm        go to state 77
    intMathFactor      go to state 78
    intMathPrimary     go to state 79


State 137

   96 logicalPrimary: intMathExpression GREATER_EQUAL . intMathExpression

    LEFT_PARENTHESIS  shift, and go to state 173
    IDENTIFIER        shift, and go to state 174
    DIGIT             shift, and go to state 70

    intMathExpression  go to state 210
    intMathTerm        go to state 77
    intMathFactor      go to state 78
    intMathPrimary     go to state 79


State 138

   97 logicalPrimary: intMathExpression LESS_EQUAL . intMathExpression

    LEFT_PARENTHESIS  shift, and go to state 173
    IDENTIFIER        shift, and go to state 174
    DIGIT             shift, and go to state 70

    intMathExpression  go to state 211
    intMathTerm        go to state 77
    intMathFactor      go to state 78
    intMathPrimary     go to state 79


State 139

   98 logicalPrimary: intMathExpression EQUAL . intMathExpression

    LEFT_PARENTHESIS  shift, and go to state 173
    IDENTIFIER        shift, and go to state 174
    DIGIT             shift, and go to state 70

    intMathExpression  go to state 212
    intMathTerm        go to state 77
    intMathFactor      go to state 78
    intMathPrimary     go to state 79


State 140

   99 logicalPrimary: intMathExpression NOT_EQUAL . intMathExpression

    LEFT_PARENTHESIS  shift, and go to state 173
    IDENTIFIER        shift, and go to state 174
    DIGIT             shift, and go to state 70

    intMathExpression  go to state 213
    intMathTerm        go to state 77
    intMathFactor      go to state 78
    intMathPrimary     go to state 79


State 141

   65 intMathTerm: intMathTerm MULTIPLY . intMathFactor

    LEFT_PARENTHESIS  shift, and go to state 173
    IDENTIFIER        shift, and go to state 174
    DIGIT             shift, and go to state 70

    intMathFactor   go to state 214
    intMathPrimary  go to state 79


State 142

   66 intMathTerm: intMathTerm DIVIDE . intMathFactor

    LEFT_PARENTHESIS  shift, and go to state 173
    IDENTIFIER        shift, and go to state 174
    DIGIT             shift, and go to state 70

    intMathFactor   go to state 215
    intMathPrimary  go to state 79


State 143

   67 intMathTerm: intMathTerm MODULO . intMathFactor

    LEFT_PARENTHESIS  shift, and go to state 173
    IDENTIFIER        shift, and go to state 174
    DIGIT             shift, and go to state 70

    intMathFactor   go to state 216
    intMathPrimary  go to state 79


State 144

   75 floatMathExpression: floatMathExpression PLUS . floatMathTerm

    LEFT_PARENTHESIS  shift, and go to state 177
    IDENTIFIER        shift, and go to state 178
    FLOAT_LITERAL     shift, and go to state 71

    floatMathTerm    go to state 217
    floatMathFactor  go to state 82


State 145

   76 floatMathExpression: floatMathExpression MINUS . floatMathTerm

    LEFT_PARENTHESIS  shift, and go to state 177
    IDENTIFIER        shift, and go to state 178
    FLOAT_LITERAL     shift, and go to state 71

    floatMathTerm    go to state 218
    floatMathFactor  go to state 82


State 146

  100 logicalPrimary: floatMathExpression GREATER . floatMathExpression

    LEFT_PARENTHESIS  shift, and go to state 177
    IDENTIFIER        shift, and go to state 178
    FLOAT_LITERAL     shift, and go to state 71

    floatMathExpression  go to state 219
    floatMathTerm        go to state 81
    floatMathFactor      go to state 82


State 147

  101 logicalPrimary: floatMathExpression LESS . floatMathExpression

    LEFT_PARENTHESIS  shift, and go to state 177
    IDENTIFIER        shift, and go to state 178
    FLOAT_LITERAL     shift, and go to state 71

    floatMathExpression  go to state 220
    floatMathTerm        go to state 81
    floatMathFactor      go to state 82


State 148

  102 logicalPrimary: floatMathExpression GREATER_EQUAL . floatMathExpression

    LEFT_PARENTHESIS  shift, and go to state 177
    IDENTIFIER        shift, and go to state 178
    FLOAT_LITERAL     shift, and go to state 71

    floatMathExpression  go to state 221
    floatMathTerm        go to state 81
    floatMathFactor      go to state 82


State 149

  103 logicalPrimary: floatMathExpression LESS_EQUAL . floatMathExpression

    LEFT_PARENTHESIS  shift, and go to state 177
    IDENTIFIER        shift, and go to state 178
    FLOAT_LITERAL     shift, and go to state 71

    floatMathExpression  go to state 222
    floatMathTerm        go to state 81
    floatMathFactor      go to state 82


State 150

  104 logicalPrimary: floatMathExpression EQUAL . floatMathExpression

    LEFT_PARENTHESIS  shift, and go to state 177
    IDENTIFIER        shift, and go to state 178
    FLOAT_LITERAL     shift, and go to state 71

    floatMathExpression  go to state 223
    floatMathTerm        go to state 81
    floatMathFactor      go to state 82


State 151

  105 logicalPrimary: floatMathExpression NOT_EQUAL . floatMathExpression

    LEFT_PARENTHESIS  shift, and go to state 177
    IDENTIFIER        shift, and go to state 178
    FLOAT_LITERAL     shift, and go to state 71

    floatMathExpression  go to state 224
    floatMathTerm        go to state 81
    floatMathFactor      go to state 82


State 152

   78 floatMathTerm: floatMathTerm MULTIPLY . floatMathFactor

    LEFT_PARENTHESIS  shift, and go to state 177
    IDENTIFIER        shift, and go to state 178
    FLOAT_LITERAL     shift, and go to state 71

    floatMathFactor  go to state 225


State 153

   79 floatMathTerm: floatMathTerm DIVIDE . floatMathFactor

    LEFT_PARENTHESIS  shift, and go to state 177
    IDENTIFIER        shift, and go to state 178
    FLOAT_LITERAL     shift, and go to state 71

    floatMathFactor  go to state 226


State 154

   86 stringExpression: stringExpression PLUS . stringExpression

    LEFT_PARENTHESIS  shift, and go to state 180
    IDENTIFIER        shift, and go to state 181
    STRING_LITERAL    shift, and go to state 72

    stringExpression  go to state 227


State 155

   89 logicalExpression: logicalExpression OR . logicalTerm

    NOT               shift, and go to state 67
    LEFT_PARENTHESIS  shift, and go to state 119
    IDENTIFIER        shift, and go to state 120
    DIGIT             shift, and go to state 70
    FLOAT_LITERAL     shift, and go to state 71
    BOOL_LITERAL      shift, and go to state 73

    intMathExpression    go to state 121
    intMathTerm          go to state 77
    intMathFactor        go to state 78
    intMathPrimary       go to state 79
    floatMathExpression  go to state 122
    floatMathTerm        go to state 81
    floatMathFactor      go to state 82
    logicalTerm          go to state 228
    logicalFactor        go to state 86
    logicalPrimary       go to state 87


State 156

   91 logicalTerm: logicalTerm AND . logicalFactor

    NOT               shift, and go to state 67
    LEFT_PARENTHESIS  shift, and go to state 119
    IDENTIFIER        shift, and go to state 120
    DIGIT             shift, and go to state 70
    FLOAT_LITERAL     shift, and go to state 71
    BOOL_LITERAL      shift, and go to state 73

    intMathExpression    go to state 121
    intMathTerm          go to state 77
    intMathFactor        go to state 78
    intMathPrimary       go to state 79
    floatMathExpression  go to state 122
    floatMathTerm        go to state 81
    floatMathFactor      go to state 82
    logicalFactor        go to state 229
    logicalPrimary       go to state 87


State 157

  152 returnStatement: RETURN argument ';' .

    $default  reduce using rule 152 (returnStatement)


State 158

  121 repeatStatement: REPEAT LEFT_CURLY_BRACE $@9 . blockStatements RIGHT_CURLY_BRACE UNTIL LEFT_PARENTHESIS logicalExpression RIGHT_PARENTHESIS

    INT         shift, and go to state 1
    CHAR        shift, and go to state 2
    FLOAT       shift, and go to state 3
    STRING      shift, and go to state 4
    CONST       shift, and go to state 5
    BOOL        shift, and go to state 6
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    CONTINUE    shift, and go to state 9
    BREAK       shift, and go to state 10
    WHILE       shift, and go to state 11
    FOR         shift, and go to state 12
    RETURN      shift, and go to state 13
    REPEAT      shift, and go to state 14
    ENUM        shift, and go to state 15
    PRINT       shift, and go to state 18
    COMMENT     shift, and go to state 19
    IDENTIFIER  shift, and go to state 20

    blockStatements                           go to state 230
    blockStatement                            go to state 24
    variableDeclarationStatement              go to state 25
    assignVariableDeclaration                 go to state 26
    noSemiColumnAssignVariableDeclaration     go to state 27
    nonAssignVariableDeclaration              go to state 28
    noSemiColumnNonAssignVariableDeclaration  go to state 29
    constDeclarationStatement                 go to state 30
    noSemiColumnConstDeclaration              go to state 31
    assignmentStatement                       go to state 32
    incStatement                              go to state 33
    decStatement                              go to state 34
    ifStatement                               go to state 35
    whileStatement                            go to state 36
    repeatStatement                           go to state 37
    forStatement                              go to state 38
    switchStatement                           go to state 39
    enumStatement                             go to state 40
    returnStatement                           go to state 42
    continueBreakStatement                    go to state 43
    printStatement                            go to state 44
    functionCallStatement                     go to state 45
    comment                                   go to state 46


State 159

  144 enumStatement: ENUM IDENTIFIER LEFT_CURLY_BRACE . $@12 enumIdentifiers RIGHT_CURLY_BRACE

    $default  reduce using rule 143 ($@12)

    $@12  go to state 231


State 160

  146 functionStatement: FUNCTION IDENTIFIER LEFT_PARENTHESIS . $@13 parameter RIGHT_PARENTHESIS LEFT_CURLY_BRACE blockStatements RIGHT_CURLY_BRACE

    $default  reduce using rule 145 ($@13)

    $@13  go to state 232


State 161

  169 main: MAIN $@14 LEFT_PARENTHESIS . RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@15 blockStatements RIGHT_CURLY_BRACE

    RIGHT_PARENTHESIS  shift, and go to state 233


State 162

  161 printStatement: PRINT LEFT_PARENTHESIS RIGHT_PARENTHESIS . ';'

    ';'  shift, and go to state 234


State 163

  160 printStatement: PRINT LEFT_PARENTHESIS argument . RIGHT_PARENTHESIS ';'

    RIGHT_PARENTHESIS  shift, and go to state 235


State 164

   60 incStatement: IDENTIFIER INCREMENT ';' .

    $default  reduce using rule 60 (incStatement)


State 165

   61 decStatement: IDENTIFIER DECREMENT ';' .

    $default  reduce using rule 61 (decStatement)


State 166

   59 assignmentStatement: IDENTIFIER ASSIGN CHAR_LITERAL . ';'

    ';'  shift, and go to state 236


State 167

   55 assignmentStatement: IDENTIFIER ASSIGN intMathExpression . ';'
   62 intMathExpression: intMathExpression . PLUS intMathTerm
   63                  | intMathExpression . MINUS intMathTerm
   94 logicalPrimary: intMathExpression . GREATER intMathExpression
   95               | intMathExpression . LESS intMathExpression
   96               | intMathExpression . GREATER_EQUAL intMathExpression
   97               | intMathExpression . LESS_EQUAL intMathExpression
   98               | intMathExpression . EQUAL intMathExpression
   99               | intMathExpression . NOT_EQUAL intMathExpression

    PLUS           shift, and go to state 133
    MINUS          shift, and go to state 134
    GREATER        shift, and go to state 135
    LESS           shift, and go to state 136
    GREATER_EQUAL  shift, and go to state 137
    LESS_EQUAL     shift, and go to state 138
    EQUAL          shift, and go to state 139
    NOT_EQUAL      shift, and go to state 140
    ';'            shift, and go to state 237


State 168

   56 assignmentStatement: IDENTIFIER ASSIGN floatMathExpression . ';'
   75 floatMathExpression: floatMathExpression . PLUS floatMathTerm
   76                    | floatMathExpression . MINUS floatMathTerm
  100 logicalPrimary: floatMathExpression . GREATER floatMathExpression
  101               | floatMathExpression . LESS floatMathExpression
  102               | floatMathExpression . GREATER_EQUAL floatMathExpression
  103               | floatMathExpression . LESS_EQUAL floatMathExpression
  104               | floatMathExpression . EQUAL floatMathExpression
  105               | floatMathExpression . NOT_EQUAL floatMathExpression

    PLUS           shift, and go to state 144
    MINUS          shift, and go to state 145
    GREATER        shift, and go to state 146
    LESS           shift, and go to state 147
    GREATER_EQUAL  shift, and go to state 148
    LESS_EQUAL     shift, and go to state 149
    EQUAL          shift, and go to state 150
    NOT_EQUAL      shift, and go to state 151
    ';'            shift, and go to state 238


State 169

   57 assignmentStatement: IDENTIFIER ASSIGN stringExpression . ';'
   86 stringExpression: stringExpression . PLUS stringExpression

    PLUS  shift, and go to state 154
    ';'   shift, and go to state 239


State 170

   58 assignmentStatement: IDENTIFIER ASSIGN logicalExpression . ';'
   89 logicalExpression: logicalExpression . OR logicalTerm

    OR   shift, and go to state 155
    ';'  shift, and go to state 240


State 171

  163 functionCallStatement: IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS . ';'

    ';'  shift, and go to state 241


State 172

  162 functionCallStatement: IDENTIFIER LEFT_PARENTHESIS argument . RIGHT_PARENTHESIS ';'

    RIGHT_PARENTHESIS  shift, and go to state 242


State 173

   74 intMathPrimary: LEFT_PARENTHESIS . intMathExpression RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 173
    IDENTIFIER        shift, and go to state 174
    DIGIT             shift, and go to state 70

    intMathExpression  go to state 243
    intMathTerm        go to state 77
    intMathFactor      go to state 78
    intMathPrimary     go to state 79


State 174

   70 intMathFactor: IDENTIFIER . INCREMENT
   71              | IDENTIFIER . DECREMENT
   72 intMathPrimary: IDENTIFIER .

    INCREMENT  shift, and go to state 130
    DECREMENT  shift, and go to state 131

    $default  reduce using rule 72 (intMathPrimary)


State 175

   39 noSemiColumnAssignVariableDeclaration: INT IDENTIFIER ASSIGN intMathExpression .
   62 intMathExpression: intMathExpression . PLUS intMathTerm
   63                  | intMathExpression . MINUS intMathTerm

    PLUS   shift, and go to state 133
    MINUS  shift, and go to state 134

    $default  reduce using rule 39 (noSemiColumnAssignVariableDeclaration)


State 176

   38 noSemiColumnAssignVariableDeclaration: CHAR IDENTIFIER ASSIGN CHAR_LITERAL .

    $default  reduce using rule 38 (noSemiColumnAssignVariableDeclaration)


State 177

   83 floatMathFactor: LEFT_PARENTHESIS . floatMathExpression RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 177
    IDENTIFIER        shift, and go to state 178
    FLOAT_LITERAL     shift, and go to state 71

    floatMathExpression  go to state 244
    floatMathTerm        go to state 81
    floatMathFactor      go to state 82


State 178

   81 floatMathFactor: IDENTIFIER .

    $default  reduce using rule 81 (floatMathFactor)


State 179

   40 noSemiColumnAssignVariableDeclaration: FLOAT IDENTIFIER ASSIGN floatMathExpression .
   75 floatMathExpression: floatMathExpression . PLUS floatMathTerm
   76                    | floatMathExpression . MINUS floatMathTerm

    PLUS   shift, and go to state 144
    MINUS  shift, and go to state 145

    $default  reduce using rule 40 (noSemiColumnAssignVariableDeclaration)


State 180

   87 stringExpression: LEFT_PARENTHESIS . stringExpression RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 180
    IDENTIFIER        shift, and go to state 181
    STRING_LITERAL    shift, and go to state 72

    stringExpression  go to state 128


State 181

   85 stringExpression: IDENTIFIER .

    $default  reduce using rule 85 (stringExpression)


State 182

   41 noSemiColumnAssignVariableDeclaration: STRING IDENTIFIER ASSIGN stringExpression .
   86 stringExpression: stringExpression . PLUS stringExpression

    PLUS  shift, and go to state 154

    $default  reduce using rule 41 (noSemiColumnAssignVariableDeclaration)


State 183

   51 noSemiColumnConstDeclaration: CONST INT IDENTIFIER ASSIGN . intMathExpression

    LEFT_PARENTHESIS  shift, and go to state 173
    IDENTIFIER        shift, and go to state 174
    DIGIT             shift, and go to state 70

    intMathExpression  go to state 245
    intMathTerm        go to state 77
    intMathFactor      go to state 78
    intMathPrimary     go to state 79


State 184

   50 noSemiColumnConstDeclaration: CONST CHAR IDENTIFIER ASSIGN . CHAR_LITERAL

    CHAR_LITERAL  shift, and go to state 246


State 185

   52 noSemiColumnConstDeclaration: CONST FLOAT IDENTIFIER ASSIGN . floatMathExpression

    LEFT_PARENTHESIS  shift, and go to state 177
    IDENTIFIER        shift, and go to state 178
    FLOAT_LITERAL     shift, and go to state 71

    floatMathExpression  go to state 247
    floatMathTerm        go to state 81
    floatMathFactor      go to state 82


State 186

   53 noSemiColumnConstDeclaration: CONST STRING IDENTIFIER ASSIGN . stringExpression

    LEFT_PARENTHESIS  shift, and go to state 180
    IDENTIFIER        shift, and go to state 181
    STRING_LITERAL    shift, and go to state 72

    stringExpression  go to state 248


State 187

   54 noSemiColumnConstDeclaration: CONST BOOL IDENTIFIER ASSIGN . logicalExpression

    NOT               shift, and go to state 67
    LEFT_PARENTHESIS  shift, and go to state 119
    IDENTIFIER        shift, and go to state 120
    DIGIT             shift, and go to state 70
    FLOAT_LITERAL     shift, and go to state 71
    BOOL_LITERAL      shift, and go to state 73

    intMathExpression    go to state 121
    intMathTerm          go to state 77
    intMathFactor        go to state 78
    intMathPrimary       go to state 79
    floatMathExpression  go to state 122
    floatMathTerm        go to state 81
    floatMathFactor      go to state 82
    logicalExpression    go to state 249
    logicalTerm          go to state 85
    logicalFactor        go to state 86
    logicalPrimary       go to state 87


State 188

   42 noSemiColumnAssignVariableDeclaration: BOOL IDENTIFIER ASSIGN logicalExpression .
   89 logicalExpression: logicalExpression . OR logicalTerm

    OR  shift, and go to state 155

    $default  reduce using rule 42 (noSemiColumnAssignVariableDeclaration)


State 189

   89 logicalExpression: logicalExpression . OR logicalTerm
  111 ifStatement: IF $@1 LEFT_PARENTHESIS logicalExpression . RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@2 blockStatements RIGHT_CURLY_BRACE

    OR                 shift, and go to state 155
    RIGHT_PARENTHESIS  shift, and go to state 250


State 190

   89 logicalExpression: logicalExpression . OR logicalTerm
  117 ifStatement: IF $@3 LEFT_PARENTHESIS logicalExpression . RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@4 blockStatements RIGHT_CURLY_BRACE $@5 ELSE $@6 LEFT_CURLY_BRACE $@7 blockStatements RIGHT_CURLY_BRACE

    OR                 shift, and go to state 155
    RIGHT_PARENTHESIS  shift, and go to state 251


State 191

  136 switchStatement: SWITCH LEFT_PARENTHESIS IDENTIFIER RIGHT_PARENTHESIS . LEFT_CURLY_BRACE $@11 caseStatement RIGHT_CURLY_BRACE

    LEFT_CURLY_BRACE  shift, and go to state 252


State 192

  119 whileStatement: WHILE LEFT_PARENTHESIS logicalExpression RIGHT_PARENTHESIS . LEFT_CURLY_BRACE $@8 blockStatements RIGHT_CURLY_BRACE

    LEFT_CURLY_BRACE  shift, and go to state 253


State 193

   39 noSemiColumnAssignVariableDeclaration: INT . IDENTIFIER ASSIGN intMathExpression

    IDENTIFIER  shift, and go to state 254


State 194

   38 noSemiColumnAssignVariableDeclaration: CHAR . IDENTIFIER ASSIGN CHAR_LITERAL

    IDENTIFIER  shift, and go to state 255


State 195

   40 noSemiColumnAssignVariableDeclaration: FLOAT . IDENTIFIER ASSIGN floatMathExpression

    IDENTIFIER  shift, and go to state 256


State 196

   41 noSemiColumnAssignVariableDeclaration: STRING . IDENTIFIER ASSIGN stringExpression

    IDENTIFIER  shift, and go to state 257


State 197

   42 noSemiColumnAssignVariableDeclaration: BOOL . IDENTIFIER ASSIGN logicalExpression

    IDENTIFIER  shift, and go to state 258


State 198

  128 forDeclaration: IDENTIFIER . ASSIGN intMathExpression ';'
  129               | IDENTIFIER . ASSIGN floatMathExpression ';'
  130               | IDENTIFIER . ASSIGN stringExpression ';'
  131               | IDENTIFIER . ASSIGN BOOL_LITERAL ';'

    ASSIGN  shift, and go to state 259


State 199

  132 forDeclaration: assignVariableDeclaration .

    $default  reduce using rule 132 (forDeclaration)


State 200

  134 forStatement: FOR LEFT_PARENTHESIS $@10 forDeclaration . logicalExpression ';' forAssignment RIGHT_PARENTHESIS LEFT_CURLY_BRACE blockStatements RIGHT_CURLY_BRACE

    NOT               shift, and go to state 67
    LEFT_PARENTHESIS  shift, and go to state 119
    IDENTIFIER        shift, and go to state 120
    DIGIT             shift, and go to state 70
    FLOAT_LITERAL     shift, and go to state 71
    BOOL_LITERAL      shift, and go to state 73

    intMathExpression    go to state 121
    intMathTerm          go to state 77
    intMathFactor        go to state 78
    intMathPrimary       go to state 79
    floatMathExpression  go to state 122
    floatMathTerm        go to state 81
    floatMathFactor      go to state 82
    logicalExpression    go to state 260
    logicalTerm          go to state 85
    logicalFactor        go to state 86
    logicalPrimary       go to state 87


State 201

   74 intMathPrimary: LEFT_PARENTHESIS intMathExpression RIGHT_PARENTHESIS .

    $default  reduce using rule 74 (intMathPrimary)


State 202

   83 floatMathFactor: LEFT_PARENTHESIS floatMathExpression RIGHT_PARENTHESIS .

    $default  reduce using rule 83 (floatMathFactor)


State 203

   87 stringExpression: LEFT_PARENTHESIS stringExpression RIGHT_PARENTHESIS .

    $default  reduce using rule 87 (stringExpression)


State 204

  106 logicalPrimary: LEFT_PARENTHESIS logicalExpression RIGHT_PARENTHESIS .

    $default  reduce using rule 106 (logicalPrimary)


State 205

  164 argument: expression ',' argument .

    $default  reduce using rule 164 (argument)


State 206

   62 intMathExpression: intMathExpression PLUS intMathTerm .
   65 intMathTerm: intMathTerm . MULTIPLY intMathFactor
   66            | intMathTerm . DIVIDE intMathFactor
   67            | intMathTerm . MODULO intMathFactor

    MULTIPLY  shift, and go to state 141
    DIVIDE    shift, and go to state 142
    MODULO    shift, and go to state 143

    $default  reduce using rule 62 (intMathExpression)


State 207

   63 intMathExpression: intMathExpression MINUS intMathTerm .
   65 intMathTerm: intMathTerm . MULTIPLY intMathFactor
   66            | intMathTerm . DIVIDE intMathFactor
   67            | intMathTerm . MODULO intMathFactor

    MULTIPLY  shift, and go to state 141
    DIVIDE    shift, and go to state 142
    MODULO    shift, and go to state 143

    $default  reduce using rule 63 (intMathExpression)


State 208

   62 intMathExpression: intMathExpression . PLUS intMathTerm
   63                  | intMathExpression . MINUS intMathTerm
   94 logicalPrimary: intMathExpression GREATER intMathExpression .

    PLUS   shift, and go to state 133
    MINUS  shift, and go to state 134

    $default  reduce using rule 94 (logicalPrimary)


State 209

   62 intMathExpression: intMathExpression . PLUS intMathTerm
   63                  | intMathExpression . MINUS intMathTerm
   95 logicalPrimary: intMathExpression LESS intMathExpression .

    PLUS   shift, and go to state 133
    MINUS  shift, and go to state 134

    $default  reduce using rule 95 (logicalPrimary)


State 210

   62 intMathExpression: intMathExpression . PLUS intMathTerm
   63                  | intMathExpression . MINUS intMathTerm
   96 logicalPrimary: intMathExpression GREATER_EQUAL intMathExpression .

    PLUS   shift, and go to state 133
    MINUS  shift, and go to state 134

    $default  reduce using rule 96 (logicalPrimary)


State 211

   62 intMathExpression: intMathExpression . PLUS intMathTerm
   63                  | intMathExpression . MINUS intMathTerm
   97 logicalPrimary: intMathExpression LESS_EQUAL intMathExpression .

    PLUS   shift, and go to state 133
    MINUS  shift, and go to state 134

    $default  reduce using rule 97 (logicalPrimary)


State 212

   62 intMathExpression: intMathExpression . PLUS intMathTerm
   63                  | intMathExpression . MINUS intMathTerm
   98 logicalPrimary: intMathExpression EQUAL intMathExpression .

    PLUS   shift, and go to state 133
    MINUS  shift, and go to state 134

    $default  reduce using rule 98 (logicalPrimary)


State 213

   62 intMathExpression: intMathExpression . PLUS intMathTerm
   63                  | intMathExpression . MINUS intMathTerm
   99 logicalPrimary: intMathExpression NOT_EQUAL intMathExpression .

    PLUS   shift, and go to state 133
    MINUS  shift, and go to state 134

    $default  reduce using rule 99 (logicalPrimary)


State 214

   65 intMathTerm: intMathTerm MULTIPLY intMathFactor .

    $default  reduce using rule 65 (intMathTerm)


State 215

   66 intMathTerm: intMathTerm DIVIDE intMathFactor .

    $default  reduce using rule 66 (intMathTerm)


State 216

   67 intMathTerm: intMathTerm MODULO intMathFactor .

    $default  reduce using rule 67 (intMathTerm)


State 217

   75 floatMathExpression: floatMathExpression PLUS floatMathTerm .
   78 floatMathTerm: floatMathTerm . MULTIPLY floatMathFactor
   79              | floatMathTerm . DIVIDE floatMathFactor

    MULTIPLY  shift, and go to state 152
    DIVIDE    shift, and go to state 153

    $default  reduce using rule 75 (floatMathExpression)


State 218

   76 floatMathExpression: floatMathExpression MINUS floatMathTerm .
   78 floatMathTerm: floatMathTerm . MULTIPLY floatMathFactor
   79              | floatMathTerm . DIVIDE floatMathFactor

    MULTIPLY  shift, and go to state 152
    DIVIDE    shift, and go to state 153

    $default  reduce using rule 76 (floatMathExpression)


State 219

   75 floatMathExpression: floatMathExpression . PLUS floatMathTerm
   76                    | floatMathExpression . MINUS floatMathTerm
  100 logicalPrimary: floatMathExpression GREATER floatMathExpression .

    PLUS   shift, and go to state 144
    MINUS  shift, and go to state 145

    $default  reduce using rule 100 (logicalPrimary)


State 220

   75 floatMathExpression: floatMathExpression . PLUS floatMathTerm
   76                    | floatMathExpression . MINUS floatMathTerm
  101 logicalPrimary: floatMathExpression LESS floatMathExpression .

    PLUS   shift, and go to state 144
    MINUS  shift, and go to state 145

    $default  reduce using rule 101 (logicalPrimary)


State 221

   75 floatMathExpression: floatMathExpression . PLUS floatMathTerm
   76                    | floatMathExpression . MINUS floatMathTerm
  102 logicalPrimary: floatMathExpression GREATER_EQUAL floatMathExpression .

    PLUS   shift, and go to state 144
    MINUS  shift, and go to state 145

    $default  reduce using rule 102 (logicalPrimary)


State 222

   75 floatMathExpression: floatMathExpression . PLUS floatMathTerm
   76                    | floatMathExpression . MINUS floatMathTerm
  103 logicalPrimary: floatMathExpression LESS_EQUAL floatMathExpression .

    PLUS   shift, and go to state 144
    MINUS  shift, and go to state 145

    $default  reduce using rule 103 (logicalPrimary)


State 223

   75 floatMathExpression: floatMathExpression . PLUS floatMathTerm
   76                    | floatMathExpression . MINUS floatMathTerm
  104 logicalPrimary: floatMathExpression EQUAL floatMathExpression .

    PLUS   shift, and go to state 144
    MINUS  shift, and go to state 145

    $default  reduce using rule 104 (logicalPrimary)


State 224

   75 floatMathExpression: floatMathExpression . PLUS floatMathTerm
   76                    | floatMathExpression . MINUS floatMathTerm
  105 logicalPrimary: floatMathExpression NOT_EQUAL floatMathExpression .

    PLUS   shift, and go to state 144
    MINUS  shift, and go to state 145

    $default  reduce using rule 105 (logicalPrimary)


State 225

   78 floatMathTerm: floatMathTerm MULTIPLY floatMathFactor .

    $default  reduce using rule 78 (floatMathTerm)


State 226

   79 floatMathTerm: floatMathTerm DIVIDE floatMathFactor .

    $default  reduce using rule 79 (floatMathTerm)


State 227

   86 stringExpression: stringExpression . PLUS stringExpression
   86                 | stringExpression PLUS stringExpression .

    PLUS  shift, and go to state 154

    PLUS      [reduce using rule 86 (stringExpression)]
    $default  reduce using rule 86 (stringExpression)


State 228

   89 logicalExpression: logicalExpression OR logicalTerm .
   91 logicalTerm: logicalTerm . AND logicalFactor

    AND  shift, and go to state 156

    $default  reduce using rule 89 (logicalExpression)


State 229

   91 logicalTerm: logicalTerm AND logicalFactor .

    $default  reduce using rule 91 (logicalTerm)


State 230

    7 blockStatements: blockStatements . blockStatement
  121 repeatStatement: REPEAT LEFT_CURLY_BRACE $@9 blockStatements . RIGHT_CURLY_BRACE UNTIL LEFT_PARENTHESIS logicalExpression RIGHT_PARENTHESIS

    INT                shift, and go to state 1
    CHAR               shift, and go to state 2
    FLOAT              shift, and go to state 3
    STRING             shift, and go to state 4
    CONST              shift, and go to state 5
    BOOL               shift, and go to state 6
    IF                 shift, and go to state 7
    SWITCH             shift, and go to state 8
    CONTINUE           shift, and go to state 9
    BREAK              shift, and go to state 10
    WHILE              shift, and go to state 11
    FOR                shift, and go to state 12
    RETURN             shift, and go to state 13
    REPEAT             shift, and go to state 14
    RIGHT_CURLY_BRACE  shift, and go to state 261
    ENUM               shift, and go to state 15
    PRINT              shift, and go to state 18
    COMMENT            shift, and go to state 19
    IDENTIFIER         shift, and go to state 20

    blockStatement                            go to state 100
    variableDeclarationStatement              go to state 25
    assignVariableDeclaration                 go to state 26
    noSemiColumnAssignVariableDeclaration     go to state 27
    nonAssignVariableDeclaration              go to state 28
    noSemiColumnNonAssignVariableDeclaration  go to state 29
    constDeclarationStatement                 go to state 30
    noSemiColumnConstDeclaration              go to state 31
    assignmentStatement                       go to state 32
    incStatement                              go to state 33
    decStatement                              go to state 34
    ifStatement                               go to state 35
    whileStatement                            go to state 36
    repeatStatement                           go to state 37
    forStatement                              go to state 38
    switchStatement                           go to state 39
    enumStatement                             go to state 40
    returnStatement                           go to state 42
    continueBreakStatement                    go to state 43
    printStatement                            go to state 44
    functionCallStatement                     go to state 45
    comment                                   go to state 46


State 231

  144 enumStatement: ENUM IDENTIFIER LEFT_CURLY_BRACE $@12 . enumIdentifiers RIGHT_CURLY_BRACE

    IDENTIFIER  shift, and go to state 262

    enumIdentifiers  go to state 263


State 232

  146 functionStatement: FUNCTION IDENTIFIER LEFT_PARENTHESIS $@13 . parameter RIGHT_PARENTHESIS LEFT_CURLY_BRACE blockStatements RIGHT_CURLY_BRACE

    INT     shift, and go to state 1
    CHAR    shift, and go to state 2
    FLOAT   shift, and go to state 3
    STRING  shift, and go to state 4
    CONST   shift, and go to state 5
    BOOL    shift, and go to state 6

    $default  reduce using rule 151 (parameter)

    noSemiColumnVariableDeclarationStatement  go to state 264
    noSemiColumnAssignVariableDeclaration     go to state 265
    noSemiColumnNonAssignVariableDeclaration  go to state 266
    noSemiColumnConstDeclaration              go to state 267
    parameter                                 go to state 268


State 233

  169 main: MAIN $@14 LEFT_PARENTHESIS RIGHT_PARENTHESIS . LEFT_CURLY_BRACE $@15 blockStatements RIGHT_CURLY_BRACE

    LEFT_CURLY_BRACE  shift, and go to state 269


State 234

  161 printStatement: PRINT LEFT_PARENTHESIS RIGHT_PARENTHESIS ';' .

    $default  reduce using rule 161 (printStatement)


State 235

  160 printStatement: PRINT LEFT_PARENTHESIS argument RIGHT_PARENTHESIS . ';'

    ';'  shift, and go to state 270


State 236

   59 assignmentStatement: IDENTIFIER ASSIGN CHAR_LITERAL ';' .

    $default  reduce using rule 59 (assignmentStatement)


State 237

   55 assignmentStatement: IDENTIFIER ASSIGN intMathExpression ';' .

    $default  reduce using rule 55 (assignmentStatement)


State 238

   56 assignmentStatement: IDENTIFIER ASSIGN floatMathExpression ';' .

    $default  reduce using rule 56 (assignmentStatement)


State 239

   57 assignmentStatement: IDENTIFIER ASSIGN stringExpression ';' .

    $default  reduce using rule 57 (assignmentStatement)


State 240

   58 assignmentStatement: IDENTIFIER ASSIGN logicalExpression ';' .

    $default  reduce using rule 58 (assignmentStatement)


State 241

  163 functionCallStatement: IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS ';' .

    $default  reduce using rule 163 (functionCallStatement)


State 242

  162 functionCallStatement: IDENTIFIER LEFT_PARENTHESIS argument RIGHT_PARENTHESIS . ';'

    ';'  shift, and go to state 271


State 243

   62 intMathExpression: intMathExpression . PLUS intMathTerm
   63                  | intMathExpression . MINUS intMathTerm
   74 intMathPrimary: LEFT_PARENTHESIS intMathExpression . RIGHT_PARENTHESIS

    PLUS               shift, and go to state 133
    MINUS              shift, and go to state 134
    RIGHT_PARENTHESIS  shift, and go to state 201


State 244

   75 floatMathExpression: floatMathExpression . PLUS floatMathTerm
   76                    | floatMathExpression . MINUS floatMathTerm
   83 floatMathFactor: LEFT_PARENTHESIS floatMathExpression . RIGHT_PARENTHESIS

    PLUS               shift, and go to state 144
    MINUS              shift, and go to state 145
    RIGHT_PARENTHESIS  shift, and go to state 202


State 245

   51 noSemiColumnConstDeclaration: CONST INT IDENTIFIER ASSIGN intMathExpression .
   62 intMathExpression: intMathExpression . PLUS intMathTerm
   63                  | intMathExpression . MINUS intMathTerm

    PLUS   shift, and go to state 133
    MINUS  shift, and go to state 134

    $default  reduce using rule 51 (noSemiColumnConstDeclaration)


State 246

   50 noSemiColumnConstDeclaration: CONST CHAR IDENTIFIER ASSIGN CHAR_LITERAL .

    $default  reduce using rule 50 (noSemiColumnConstDeclaration)


State 247

   52 noSemiColumnConstDeclaration: CONST FLOAT IDENTIFIER ASSIGN floatMathExpression .
   75 floatMathExpression: floatMathExpression . PLUS floatMathTerm
   76                    | floatMathExpression . MINUS floatMathTerm

    PLUS   shift, and go to state 144
    MINUS  shift, and go to state 145

    $default  reduce using rule 52 (noSemiColumnConstDeclaration)


State 248

   53 noSemiColumnConstDeclaration: CONST STRING IDENTIFIER ASSIGN stringExpression .
   86 stringExpression: stringExpression . PLUS stringExpression

    PLUS  shift, and go to state 154

    $default  reduce using rule 53 (noSemiColumnConstDeclaration)


State 249

   54 noSemiColumnConstDeclaration: CONST BOOL IDENTIFIER ASSIGN logicalExpression .
   89 logicalExpression: logicalExpression . OR logicalTerm

    OR  shift, and go to state 155

    $default  reduce using rule 54 (noSemiColumnConstDeclaration)


State 250

  111 ifStatement: IF $@1 LEFT_PARENTHESIS logicalExpression RIGHT_PARENTHESIS . LEFT_CURLY_BRACE $@2 blockStatements RIGHT_CURLY_BRACE

    LEFT_CURLY_BRACE  shift, and go to state 272


State 251

  117 ifStatement: IF $@3 LEFT_PARENTHESIS logicalExpression RIGHT_PARENTHESIS . LEFT_CURLY_BRACE $@4 blockStatements RIGHT_CURLY_BRACE $@5 ELSE $@6 LEFT_CURLY_BRACE $@7 blockStatements RIGHT_CURLY_BRACE

    LEFT_CURLY_BRACE  shift, and go to state 273


State 252

  136 switchStatement: SWITCH LEFT_PARENTHESIS IDENTIFIER RIGHT_PARENTHESIS LEFT_CURLY_BRACE . $@11 caseStatement RIGHT_CURLY_BRACE

    $default  reduce using rule 135 ($@11)

    $@11  go to state 274


State 253

  119 whileStatement: WHILE LEFT_PARENTHESIS logicalExpression RIGHT_PARENTHESIS LEFT_CURLY_BRACE . $@8 blockStatements RIGHT_CURLY_BRACE

    $default  reduce using rule 118 ($@8)

    $@8  go to state 275


State 254

   39 noSemiColumnAssignVariableDeclaration: INT IDENTIFIER . ASSIGN intMathExpression

    ASSIGN  shift, and go to state 104


State 255

   38 noSemiColumnAssignVariableDeclaration: CHAR IDENTIFIER . ASSIGN CHAR_LITERAL

    ASSIGN  shift, and go to state 105


State 256

   40 noSemiColumnAssignVariableDeclaration: FLOAT IDENTIFIER . ASSIGN floatMathExpression

    ASSIGN  shift, and go to state 106


State 257

   41 noSemiColumnAssignVariableDeclaration: STRING IDENTIFIER . ASSIGN stringExpression

    ASSIGN  shift, and go to state 107


State 258

   42 noSemiColumnAssignVariableDeclaration: BOOL IDENTIFIER . ASSIGN logicalExpression

    ASSIGN  shift, and go to state 113


State 259

  128 forDeclaration: IDENTIFIER ASSIGN . intMathExpression ';'
  129               | IDENTIFIER ASSIGN . floatMathExpression ';'
  130               | IDENTIFIER ASSIGN . stringExpression ';'
  131               | IDENTIFIER ASSIGN . BOOL_LITERAL ';'

    LEFT_PARENTHESIS  shift, and go to state 276
    IDENTIFIER        shift, and go to state 277
    DIGIT             shift, and go to state 70
    FLOAT_LITERAL     shift, and go to state 71
    STRING_LITERAL    shift, and go to state 72
    BOOL_LITERAL      shift, and go to state 278

    intMathExpression    go to state 279
    intMathTerm          go to state 77
    intMathFactor        go to state 78
    intMathPrimary       go to state 79
    floatMathExpression  go to state 280
    floatMathTerm        go to state 81
    floatMathFactor      go to state 82
    stringExpression     go to state 281


State 260

   89 logicalExpression: logicalExpression . OR logicalTerm
  134 forStatement: FOR LEFT_PARENTHESIS $@10 forDeclaration logicalExpression . ';' forAssignment RIGHT_PARENTHESIS LEFT_CURLY_BRACE blockStatements RIGHT_CURLY_BRACE

    OR   shift, and go to state 155
    ';'  shift, and go to state 282


State 261

  121 repeatStatement: REPEAT LEFT_CURLY_BRACE $@9 blockStatements RIGHT_CURLY_BRACE . UNTIL LEFT_PARENTHESIS logicalExpression RIGHT_PARENTHESIS

    UNTIL  shift, and go to state 283


State 262

  141 enumIdentifiers: IDENTIFIER . ',' enumIdentifiers
  142                | IDENTIFIER .

    ','  shift, and go to state 284

    $default  reduce using rule 142 (enumIdentifiers)


State 263

  144 enumStatement: ENUM IDENTIFIER LEFT_CURLY_BRACE $@12 enumIdentifiers . RIGHT_CURLY_BRACE

    RIGHT_CURLY_BRACE  shift, and go to state 285


State 264

  147 parameter: noSemiColumnVariableDeclarationStatement . ',' parameter
  148          | noSemiColumnVariableDeclarationStatement .

    ','  shift, and go to state 286

    $default  reduce using rule 148 (parameter)


State 265

   35 noSemiColumnVariableDeclarationStatement: noSemiColumnAssignVariableDeclaration .

    $default  reduce using rule 35 (noSemiColumnVariableDeclarationStatement)


State 266

   36 noSemiColumnVariableDeclarationStatement: noSemiColumnNonAssignVariableDeclaration .

    $default  reduce using rule 36 (noSemiColumnVariableDeclarationStatement)


State 267

  149 parameter: noSemiColumnConstDeclaration . ',' parameter
  150          | noSemiColumnConstDeclaration .

    ','  shift, and go to state 287

    $default  reduce using rule 150 (parameter)


State 268

  146 functionStatement: FUNCTION IDENTIFIER LEFT_PARENTHESIS $@13 parameter . RIGHT_PARENTHESIS LEFT_CURLY_BRACE blockStatements RIGHT_CURLY_BRACE

    RIGHT_PARENTHESIS  shift, and go to state 288


State 269

  169 main: MAIN $@14 LEFT_PARENTHESIS RIGHT_PARENTHESIS LEFT_CURLY_BRACE . $@15 blockStatements RIGHT_CURLY_BRACE

    $default  reduce using rule 168 ($@15)

    $@15  go to state 289


State 270

  160 printStatement: PRINT LEFT_PARENTHESIS argument RIGHT_PARENTHESIS ';' .

    $default  reduce using rule 160 (printStatement)


State 271

  162 functionCallStatement: IDENTIFIER LEFT_PARENTHESIS argument RIGHT_PARENTHESIS ';' .

    $default  reduce using rule 162 (functionCallStatement)


State 272

  111 ifStatement: IF $@1 LEFT_PARENTHESIS logicalExpression RIGHT_PARENTHESIS LEFT_CURLY_BRACE . $@2 blockStatements RIGHT_CURLY_BRACE

    $default  reduce using rule 110 ($@2)

    $@2  go to state 290


State 273

  117 ifStatement: IF $@3 LEFT_PARENTHESIS logicalExpression RIGHT_PARENTHESIS LEFT_CURLY_BRACE . $@4 blockStatements RIGHT_CURLY_BRACE $@5 ELSE $@6 LEFT_CURLY_BRACE $@7 blockStatements RIGHT_CURLY_BRACE

    $default  reduce using rule 113 ($@4)

    $@4  go to state 291


State 274

  136 switchStatement: SWITCH LEFT_PARENTHESIS IDENTIFIER RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@11 . caseStatement RIGHT_CURLY_BRACE

    CASE     shift, and go to state 292
    DEFAULT  shift, and go to state 293

    $default  reduce using rule 140 (caseStatement)

    caseStatement  go to state 294


State 275

  119 whileStatement: WHILE LEFT_PARENTHESIS logicalExpression RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@8 . blockStatements RIGHT_CURLY_BRACE

    INT         shift, and go to state 1
    CHAR        shift, and go to state 2
    FLOAT       shift, and go to state 3
    STRING      shift, and go to state 4
    CONST       shift, and go to state 5
    BOOL        shift, and go to state 6
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    CONTINUE    shift, and go to state 9
    BREAK       shift, and go to state 10
    WHILE       shift, and go to state 11
    FOR         shift, and go to state 12
    RETURN      shift, and go to state 13
    REPEAT      shift, and go to state 14
    ENUM        shift, and go to state 15
    PRINT       shift, and go to state 18
    COMMENT     shift, and go to state 19
    IDENTIFIER  shift, and go to state 20

    blockStatements                           go to state 295
    blockStatement                            go to state 24
    variableDeclarationStatement              go to state 25
    assignVariableDeclaration                 go to state 26
    noSemiColumnAssignVariableDeclaration     go to state 27
    nonAssignVariableDeclaration              go to state 28
    noSemiColumnNonAssignVariableDeclaration  go to state 29
    constDeclarationStatement                 go to state 30
    noSemiColumnConstDeclaration              go to state 31
    assignmentStatement                       go to state 32
    incStatement                              go to state 33
    decStatement                              go to state 34
    ifStatement                               go to state 35
    whileStatement                            go to state 36
    repeatStatement                           go to state 37
    forStatement                              go to state 38
    switchStatement                           go to state 39
    enumStatement                             go to state 40
    returnStatement                           go to state 42
    continueBreakStatement                    go to state 43
    printStatement                            go to state 44
    functionCallStatement                     go to state 45
    comment                                   go to state 46


State 276

   74 intMathPrimary: LEFT_PARENTHESIS . intMathExpression RIGHT_PARENTHESIS
   83 floatMathFactor: LEFT_PARENTHESIS . floatMathExpression RIGHT_PARENTHESIS
   87 stringExpression: LEFT_PARENTHESIS . stringExpression RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 276
    IDENTIFIER        shift, and go to state 277
    DIGIT             shift, and go to state 70
    FLOAT_LITERAL     shift, and go to state 71
    STRING_LITERAL    shift, and go to state 72

    intMathExpression    go to state 243
    intMathTerm          go to state 77
    intMathFactor        go to state 78
    intMathPrimary       go to state 79
    floatMathExpression  go to state 244
    floatMathTerm        go to state 81
    floatMathFactor      go to state 82
    stringExpression     go to state 128


State 277

   70 intMathFactor: IDENTIFIER . INCREMENT
   71              | IDENTIFIER . DECREMENT
   72 intMathPrimary: IDENTIFIER .
   81 floatMathFactor: IDENTIFIER .
   85 stringExpression: IDENTIFIER .

    INCREMENT  shift, and go to state 130
    DECREMENT  shift, and go to state 131

    PLUS               reduce using rule 72 (intMathPrimary)
    PLUS               [reduce using rule 81 (floatMathFactor)]
    PLUS               [reduce using rule 85 (stringExpression)]
    MINUS              reduce using rule 72 (intMathPrimary)
    MINUS              [reduce using rule 81 (floatMathFactor)]
    MULTIPLY           reduce using rule 72 (intMathPrimary)
    MULTIPLY           [reduce using rule 81 (floatMathFactor)]
    DIVIDE             reduce using rule 72 (intMathPrimary)
    DIVIDE             [reduce using rule 81 (floatMathFactor)]
    RIGHT_PARENTHESIS  reduce using rule 72 (intMathPrimary)
    RIGHT_PARENTHESIS  [reduce using rule 81 (floatMathFactor)]
    RIGHT_PARENTHESIS  [reduce using rule 85 (stringExpression)]
    ';'                reduce using rule 72 (intMathPrimary)
    ';'                [reduce using rule 81 (floatMathFactor)]
    ';'                [reduce using rule 85 (stringExpression)]
    $default           reduce using rule 72 (intMathPrimary)


State 278

  131 forDeclaration: IDENTIFIER ASSIGN BOOL_LITERAL . ';'

    ';'  shift, and go to state 296


State 279

   62 intMathExpression: intMathExpression . PLUS intMathTerm
   63                  | intMathExpression . MINUS intMathTerm
  128 forDeclaration: IDENTIFIER ASSIGN intMathExpression . ';'

    PLUS   shift, and go to state 133
    MINUS  shift, and go to state 134
    ';'    shift, and go to state 297


State 280

   75 floatMathExpression: floatMathExpression . PLUS floatMathTerm
   76                    | floatMathExpression . MINUS floatMathTerm
  129 forDeclaration: IDENTIFIER ASSIGN floatMathExpression . ';'

    PLUS   shift, and go to state 144
    MINUS  shift, and go to state 145
    ';'    shift, and go to state 298


State 281

   86 stringExpression: stringExpression . PLUS stringExpression
  130 forDeclaration: IDENTIFIER ASSIGN stringExpression . ';'

    PLUS  shift, and go to state 154
    ';'   shift, and go to state 299


State 282

  134 forStatement: FOR LEFT_PARENTHESIS $@10 forDeclaration logicalExpression ';' . forAssignment RIGHT_PARENTHESIS LEFT_CURLY_BRACE blockStatements RIGHT_CURLY_BRACE

    IDENTIFIER  shift, and go to state 300

    forAssignment  go to state 301


State 283

  121 repeatStatement: REPEAT LEFT_CURLY_BRACE $@9 blockStatements RIGHT_CURLY_BRACE UNTIL . LEFT_PARENTHESIS logicalExpression RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 302


State 284

  141 enumIdentifiers: IDENTIFIER ',' . enumIdentifiers

    IDENTIFIER  shift, and go to state 262

    enumIdentifiers  go to state 303


State 285

  144 enumStatement: ENUM IDENTIFIER LEFT_CURLY_BRACE $@12 enumIdentifiers RIGHT_CURLY_BRACE .

    $default  reduce using rule 144 (enumStatement)


State 286

  147 parameter: noSemiColumnVariableDeclarationStatement ',' . parameter

    INT     shift, and go to state 1
    CHAR    shift, and go to state 2
    FLOAT   shift, and go to state 3
    STRING  shift, and go to state 4
    CONST   shift, and go to state 5
    BOOL    shift, and go to state 6

    $default  reduce using rule 151 (parameter)

    noSemiColumnVariableDeclarationStatement  go to state 264
    noSemiColumnAssignVariableDeclaration     go to state 265
    noSemiColumnNonAssignVariableDeclaration  go to state 266
    noSemiColumnConstDeclaration              go to state 267
    parameter                                 go to state 304


State 287

  149 parameter: noSemiColumnConstDeclaration ',' . parameter

    INT     shift, and go to state 1
    CHAR    shift, and go to state 2
    FLOAT   shift, and go to state 3
    STRING  shift, and go to state 4
    CONST   shift, and go to state 5
    BOOL    shift, and go to state 6

    $default  reduce using rule 151 (parameter)

    noSemiColumnVariableDeclarationStatement  go to state 264
    noSemiColumnAssignVariableDeclaration     go to state 265
    noSemiColumnNonAssignVariableDeclaration  go to state 266
    noSemiColumnConstDeclaration              go to state 267
    parameter                                 go to state 305


State 288

  146 functionStatement: FUNCTION IDENTIFIER LEFT_PARENTHESIS $@13 parameter RIGHT_PARENTHESIS . LEFT_CURLY_BRACE blockStatements RIGHT_CURLY_BRACE

    LEFT_CURLY_BRACE  shift, and go to state 306


State 289

  169 main: MAIN $@14 LEFT_PARENTHESIS RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@15 . blockStatements RIGHT_CURLY_BRACE

    INT         shift, and go to state 1
    CHAR        shift, and go to state 2
    FLOAT       shift, and go to state 3
    STRING      shift, and go to state 4
    CONST       shift, and go to state 5
    BOOL        shift, and go to state 6
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    CONTINUE    shift, and go to state 9
    BREAK       shift, and go to state 10
    WHILE       shift, and go to state 11
    FOR         shift, and go to state 12
    RETURN      shift, and go to state 13
    REPEAT      shift, and go to state 14
    ENUM        shift, and go to state 15
    PRINT       shift, and go to state 18
    COMMENT     shift, and go to state 19
    IDENTIFIER  shift, and go to state 20

    blockStatements                           go to state 307
    blockStatement                            go to state 24
    variableDeclarationStatement              go to state 25
    assignVariableDeclaration                 go to state 26
    noSemiColumnAssignVariableDeclaration     go to state 27
    nonAssignVariableDeclaration              go to state 28
    noSemiColumnNonAssignVariableDeclaration  go to state 29
    constDeclarationStatement                 go to state 30
    noSemiColumnConstDeclaration              go to state 31
    assignmentStatement                       go to state 32
    incStatement                              go to state 33
    decStatement                              go to state 34
    ifStatement                               go to state 35
    whileStatement                            go to state 36
    repeatStatement                           go to state 37
    forStatement                              go to state 38
    switchStatement                           go to state 39
    enumStatement                             go to state 40
    returnStatement                           go to state 42
    continueBreakStatement                    go to state 43
    printStatement                            go to state 44
    functionCallStatement                     go to state 45
    comment                                   go to state 46


State 290

  111 ifStatement: IF $@1 LEFT_PARENTHESIS logicalExpression RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@2 . blockStatements RIGHT_CURLY_BRACE

    INT         shift, and go to state 1
    CHAR        shift, and go to state 2
    FLOAT       shift, and go to state 3
    STRING      shift, and go to state 4
    CONST       shift, and go to state 5
    BOOL        shift, and go to state 6
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    CONTINUE    shift, and go to state 9
    BREAK       shift, and go to state 10
    WHILE       shift, and go to state 11
    FOR         shift, and go to state 12
    RETURN      shift, and go to state 13
    REPEAT      shift, and go to state 14
    ENUM        shift, and go to state 15
    PRINT       shift, and go to state 18
    COMMENT     shift, and go to state 19
    IDENTIFIER  shift, and go to state 20

    blockStatements                           go to state 308
    blockStatement                            go to state 24
    variableDeclarationStatement              go to state 25
    assignVariableDeclaration                 go to state 26
    noSemiColumnAssignVariableDeclaration     go to state 27
    nonAssignVariableDeclaration              go to state 28
    noSemiColumnNonAssignVariableDeclaration  go to state 29
    constDeclarationStatement                 go to state 30
    noSemiColumnConstDeclaration              go to state 31
    assignmentStatement                       go to state 32
    incStatement                              go to state 33
    decStatement                              go to state 34
    ifStatement                               go to state 35
    whileStatement                            go to state 36
    repeatStatement                           go to state 37
    forStatement                              go to state 38
    switchStatement                           go to state 39
    enumStatement                             go to state 40
    returnStatement                           go to state 42
    continueBreakStatement                    go to state 43
    printStatement                            go to state 44
    functionCallStatement                     go to state 45
    comment                                   go to state 46


State 291

  117 ifStatement: IF $@3 LEFT_PARENTHESIS logicalExpression RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@4 . blockStatements RIGHT_CURLY_BRACE $@5 ELSE $@6 LEFT_CURLY_BRACE $@7 blockStatements RIGHT_CURLY_BRACE

    INT         shift, and go to state 1
    CHAR        shift, and go to state 2
    FLOAT       shift, and go to state 3
    STRING      shift, and go to state 4
    CONST       shift, and go to state 5
    BOOL        shift, and go to state 6
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    CONTINUE    shift, and go to state 9
    BREAK       shift, and go to state 10
    WHILE       shift, and go to state 11
    FOR         shift, and go to state 12
    RETURN      shift, and go to state 13
    REPEAT      shift, and go to state 14
    ENUM        shift, and go to state 15
    PRINT       shift, and go to state 18
    COMMENT     shift, and go to state 19
    IDENTIFIER  shift, and go to state 20

    blockStatements                           go to state 309
    blockStatement                            go to state 24
    variableDeclarationStatement              go to state 25
    assignVariableDeclaration                 go to state 26
    noSemiColumnAssignVariableDeclaration     go to state 27
    nonAssignVariableDeclaration              go to state 28
    noSemiColumnNonAssignVariableDeclaration  go to state 29
    constDeclarationStatement                 go to state 30
    noSemiColumnConstDeclaration              go to state 31
    assignmentStatement                       go to state 32
    incStatement                              go to state 33
    decStatement                              go to state 34
    ifStatement                               go to state 35
    whileStatement                            go to state 36
    repeatStatement                           go to state 37
    forStatement                              go to state 38
    switchStatement                           go to state 39
    enumStatement                             go to state 40
    returnStatement                           go to state 42
    continueBreakStatement                    go to state 43
    printStatement                            go to state 44
    functionCallStatement                     go to state 45
    comment                                   go to state 46


State 292

  137 caseStatement: CASE . values ':' blockStatements BREAK ';' caseStatement
  138              | CASE . values ':' blockStatements BREAK ';'

    DIGIT           shift, and go to state 310
    FLOAT_LITERAL   shift, and go to state 311
    STRING_LITERAL  shift, and go to state 312
    CHAR_LITERAL    shift, and go to state 313
    BOOL_LITERAL    shift, and go to state 314

    values  go to state 315


State 293

  139 caseStatement: DEFAULT . ':' blockStatements BREAK ';'

    ':'  shift, and go to state 316


State 294

  136 switchStatement: SWITCH LEFT_PARENTHESIS IDENTIFIER RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@11 caseStatement . RIGHT_CURLY_BRACE

    RIGHT_CURLY_BRACE  shift, and go to state 317


State 295

    7 blockStatements: blockStatements . blockStatement
  119 whileStatement: WHILE LEFT_PARENTHESIS logicalExpression RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@8 blockStatements . RIGHT_CURLY_BRACE

    INT                shift, and go to state 1
    CHAR               shift, and go to state 2
    FLOAT              shift, and go to state 3
    STRING             shift, and go to state 4
    CONST              shift, and go to state 5
    BOOL               shift, and go to state 6
    IF                 shift, and go to state 7
    SWITCH             shift, and go to state 8
    CONTINUE           shift, and go to state 9
    BREAK              shift, and go to state 10
    WHILE              shift, and go to state 11
    FOR                shift, and go to state 12
    RETURN             shift, and go to state 13
    REPEAT             shift, and go to state 14
    RIGHT_CURLY_BRACE  shift, and go to state 318
    ENUM               shift, and go to state 15
    PRINT              shift, and go to state 18
    COMMENT            shift, and go to state 19
    IDENTIFIER         shift, and go to state 20

    blockStatement                            go to state 100
    variableDeclarationStatement              go to state 25
    assignVariableDeclaration                 go to state 26
    noSemiColumnAssignVariableDeclaration     go to state 27
    nonAssignVariableDeclaration              go to state 28
    noSemiColumnNonAssignVariableDeclaration  go to state 29
    constDeclarationStatement                 go to state 30
    noSemiColumnConstDeclaration              go to state 31
    assignmentStatement                       go to state 32
    incStatement                              go to state 33
    decStatement                              go to state 34
    ifStatement                               go to state 35
    whileStatement                            go to state 36
    repeatStatement                           go to state 37
    forStatement                              go to state 38
    switchStatement                           go to state 39
    enumStatement                             go to state 40
    returnStatement                           go to state 42
    continueBreakStatement                    go to state 43
    printStatement                            go to state 44
    functionCallStatement                     go to state 45
    comment                                   go to state 46


State 296

  131 forDeclaration: IDENTIFIER ASSIGN BOOL_LITERAL ';' .

    $default  reduce using rule 131 (forDeclaration)


State 297

  128 forDeclaration: IDENTIFIER ASSIGN intMathExpression ';' .

    $default  reduce using rule 128 (forDeclaration)


State 298

  129 forDeclaration: IDENTIFIER ASSIGN floatMathExpression ';' .

    $default  reduce using rule 129 (forDeclaration)


State 299

  130 forDeclaration: IDENTIFIER ASSIGN stringExpression ';' .

    $default  reduce using rule 130 (forDeclaration)


State 300

  122 forAssignment: IDENTIFIER . ASSIGN intMathExpression
  123              | IDENTIFIER . ASSIGN floatMathExpression
  124              | IDENTIFIER . ASSIGN stringExpression
  125              | IDENTIFIER . ASSIGN BOOL_LITERAL
  126              | IDENTIFIER . INCREMENT
  127              | IDENTIFIER . DECREMENT

    INCREMENT  shift, and go to state 319
    DECREMENT  shift, and go to state 320
    ASSIGN     shift, and go to state 321


State 301

  134 forStatement: FOR LEFT_PARENTHESIS $@10 forDeclaration logicalExpression ';' forAssignment . RIGHT_PARENTHESIS LEFT_CURLY_BRACE blockStatements RIGHT_CURLY_BRACE

    RIGHT_PARENTHESIS  shift, and go to state 322


State 302

  121 repeatStatement: REPEAT LEFT_CURLY_BRACE $@9 blockStatements RIGHT_CURLY_BRACE UNTIL LEFT_PARENTHESIS . logicalExpression RIGHT_PARENTHESIS

    NOT               shift, and go to state 67
    LEFT_PARENTHESIS  shift, and go to state 119
    IDENTIFIER        shift, and go to state 120
    DIGIT             shift, and go to state 70
    FLOAT_LITERAL     shift, and go to state 71
    BOOL_LITERAL      shift, and go to state 73

    intMathExpression    go to state 121
    intMathTerm          go to state 77
    intMathFactor        go to state 78
    intMathPrimary       go to state 79
    floatMathExpression  go to state 122
    floatMathTerm        go to state 81
    floatMathFactor      go to state 82
    logicalExpression    go to state 323
    logicalTerm          go to state 85
    logicalFactor        go to state 86
    logicalPrimary       go to state 87


State 303

  141 enumIdentifiers: IDENTIFIER ',' enumIdentifiers .

    $default  reduce using rule 141 (enumIdentifiers)


State 304

  147 parameter: noSemiColumnVariableDeclarationStatement ',' parameter .

    $default  reduce using rule 147 (parameter)


State 305

  149 parameter: noSemiColumnConstDeclaration ',' parameter .

    $default  reduce using rule 149 (parameter)


State 306

  146 functionStatement: FUNCTION IDENTIFIER LEFT_PARENTHESIS $@13 parameter RIGHT_PARENTHESIS LEFT_CURLY_BRACE . blockStatements RIGHT_CURLY_BRACE

    INT         shift, and go to state 1
    CHAR        shift, and go to state 2
    FLOAT       shift, and go to state 3
    STRING      shift, and go to state 4
    CONST       shift, and go to state 5
    BOOL        shift, and go to state 6
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    CONTINUE    shift, and go to state 9
    BREAK       shift, and go to state 10
    WHILE       shift, and go to state 11
    FOR         shift, and go to state 12
    RETURN      shift, and go to state 13
    REPEAT      shift, and go to state 14
    ENUM        shift, and go to state 15
    PRINT       shift, and go to state 18
    COMMENT     shift, and go to state 19
    IDENTIFIER  shift, and go to state 20

    blockStatements                           go to state 324
    blockStatement                            go to state 24
    variableDeclarationStatement              go to state 25
    assignVariableDeclaration                 go to state 26
    noSemiColumnAssignVariableDeclaration     go to state 27
    nonAssignVariableDeclaration              go to state 28
    noSemiColumnNonAssignVariableDeclaration  go to state 29
    constDeclarationStatement                 go to state 30
    noSemiColumnConstDeclaration              go to state 31
    assignmentStatement                       go to state 32
    incStatement                              go to state 33
    decStatement                              go to state 34
    ifStatement                               go to state 35
    whileStatement                            go to state 36
    repeatStatement                           go to state 37
    forStatement                              go to state 38
    switchStatement                           go to state 39
    enumStatement                             go to state 40
    returnStatement                           go to state 42
    continueBreakStatement                    go to state 43
    printStatement                            go to state 44
    functionCallStatement                     go to state 45
    comment                                   go to state 46


State 307

    7 blockStatements: blockStatements . blockStatement
  169 main: MAIN $@14 LEFT_PARENTHESIS RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@15 blockStatements . RIGHT_CURLY_BRACE

    INT                shift, and go to state 1
    CHAR               shift, and go to state 2
    FLOAT              shift, and go to state 3
    STRING             shift, and go to state 4
    CONST              shift, and go to state 5
    BOOL               shift, and go to state 6
    IF                 shift, and go to state 7
    SWITCH             shift, and go to state 8
    CONTINUE           shift, and go to state 9
    BREAK              shift, and go to state 10
    WHILE              shift, and go to state 11
    FOR                shift, and go to state 12
    RETURN             shift, and go to state 13
    REPEAT             shift, and go to state 14
    RIGHT_CURLY_BRACE  shift, and go to state 325
    ENUM               shift, and go to state 15
    PRINT              shift, and go to state 18
    COMMENT            shift, and go to state 19
    IDENTIFIER         shift, and go to state 20

    blockStatement                            go to state 100
    variableDeclarationStatement              go to state 25
    assignVariableDeclaration                 go to state 26
    noSemiColumnAssignVariableDeclaration     go to state 27
    nonAssignVariableDeclaration              go to state 28
    noSemiColumnNonAssignVariableDeclaration  go to state 29
    constDeclarationStatement                 go to state 30
    noSemiColumnConstDeclaration              go to state 31
    assignmentStatement                       go to state 32
    incStatement                              go to state 33
    decStatement                              go to state 34
    ifStatement                               go to state 35
    whileStatement                            go to state 36
    repeatStatement                           go to state 37
    forStatement                              go to state 38
    switchStatement                           go to state 39
    enumStatement                             go to state 40
    returnStatement                           go to state 42
    continueBreakStatement                    go to state 43
    printStatement                            go to state 44
    functionCallStatement                     go to state 45
    comment                                   go to state 46


State 308

    7 blockStatements: blockStatements . blockStatement
  111 ifStatement: IF $@1 LEFT_PARENTHESIS logicalExpression RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@2 blockStatements . RIGHT_CURLY_BRACE

    INT                shift, and go to state 1
    CHAR               shift, and go to state 2
    FLOAT              shift, and go to state 3
    STRING             shift, and go to state 4
    CONST              shift, and go to state 5
    BOOL               shift, and go to state 6
    IF                 shift, and go to state 7
    SWITCH             shift, and go to state 8
    CONTINUE           shift, and go to state 9
    BREAK              shift, and go to state 10
    WHILE              shift, and go to state 11
    FOR                shift, and go to state 12
    RETURN             shift, and go to state 13
    REPEAT             shift, and go to state 14
    RIGHT_CURLY_BRACE  shift, and go to state 326
    ENUM               shift, and go to state 15
    PRINT              shift, and go to state 18
    COMMENT            shift, and go to state 19
    IDENTIFIER         shift, and go to state 20

    blockStatement                            go to state 100
    variableDeclarationStatement              go to state 25
    assignVariableDeclaration                 go to state 26
    noSemiColumnAssignVariableDeclaration     go to state 27
    nonAssignVariableDeclaration              go to state 28
    noSemiColumnNonAssignVariableDeclaration  go to state 29
    constDeclarationStatement                 go to state 30
    noSemiColumnConstDeclaration              go to state 31
    assignmentStatement                       go to state 32
    incStatement                              go to state 33
    decStatement                              go to state 34
    ifStatement                               go to state 35
    whileStatement                            go to state 36
    repeatStatement                           go to state 37
    forStatement                              go to state 38
    switchStatement                           go to state 39
    enumStatement                             go to state 40
    returnStatement                           go to state 42
    continueBreakStatement                    go to state 43
    printStatement                            go to state 44
    functionCallStatement                     go to state 45
    comment                                   go to state 46


State 309

    7 blockStatements: blockStatements . blockStatement
  117 ifStatement: IF $@3 LEFT_PARENTHESIS logicalExpression RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@4 blockStatements . RIGHT_CURLY_BRACE $@5 ELSE $@6 LEFT_CURLY_BRACE $@7 blockStatements RIGHT_CURLY_BRACE

    INT                shift, and go to state 1
    CHAR               shift, and go to state 2
    FLOAT              shift, and go to state 3
    STRING             shift, and go to state 4
    CONST              shift, and go to state 5
    BOOL               shift, and go to state 6
    IF                 shift, and go to state 7
    SWITCH             shift, and go to state 8
    CONTINUE           shift, and go to state 9
    BREAK              shift, and go to state 10
    WHILE              shift, and go to state 11
    FOR                shift, and go to state 12
    RETURN             shift, and go to state 13
    REPEAT             shift, and go to state 14
    RIGHT_CURLY_BRACE  shift, and go to state 327
    ENUM               shift, and go to state 15
    PRINT              shift, and go to state 18
    COMMENT            shift, and go to state 19
    IDENTIFIER         shift, and go to state 20

    blockStatement                            go to state 100
    variableDeclarationStatement              go to state 25
    assignVariableDeclaration                 go to state 26
    noSemiColumnAssignVariableDeclaration     go to state 27
    nonAssignVariableDeclaration              go to state 28
    noSemiColumnNonAssignVariableDeclaration  go to state 29
    constDeclarationStatement                 go to state 30
    noSemiColumnConstDeclaration              go to state 31
    assignmentStatement                       go to state 32
    incStatement                              go to state 33
    decStatement                              go to state 34
    ifStatement                               go to state 35
    whileStatement                            go to state 36
    repeatStatement                           go to state 37
    forStatement                              go to state 38
    switchStatement                           go to state 39
    enumStatement                             go to state 40
    returnStatement                           go to state 42
    continueBreakStatement                    go to state 43
    printStatement                            go to state 44
    functionCallStatement                     go to state 45
    comment                                   go to state 46


State 310

   24 values: DIGIT .

    $default  reduce using rule 24 (values)


State 311

   25 values: FLOAT_LITERAL .

    $default  reduce using rule 25 (values)


State 312

   26 values: STRING_LITERAL .

    $default  reduce using rule 26 (values)


State 313

   27 values: CHAR_LITERAL .

    $default  reduce using rule 27 (values)


State 314

   28 values: BOOL_LITERAL .

    $default  reduce using rule 28 (values)


State 315

  137 caseStatement: CASE values . ':' blockStatements BREAK ';' caseStatement
  138              | CASE values . ':' blockStatements BREAK ';'

    ':'  shift, and go to state 328


State 316

  139 caseStatement: DEFAULT ':' . blockStatements BREAK ';'

    INT         shift, and go to state 1
    CHAR        shift, and go to state 2
    FLOAT       shift, and go to state 3
    STRING      shift, and go to state 4
    CONST       shift, and go to state 5
    BOOL        shift, and go to state 6
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    CONTINUE    shift, and go to state 9
    BREAK       shift, and go to state 10
    WHILE       shift, and go to state 11
    FOR         shift, and go to state 12
    RETURN      shift, and go to state 13
    REPEAT      shift, and go to state 14
    ENUM        shift, and go to state 15
    PRINT       shift, and go to state 18
    COMMENT     shift, and go to state 19
    IDENTIFIER  shift, and go to state 20

    blockStatements                           go to state 329
    blockStatement                            go to state 24
    variableDeclarationStatement              go to state 25
    assignVariableDeclaration                 go to state 26
    noSemiColumnAssignVariableDeclaration     go to state 27
    nonAssignVariableDeclaration              go to state 28
    noSemiColumnNonAssignVariableDeclaration  go to state 29
    constDeclarationStatement                 go to state 30
    noSemiColumnConstDeclaration              go to state 31
    assignmentStatement                       go to state 32
    incStatement                              go to state 33
    decStatement                              go to state 34
    ifStatement                               go to state 35
    whileStatement                            go to state 36
    repeatStatement                           go to state 37
    forStatement                              go to state 38
    switchStatement                           go to state 39
    enumStatement                             go to state 40
    returnStatement                           go to state 42
    continueBreakStatement                    go to state 43
    printStatement                            go to state 44
    functionCallStatement                     go to state 45
    comment                                   go to state 46


State 317

  136 switchStatement: SWITCH LEFT_PARENTHESIS IDENTIFIER RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@11 caseStatement RIGHT_CURLY_BRACE .

    $default  reduce using rule 136 (switchStatement)


State 318

  119 whileStatement: WHILE LEFT_PARENTHESIS logicalExpression RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@8 blockStatements RIGHT_CURLY_BRACE .

    $default  reduce using rule 119 (whileStatement)


State 319

  126 forAssignment: IDENTIFIER INCREMENT .

    $default  reduce using rule 126 (forAssignment)


State 320

  127 forAssignment: IDENTIFIER DECREMENT .

    $default  reduce using rule 127 (forAssignment)


State 321

  122 forAssignment: IDENTIFIER ASSIGN . intMathExpression
  123              | IDENTIFIER ASSIGN . floatMathExpression
  124              | IDENTIFIER ASSIGN . stringExpression
  125              | IDENTIFIER ASSIGN . BOOL_LITERAL

    LEFT_PARENTHESIS  shift, and go to state 276
    IDENTIFIER        shift, and go to state 277
    DIGIT             shift, and go to state 70
    FLOAT_LITERAL     shift, and go to state 71
    STRING_LITERAL    shift, and go to state 72
    BOOL_LITERAL      shift, and go to state 330

    intMathExpression    go to state 331
    intMathTerm          go to state 77
    intMathFactor        go to state 78
    intMathPrimary       go to state 79
    floatMathExpression  go to state 332
    floatMathTerm        go to state 81
    floatMathFactor      go to state 82
    stringExpression     go to state 333


State 322

  134 forStatement: FOR LEFT_PARENTHESIS $@10 forDeclaration logicalExpression ';' forAssignment RIGHT_PARENTHESIS . LEFT_CURLY_BRACE blockStatements RIGHT_CURLY_BRACE

    LEFT_CURLY_BRACE  shift, and go to state 334


State 323

   89 logicalExpression: logicalExpression . OR logicalTerm
  121 repeatStatement: REPEAT LEFT_CURLY_BRACE $@9 blockStatements RIGHT_CURLY_BRACE UNTIL LEFT_PARENTHESIS logicalExpression . RIGHT_PARENTHESIS

    OR                 shift, and go to state 155
    RIGHT_PARENTHESIS  shift, and go to state 335


State 324

    7 blockStatements: blockStatements . blockStatement
  146 functionStatement: FUNCTION IDENTIFIER LEFT_PARENTHESIS $@13 parameter RIGHT_PARENTHESIS LEFT_CURLY_BRACE blockStatements . RIGHT_CURLY_BRACE

    INT                shift, and go to state 1
    CHAR               shift, and go to state 2
    FLOAT              shift, and go to state 3
    STRING             shift, and go to state 4
    CONST              shift, and go to state 5
    BOOL               shift, and go to state 6
    IF                 shift, and go to state 7
    SWITCH             shift, and go to state 8
    CONTINUE           shift, and go to state 9
    BREAK              shift, and go to state 10
    WHILE              shift, and go to state 11
    FOR                shift, and go to state 12
    RETURN             shift, and go to state 13
    REPEAT             shift, and go to state 14
    RIGHT_CURLY_BRACE  shift, and go to state 336
    ENUM               shift, and go to state 15
    PRINT              shift, and go to state 18
    COMMENT            shift, and go to state 19
    IDENTIFIER         shift, and go to state 20

    blockStatement                            go to state 100
    variableDeclarationStatement              go to state 25
    assignVariableDeclaration                 go to state 26
    noSemiColumnAssignVariableDeclaration     go to state 27
    nonAssignVariableDeclaration              go to state 28
    noSemiColumnNonAssignVariableDeclaration  go to state 29
    constDeclarationStatement                 go to state 30
    noSemiColumnConstDeclaration              go to state 31
    assignmentStatement                       go to state 32
    incStatement                              go to state 33
    decStatement                              go to state 34
    ifStatement                               go to state 35
    whileStatement                            go to state 36
    repeatStatement                           go to state 37
    forStatement                              go to state 38
    switchStatement                           go to state 39
    enumStatement                             go to state 40
    returnStatement                           go to state 42
    continueBreakStatement                    go to state 43
    printStatement                            go to state 44
    functionCallStatement                     go to state 45
    comment                                   go to state 46


State 325

  169 main: MAIN $@14 LEFT_PARENTHESIS RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@15 blockStatements RIGHT_CURLY_BRACE .

    $default  reduce using rule 169 (main)


State 326

  111 ifStatement: IF $@1 LEFT_PARENTHESIS logicalExpression RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@2 blockStatements RIGHT_CURLY_BRACE .

    $default  reduce using rule 111 (ifStatement)


State 327

  117 ifStatement: IF $@3 LEFT_PARENTHESIS logicalExpression RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@4 blockStatements RIGHT_CURLY_BRACE . $@5 ELSE $@6 LEFT_CURLY_BRACE $@7 blockStatements RIGHT_CURLY_BRACE

    $default  reduce using rule 114 ($@5)

    $@5  go to state 337


State 328

  137 caseStatement: CASE values ':' . blockStatements BREAK ';' caseStatement
  138              | CASE values ':' . blockStatements BREAK ';'

    INT         shift, and go to state 1
    CHAR        shift, and go to state 2
    FLOAT       shift, and go to state 3
    STRING      shift, and go to state 4
    CONST       shift, and go to state 5
    BOOL        shift, and go to state 6
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    CONTINUE    shift, and go to state 9
    BREAK       shift, and go to state 10
    WHILE       shift, and go to state 11
    FOR         shift, and go to state 12
    RETURN      shift, and go to state 13
    REPEAT      shift, and go to state 14
    ENUM        shift, and go to state 15
    PRINT       shift, and go to state 18
    COMMENT     shift, and go to state 19
    IDENTIFIER  shift, and go to state 20

    blockStatements                           go to state 338
    blockStatement                            go to state 24
    variableDeclarationStatement              go to state 25
    assignVariableDeclaration                 go to state 26
    noSemiColumnAssignVariableDeclaration     go to state 27
    nonAssignVariableDeclaration              go to state 28
    noSemiColumnNonAssignVariableDeclaration  go to state 29
    constDeclarationStatement                 go to state 30
    noSemiColumnConstDeclaration              go to state 31
    assignmentStatement                       go to state 32
    incStatement                              go to state 33
    decStatement                              go to state 34
    ifStatement                               go to state 35
    whileStatement                            go to state 36
    repeatStatement                           go to state 37
    forStatement                              go to state 38
    switchStatement                           go to state 39
    enumStatement                             go to state 40
    returnStatement                           go to state 42
    continueBreakStatement                    go to state 43
    printStatement                            go to state 44
    functionCallStatement                     go to state 45
    comment                                   go to state 46


State 329

    7 blockStatements: blockStatements . blockStatement
  139 caseStatement: DEFAULT ':' blockStatements . BREAK ';'

    INT         shift, and go to state 1
    CHAR        shift, and go to state 2
    FLOAT       shift, and go to state 3
    STRING      shift, and go to state 4
    CONST       shift, and go to state 5
    BOOL        shift, and go to state 6
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    CONTINUE    shift, and go to state 9
    BREAK       shift, and go to state 339
    WHILE       shift, and go to state 11
    FOR         shift, and go to state 12
    RETURN      shift, and go to state 13
    REPEAT      shift, and go to state 14
    ENUM        shift, and go to state 15
    PRINT       shift, and go to state 18
    COMMENT     shift, and go to state 19
    IDENTIFIER  shift, and go to state 20

    blockStatement                            go to state 100
    variableDeclarationStatement              go to state 25
    assignVariableDeclaration                 go to state 26
    noSemiColumnAssignVariableDeclaration     go to state 27
    nonAssignVariableDeclaration              go to state 28
    noSemiColumnNonAssignVariableDeclaration  go to state 29
    constDeclarationStatement                 go to state 30
    noSemiColumnConstDeclaration              go to state 31
    assignmentStatement                       go to state 32
    incStatement                              go to state 33
    decStatement                              go to state 34
    ifStatement                               go to state 35
    whileStatement                            go to state 36
    repeatStatement                           go to state 37
    forStatement                              go to state 38
    switchStatement                           go to state 39
    enumStatement                             go to state 40
    returnStatement                           go to state 42
    continueBreakStatement                    go to state 43
    printStatement                            go to state 44
    functionCallStatement                     go to state 45
    comment                                   go to state 46


State 330

  125 forAssignment: IDENTIFIER ASSIGN BOOL_LITERAL .

    $default  reduce using rule 125 (forAssignment)


State 331

   62 intMathExpression: intMathExpression . PLUS intMathTerm
   63                  | intMathExpression . MINUS intMathTerm
  122 forAssignment: IDENTIFIER ASSIGN intMathExpression .

    PLUS   shift, and go to state 133
    MINUS  shift, and go to state 134

    $default  reduce using rule 122 (forAssignment)


State 332

   75 floatMathExpression: floatMathExpression . PLUS floatMathTerm
   76                    | floatMathExpression . MINUS floatMathTerm
  123 forAssignment: IDENTIFIER ASSIGN floatMathExpression .

    PLUS   shift, and go to state 144
    MINUS  shift, and go to state 145

    $default  reduce using rule 123 (forAssignment)


State 333

   86 stringExpression: stringExpression . PLUS stringExpression
  124 forAssignment: IDENTIFIER ASSIGN stringExpression .

    PLUS  shift, and go to state 154

    $default  reduce using rule 124 (forAssignment)


State 334

  134 forStatement: FOR LEFT_PARENTHESIS $@10 forDeclaration logicalExpression ';' forAssignment RIGHT_PARENTHESIS LEFT_CURLY_BRACE . blockStatements RIGHT_CURLY_BRACE

    INT         shift, and go to state 1
    CHAR        shift, and go to state 2
    FLOAT       shift, and go to state 3
    STRING      shift, and go to state 4
    CONST       shift, and go to state 5
    BOOL        shift, and go to state 6
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    CONTINUE    shift, and go to state 9
    BREAK       shift, and go to state 10
    WHILE       shift, and go to state 11
    FOR         shift, and go to state 12
    RETURN      shift, and go to state 13
    REPEAT      shift, and go to state 14
    ENUM        shift, and go to state 15
    PRINT       shift, and go to state 18
    COMMENT     shift, and go to state 19
    IDENTIFIER  shift, and go to state 20

    blockStatements                           go to state 340
    blockStatement                            go to state 24
    variableDeclarationStatement              go to state 25
    assignVariableDeclaration                 go to state 26
    noSemiColumnAssignVariableDeclaration     go to state 27
    nonAssignVariableDeclaration              go to state 28
    noSemiColumnNonAssignVariableDeclaration  go to state 29
    constDeclarationStatement                 go to state 30
    noSemiColumnConstDeclaration              go to state 31
    assignmentStatement                       go to state 32
    incStatement                              go to state 33
    decStatement                              go to state 34
    ifStatement                               go to state 35
    whileStatement                            go to state 36
    repeatStatement                           go to state 37
    forStatement                              go to state 38
    switchStatement                           go to state 39
    enumStatement                             go to state 40
    returnStatement                           go to state 42
    continueBreakStatement                    go to state 43
    printStatement                            go to state 44
    functionCallStatement                     go to state 45
    comment                                   go to state 46


State 335

  121 repeatStatement: REPEAT LEFT_CURLY_BRACE $@9 blockStatements RIGHT_CURLY_BRACE UNTIL LEFT_PARENTHESIS logicalExpression RIGHT_PARENTHESIS .

    $default  reduce using rule 121 (repeatStatement)


State 336

  146 functionStatement: FUNCTION IDENTIFIER LEFT_PARENTHESIS $@13 parameter RIGHT_PARENTHESIS LEFT_CURLY_BRACE blockStatements RIGHT_CURLY_BRACE .

    $default  reduce using rule 146 (functionStatement)


State 337

  117 ifStatement: IF $@3 LEFT_PARENTHESIS logicalExpression RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@4 blockStatements RIGHT_CURLY_BRACE $@5 . ELSE $@6 LEFT_CURLY_BRACE $@7 blockStatements RIGHT_CURLY_BRACE

    ELSE  shift, and go to state 341


State 338

    7 blockStatements: blockStatements . blockStatement
  137 caseStatement: CASE values ':' blockStatements . BREAK ';' caseStatement
  138              | CASE values ':' blockStatements . BREAK ';'

    INT         shift, and go to state 1
    CHAR        shift, and go to state 2
    FLOAT       shift, and go to state 3
    STRING      shift, and go to state 4
    CONST       shift, and go to state 5
    BOOL        shift, and go to state 6
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    CONTINUE    shift, and go to state 9
    BREAK       shift, and go to state 342
    WHILE       shift, and go to state 11
    FOR         shift, and go to state 12
    RETURN      shift, and go to state 13
    REPEAT      shift, and go to state 14
    ENUM        shift, and go to state 15
    PRINT       shift, and go to state 18
    COMMENT     shift, and go to state 19
    IDENTIFIER  shift, and go to state 20

    blockStatement                            go to state 100
    variableDeclarationStatement              go to state 25
    assignVariableDeclaration                 go to state 26
    noSemiColumnAssignVariableDeclaration     go to state 27
    nonAssignVariableDeclaration              go to state 28
    noSemiColumnNonAssignVariableDeclaration  go to state 29
    constDeclarationStatement                 go to state 30
    noSemiColumnConstDeclaration              go to state 31
    assignmentStatement                       go to state 32
    incStatement                              go to state 33
    decStatement                              go to state 34
    ifStatement                               go to state 35
    whileStatement                            go to state 36
    repeatStatement                           go to state 37
    forStatement                              go to state 38
    switchStatement                           go to state 39
    enumStatement                             go to state 40
    returnStatement                           go to state 42
    continueBreakStatement                    go to state 43
    printStatement                            go to state 44
    functionCallStatement                     go to state 45
    comment                                   go to state 46


State 339

  139 caseStatement: DEFAULT ':' blockStatements BREAK . ';'
  154 continueBreakStatement: BREAK . ';'
  155                       | BREAK . IDENTIFIER ';'
  156                       | BREAK .

    IDENTIFIER  shift, and go to state 63
    ';'         shift, and go to state 343

    IDENTIFIER  [reduce using rule 156 (continueBreakStatement)]
    $default    reduce using rule 156 (continueBreakStatement)


State 340

    7 blockStatements: blockStatements . blockStatement
  134 forStatement: FOR LEFT_PARENTHESIS $@10 forDeclaration logicalExpression ';' forAssignment RIGHT_PARENTHESIS LEFT_CURLY_BRACE blockStatements . RIGHT_CURLY_BRACE

    INT                shift, and go to state 1
    CHAR               shift, and go to state 2
    FLOAT              shift, and go to state 3
    STRING             shift, and go to state 4
    CONST              shift, and go to state 5
    BOOL               shift, and go to state 6
    IF                 shift, and go to state 7
    SWITCH             shift, and go to state 8
    CONTINUE           shift, and go to state 9
    BREAK              shift, and go to state 10
    WHILE              shift, and go to state 11
    FOR                shift, and go to state 12
    RETURN             shift, and go to state 13
    REPEAT             shift, and go to state 14
    RIGHT_CURLY_BRACE  shift, and go to state 344
    ENUM               shift, and go to state 15
    PRINT              shift, and go to state 18
    COMMENT            shift, and go to state 19
    IDENTIFIER         shift, and go to state 20

    blockStatement                            go to state 100
    variableDeclarationStatement              go to state 25
    assignVariableDeclaration                 go to state 26
    noSemiColumnAssignVariableDeclaration     go to state 27
    nonAssignVariableDeclaration              go to state 28
    noSemiColumnNonAssignVariableDeclaration  go to state 29
    constDeclarationStatement                 go to state 30
    noSemiColumnConstDeclaration              go to state 31
    assignmentStatement                       go to state 32
    incStatement                              go to state 33
    decStatement                              go to state 34
    ifStatement                               go to state 35
    whileStatement                            go to state 36
    repeatStatement                           go to state 37
    forStatement                              go to state 38
    switchStatement                           go to state 39
    enumStatement                             go to state 40
    returnStatement                           go to state 42
    continueBreakStatement                    go to state 43
    printStatement                            go to state 44
    functionCallStatement                     go to state 45
    comment                                   go to state 46


State 341

  117 ifStatement: IF $@3 LEFT_PARENTHESIS logicalExpression RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@4 blockStatements RIGHT_CURLY_BRACE $@5 ELSE . $@6 LEFT_CURLY_BRACE $@7 blockStatements RIGHT_CURLY_BRACE

    $default  reduce using rule 115 ($@6)

    $@6  go to state 345


State 342

  137 caseStatement: CASE values ':' blockStatements BREAK . ';' caseStatement
  138              | CASE values ':' blockStatements BREAK . ';'
  154 continueBreakStatement: BREAK . ';'
  155                       | BREAK . IDENTIFIER ';'
  156                       | BREAK .

    IDENTIFIER  shift, and go to state 63
    ';'         shift, and go to state 346

    IDENTIFIER  [reduce using rule 156 (continueBreakStatement)]
    $default    reduce using rule 156 (continueBreakStatement)


State 343

  139 caseStatement: DEFAULT ':' blockStatements BREAK ';' .
  154 continueBreakStatement: BREAK ';' .

    RIGHT_CURLY_BRACE  reduce using rule 139 (caseStatement)
    $default           reduce using rule 154 (continueBreakStatement)


State 344

  134 forStatement: FOR LEFT_PARENTHESIS $@10 forDeclaration logicalExpression ';' forAssignment RIGHT_PARENTHESIS LEFT_CURLY_BRACE blockStatements RIGHT_CURLY_BRACE .

    $default  reduce using rule 134 (forStatement)


State 345

  117 ifStatement: IF $@3 LEFT_PARENTHESIS logicalExpression RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@4 blockStatements RIGHT_CURLY_BRACE $@5 ELSE $@6 . LEFT_CURLY_BRACE $@7 blockStatements RIGHT_CURLY_BRACE

    LEFT_CURLY_BRACE  shift, and go to state 347


State 346

  137 caseStatement: CASE values ':' blockStatements BREAK ';' . caseStatement
  138              | CASE values ':' blockStatements BREAK ';' .
  154 continueBreakStatement: BREAK ';' .

    CASE     shift, and go to state 292
    DEFAULT  shift, and go to state 293

    RIGHT_CURLY_BRACE  reduce using rule 138 (caseStatement)
    RIGHT_CURLY_BRACE  [reduce using rule 140 (caseStatement)]
    $default           reduce using rule 154 (continueBreakStatement)

    caseStatement  go to state 348


State 347

  117 ifStatement: IF $@3 LEFT_PARENTHESIS logicalExpression RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@4 blockStatements RIGHT_CURLY_BRACE $@5 ELSE $@6 LEFT_CURLY_BRACE . $@7 blockStatements RIGHT_CURLY_BRACE

    $default  reduce using rule 116 ($@7)

    $@7  go to state 349


State 348

  137 caseStatement: CASE values ':' blockStatements BREAK ';' caseStatement .

    $default  reduce using rule 137 (caseStatement)


State 349

  117 ifStatement: IF $@3 LEFT_PARENTHESIS logicalExpression RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@4 blockStatements RIGHT_CURLY_BRACE $@5 ELSE $@6 LEFT_CURLY_BRACE $@7 . blockStatements RIGHT_CURLY_BRACE

    INT         shift, and go to state 1
    CHAR        shift, and go to state 2
    FLOAT       shift, and go to state 3
    STRING      shift, and go to state 4
    CONST       shift, and go to state 5
    BOOL        shift, and go to state 6
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    CONTINUE    shift, and go to state 9
    BREAK       shift, and go to state 10
    WHILE       shift, and go to state 11
    FOR         shift, and go to state 12
    RETURN      shift, and go to state 13
    REPEAT      shift, and go to state 14
    ENUM        shift, and go to state 15
    PRINT       shift, and go to state 18
    COMMENT     shift, and go to state 19
    IDENTIFIER  shift, and go to state 20

    blockStatements                           go to state 350
    blockStatement                            go to state 24
    variableDeclarationStatement              go to state 25
    assignVariableDeclaration                 go to state 26
    noSemiColumnAssignVariableDeclaration     go to state 27
    nonAssignVariableDeclaration              go to state 28
    noSemiColumnNonAssignVariableDeclaration  go to state 29
    constDeclarationStatement                 go to state 30
    noSemiColumnConstDeclaration              go to state 31
    assignmentStatement                       go to state 32
    incStatement                              go to state 33
    decStatement                              go to state 34
    ifStatement                               go to state 35
    whileStatement                            go to state 36
    repeatStatement                           go to state 37
    forStatement                              go to state 38
    switchStatement                           go to state 39
    enumStatement                             go to state 40
    returnStatement                           go to state 42
    continueBreakStatement                    go to state 43
    printStatement                            go to state 44
    functionCallStatement                     go to state 45
    comment                                   go to state 46


State 350

    7 blockStatements: blockStatements . blockStatement
  117 ifStatement: IF $@3 LEFT_PARENTHESIS logicalExpression RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@4 blockStatements RIGHT_CURLY_BRACE $@5 ELSE $@6 LEFT_CURLY_BRACE $@7 blockStatements . RIGHT_CURLY_BRACE

    INT                shift, and go to state 1
    CHAR               shift, and go to state 2
    FLOAT              shift, and go to state 3
    STRING             shift, and go to state 4
    CONST              shift, and go to state 5
    BOOL               shift, and go to state 6
    IF                 shift, and go to state 7
    SWITCH             shift, and go to state 8
    CONTINUE           shift, and go to state 9
    BREAK              shift, and go to state 10
    WHILE              shift, and go to state 11
    FOR                shift, and go to state 12
    RETURN             shift, and go to state 13
    REPEAT             shift, and go to state 14
    RIGHT_CURLY_BRACE  shift, and go to state 351
    ENUM               shift, and go to state 15
    PRINT              shift, and go to state 18
    COMMENT            shift, and go to state 19
    IDENTIFIER         shift, and go to state 20

    blockStatement                            go to state 100
    variableDeclarationStatement              go to state 25
    assignVariableDeclaration                 go to state 26
    noSemiColumnAssignVariableDeclaration     go to state 27
    nonAssignVariableDeclaration              go to state 28
    noSemiColumnNonAssignVariableDeclaration  go to state 29
    constDeclarationStatement                 go to state 30
    noSemiColumnConstDeclaration              go to state 31
    assignmentStatement                       go to state 32
    incStatement                              go to state 33
    decStatement                              go to state 34
    ifStatement                               go to state 35
    whileStatement                            go to state 36
    repeatStatement                           go to state 37
    forStatement                              go to state 38
    switchStatement                           go to state 39
    enumStatement                             go to state 40
    returnStatement                           go to state 42
    continueBreakStatement                    go to state 43
    printStatement                            go to state 44
    functionCallStatement                     go to state 45
    comment                                   go to state 46


State 351

  117 ifStatement: IF $@3 LEFT_PARENTHESIS logicalExpression RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@4 blockStatements RIGHT_CURLY_BRACE $@5 ELSE $@6 LEFT_CURLY_BRACE $@7 blockStatements RIGHT_CURLY_BRACE .

    $default  reduce using rule 117 (ifStatement)
