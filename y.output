Terminals unused in grammar

    VOID
    THEN
    DO
    LEFT_SQUARE_BRACKET
    RIGHT_SQUARE_BRACKET
    SCAN


State 9 conflicts: 1 shift/reduce
State 10 conflicts: 1 shift/reduce
State 13 conflicts: 1 shift/reduce
State 22 conflicts: 18 shift/reduce
State 68 conflicts: 20 reduce/reduce
State 91 conflicts: 1 shift/reduce
State 119 conflicts: 12 reduce/reduce
State 228 conflicts: 1 shift/reduce
State 332 conflicts: 1 shift/reduce
State 342 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: statement
    2        | program statement

    3 statement: blockStatements
    4          | functionStatement
    5          | main

    6 blockStatements: blockStatement
    7                | blockStatements blockStatement

    8 blockStatement: variableDeclarationStatement
    9               | constDeclarationStatement
   10               | assignmentStatement
   11               | incStatement
   12               | decStatement
   13               | ifStatement
   14               | switchStatement
   15               | whileStatement
   16               | forStatement
   17               | repeatStatement
   18               | enumStatement
   19               | returnStatement
   20               | printStatement
   21               | continueBreakStatement
   22               | functionCallStatement
   23               | comment

   24 types: INT
   25      | CHAR
   26      | FLOAT
   27      | STRING
   28      | BOOL

   29 values: DIGIT
   30       | FLOAT_LITERAL
   31       | STRING_LITERAL
   32       | CHAR_LITERAL
   33       | BOOL_LITERAL

   34 expression: intMathExpression
   35           | floatMathExpression
   36           | stringExpression
   37           | logicalExpression

   38 variableDeclarationStatement: assignVariableDeclaration
   39                             | nonAssignVariableDeclaration

   40 noSemiColumnVariableDeclarationStatement: noSemiColumnAssignVariableDeclaration
   41                                         | noSemiColumnNonAssignVariableDeclaration

   42 assignVariableDeclaration: noSemiColumnAssignVariableDeclaration ';'

   43 noSemiColumnAssignVariableDeclaration: CHAR IDENTIFIER ASSIGN CHAR_LITERAL
   44                                      | INT IDENTIFIER ASSIGN intMathExpression
   45                                      | FLOAT IDENTIFIER ASSIGN floatMathExpression
   46                                      | STRING IDENTIFIER ASSIGN stringExpression
   47                                      | BOOL IDENTIFIER ASSIGN logicalExpression

   48 nonAssignVariableDeclaration: noSemiColumnNonAssignVariableDeclaration ';'

   49 noSemiColumnNonAssignVariableDeclaration: INT IDENTIFIER
   50                                         | CHAR IDENTIFIER
   51                                         | FLOAT IDENTIFIER
   52                                         | STRING IDENTIFIER
   53                                         | BOOL IDENTIFIER

   54 constDeclarationStatement: noSemiColumnConstDeclaration ';'

   55 noSemiColumnConstDeclaration: CONST CHAR IDENTIFIER ASSIGN CHAR_LITERAL
   56                             | CONST INT IDENTIFIER ASSIGN intMathExpression
   57                             | CONST FLOAT IDENTIFIER ASSIGN floatMathExpression
   58                             | CONST STRING IDENTIFIER ASSIGN stringExpression
   59                             | CONST BOOL IDENTIFIER ASSIGN logicalExpression

   60 assignmentStatement: IDENTIFIER ASSIGN intMathExpression ';'
   61                    | IDENTIFIER ASSIGN floatMathExpression ';'
   62                    | IDENTIFIER ASSIGN stringExpression ';'
   63                    | IDENTIFIER ASSIGN logicalExpression ';'
   64                    | IDENTIFIER ASSIGN CHAR_LITERAL ';'

   65 incStatement: IDENTIFIER INCREMENT ';'

   66 decStatement: IDENTIFIER DECREMENT ';'

   67 intMathExpression: intMathExpression PLUS intMathTerm
   68                  | intMathExpression MINUS intMathTerm
   69                  | intMathTerm

   70 intMathTerm: intMathTerm MULTIPLY intMathFactor
   71            | intMathTerm DIVIDE intMathFactor
   72            | intMathTerm MODULO intMathFactor
   73            | intMathFactor

   74 intMathFactor: intMathPrimary
   75              | IDENTIFIER INCREMENT
   76              | IDENTIFIER DECREMENT

   77 intMathPrimary: IDENTIFIER
   78               | DIGIT
   79               | LEFT_PARENTHESIS intMathExpression RIGHT_PARENTHESIS

   80 floatMathExpression: floatMathExpression PLUS floatMathTerm
   81                    | floatMathExpression MINUS floatMathTerm
   82                    | floatMathTerm

   83 floatMathTerm: floatMathTerm MULTIPLY floatMathFactor
   84              | floatMathTerm DIVIDE floatMathFactor
   85              | floatMathFactor

   86 floatMathFactor: IDENTIFIER
   87                | FLOAT_LITERAL
   88                | LEFT_PARENTHESIS floatMathExpression RIGHT_PARENTHESIS

   89 stringExpression: STRING_LITERAL
   90                 | IDENTIFIER
   91                 | stringExpression PLUS stringExpression
   92                 | LEFT_PARENTHESIS stringExpression RIGHT_PARENTHESIS

   93 logicalExpression: logicalTerm
   94                  | logicalExpression OR logicalTerm

   95 logicalTerm: logicalFactor
   96            | logicalTerm AND logicalFactor

   97 logicalFactor: logicalPrimary
   98              | NOT logicalFactor

   99 logicalPrimary: intMathExpression GREATER intMathExpression
  100               | intMathExpression LESS intMathExpression
  101               | intMathExpression GREATER_EQUAL intMathExpression
  102               | intMathExpression LESS_EQUAL intMathExpression
  103               | intMathExpression EQUAL intMathExpression
  104               | intMathExpression NOT_EQUAL intMathExpression
  105               | floatMathExpression GREATER floatMathExpression
  106               | floatMathExpression LESS floatMathExpression
  107               | floatMathExpression GREATER_EQUAL floatMathExpression
  108               | floatMathExpression LESS_EQUAL floatMathExpression
  109               | floatMathExpression EQUAL floatMathExpression
  110               | floatMathExpression NOT_EQUAL floatMathExpression
  111               | LEFT_PARENTHESIS logicalExpression RIGHT_PARENTHESIS
  112               | BOOL_LITERAL
  113               | IDENTIFIER

  114 $@1: %empty

  115 $@2: %empty

  116 $@3: %empty

  117 ifStatement: IF LEFT_PARENTHESIS logicalExpression $@1 RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@2 blockStatements RIGHT_CURLY_BRACE $@3 elsePart

  118 elsePart: ELSE ifStatement

  119 $@4: %empty

  120 elsePart: ELSE LEFT_CURLY_BRACE $@4 blockStatements RIGHT_CURLY_BRACE
  121         | %empty

  122 $@5: %empty

  123 $@6: %empty

  124 whileStatement: WHILE LEFT_PARENTHESIS logicalExpression $@5 RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@6 blockStatements RIGHT_CURLY_BRACE

  125 $@7: %empty

  126 $@8: %empty

  127 repeatStatement: REPEAT LEFT_CURLY_BRACE $@7 blockStatements RIGHT_CURLY_BRACE UNTIL LEFT_PARENTHESIS logicalExpression $@8 RIGHT_PARENTHESIS

  128 forAssignment: IDENTIFIER ASSIGN expression
  129              | IDENTIFIER INCREMENT
  130              | IDENTIFIER DECREMENT

  131 forDeclaration: IDENTIFIER ASSIGN expression ';'
  132               | assignVariableDeclaration

  133 $@9: %empty

  134 $@10: %empty

  135 $@11: %empty

  136 forStatement: FOR LEFT_PARENTHESIS $@9 forDeclaration $@10 logicalExpression $@11 ';' forAssignment RIGHT_PARENTHESIS LEFT_CURLY_BRACE blockStatements RIGHT_CURLY_BRACE

  137 $@12: %empty

  138 $@13: %empty

  139 switchStatement: SWITCH LEFT_PARENTHESIS IDENTIFIER $@12 RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@13 caseList RIGHT_CURLY_BRACE

  140 caseList: caseStatement caseList
  141         | DEFAULT ':' blockStatements BREAK ';'
  142         | %empty

  143 $@14: %empty

  144 caseStatement: CASE values $@14 ':' blockStatements BREAK ';'

  145 enumIdentifiers: IDENTIFIER ',' enumIdentifiers
  146                | IDENTIFIER

  147 $@15: %empty

  148 enumStatement: ENUM IDENTIFIER LEFT_CURLY_BRACE $@15 enumIdentifiers RIGHT_CURLY_BRACE

  149 $@16: %empty

  150 $@17: %empty

  151 functionStatement: types FUNCTION IDENTIFIER $@16 LEFT_PARENTHESIS $@17 parameter RIGHT_PARENTHESIS LEFT_CURLY_BRACE blockStatements RIGHT_CURLY_BRACE

  152 parameter: noSemiColumnVariableDeclarationStatement ',' parameter
  153          | noSemiColumnVariableDeclarationStatement
  154          | noSemiColumnConstDeclaration ',' parameter
  155          | noSemiColumnConstDeclaration
  156          | %empty

  157 returnStatement: RETURN argument ';'
  158                | RETURN ';'

  159 continueBreakStatement: BREAK ';'
  160                       | BREAK IDENTIFIER ';'
  161                       | BREAK
  162                       | CONTINUE ';'
  163                       | CONTINUE IDENTIFIER ';'
  164                       | CONTINUE

  165 printStatement: PRINT LEFT_PARENTHESIS argument RIGHT_PARENTHESIS ';'
  166               | PRINT LEFT_PARENTHESIS RIGHT_PARENTHESIS ';'

  167 $@18: %empty

  168 functionCallStatement: IDENTIFIER $@18 LEFT_PARENTHESIS argument RIGHT_PARENTHESIS ';'

  169 argument: expression ',' argument
  170         | expression
  171         | %empty

  172 comment: COMMENT

  173 $@19: %empty

  174 $@20: %empty

  175 main: MAIN $@19 LEFT_PARENTHESIS RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@20 blockStatements RIGHT_CURLY_BRACE


Terminals, with rules where they appear

    $end (0) 0
    ',' (44) 145 152 154 169
    ':' (58) 141 144
    ';' (59) 42 48 54 60 61 62 63 64 65 66 131 136 141 144 157 158 159 160 162 163 165 166 168
    error (256)
    INT (258) 24 44 49 56
    CHAR (259) 25 43 50 55
    FLOAT (260) 26 45 51 57
    STRING (261) 27 46 52 58
    CONST (262) 55 56 57 58 59
    BOOL (263) 28 47 53 59
    VOID (264)
    PLUS (265) 67 80 91
    MINUS (266) 68 81
    MULTIPLY (267) 70 83
    DIVIDE (268) 71 84
    MODULO (269) 72
    INCREMENT (270) 65 75 129
    DECREMENT (271) 66 76 130
    GREATER (272) 99 105
    LESS (273) 100 106
    GREATER_EQUAL (274) 101 107
    LESS_EQUAL (275) 102 108
    EQUAL (276) 103 109
    NOT_EQUAL (277) 104 110
    AND (278) 96
    OR (279) 94
    NOT (280) 98
    ASSIGN (281) 43 44 45 46 47 55 56 57 58 59 60 61 62 63 64 128 131
    IF (282) 117
    ELSE (283) 118 120
    SWITCH (284) 139
    CASE (285) 144
    DEFAULT (286) 141
    CONTINUE (287) 162 163 164
    BREAK (288) 141 144 159 160 161
    THEN (289)
    WHILE (290) 124
    DO (291)
    FOR (292) 136
    RETURN (293) 157 158
    REPEAT (294) 127
    UNTIL (295) 127
    LEFT_CURLY_BRACE (296) 117 120 124 127 136 139 148 151 175
    RIGHT_CURLY_BRACE (297) 117 120 124 127 136 139 148 151 175
    LEFT_PARENTHESIS (298) 79 88 92 111 117 124 127 136 139 151 165 166 168 175
    RIGHT_PARENTHESIS (299) 79 88 92 111 117 124 127 136 139 151 165 166 168 175
    LEFT_SQUARE_BRACKET (300)
    RIGHT_SQUARE_BRACKET (301)
    ENUM (302) 148
    FUNCTION (303) 151
    MAIN (304) 175
    PRINT (305) 165 166
    SCAN (306)
    COMMENT (307) 172
    IDENTIFIER <sVal> (308) 43 44 45 46 47 49 50 51 52 53 55 56 57 58 59 60 61 62 63 64 65 66 75 76 77 86 90 113 128 129 130 131 139 145 146 148 151 160 163 168
    DIGIT <iVal> (309) 29 78
    FLOAT_LITERAL <fVal> (310) 30 87
    STRING_LITERAL <sVal> (311) 31 89
    CHAR_LITERAL <cVal> (312) 32 43 55 64
    BOOL_LITERAL <bVal> (313) 33 112


Nonterminals, with rules where they appear

    $accept (62)
        on left: 0
    program (63)
        on left: 1 2
        on right: 0 2
    statement (64)
        on left: 3 4 5
        on right: 1 2
    blockStatements (65)
        on left: 6 7
        on right: 3 7 117 120 124 127 136 141 144 151 175
    blockStatement (66)
        on left: 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
        on right: 6 7
    types <iVal> (67)
        on left: 24 25 26 27 28
        on right: 151
    values <values> (68)
        on left: 29 30 31 32 33
        on right: 144
    expression (69)
        on left: 34 35 36 37
        on right: 128 131 169 170
    variableDeclarationStatement (70)
        on left: 38 39
        on right: 8
    noSemiColumnVariableDeclarationStatement (71)
        on left: 40 41
        on right: 152 153
    assignVariableDeclaration (72)
        on left: 42
        on right: 38 132
    noSemiColumnAssignVariableDeclaration (73)
        on left: 43 44 45 46 47
        on right: 40 42
    nonAssignVariableDeclaration (74)
        on left: 48
        on right: 39
    noSemiColumnNonAssignVariableDeclaration (75)
        on left: 49 50 51 52 53
        on right: 41 48
    constDeclarationStatement (76)
        on left: 54
        on right: 9
    noSemiColumnConstDeclaration (77)
        on left: 55 56 57 58 59
        on right: 54 154 155
    assignmentStatement (78)
        on left: 60 61 62 63 64
        on right: 10
    incStatement (79)
        on left: 65
        on right: 11
    decStatement (80)
        on left: 66
        on right: 12
    intMathExpression <iVal> (81)
        on left: 67 68 69
        on right: 34 44 56 60 67 68 79 99 100 101 102 103 104
    intMathTerm <iVal> (82)
        on left: 70 71 72 73
        on right: 67 68 69 70 71 72
    intMathFactor <iVal> (83)
        on left: 74 75 76
        on right: 70 71 72 73
    intMathPrimary <iVal> (84)
        on left: 77 78 79
        on right: 74
    floatMathExpression <fVal> (85)
        on left: 80 81 82
        on right: 35 45 57 61 80 81 88 105 106 107 108 109 110
    floatMathTerm <fVal> (86)
        on left: 83 84 85
        on right: 80 81 82 83 84
    floatMathFactor <fVal> (87)
        on left: 86 87 88
        on right: 83 84 85
    stringExpression <sVal> (88)
        on left: 89 90 91 92
        on right: 36 46 58 62 91 92
    logicalExpression <bVal> (89)
        on left: 93 94
        on right: 37 47 59 63 94 111 117 124 127 136
    logicalTerm <bVal> (90)
        on left: 95 96
        on right: 93 94 96
    logicalFactor <bVal> (91)
        on left: 97 98
        on right: 95 96 98
    logicalPrimary <bVal> (92)
        on left: 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113
        on right: 97
    ifStatement (93)
        on left: 117
        on right: 13 118
    $@1 (94)
        on left: 114
        on right: 117
    $@2 (95)
        on left: 115
        on right: 117
    $@3 (96)
        on left: 116
        on right: 117
    elsePart (97)
        on left: 118 120 121
        on right: 117
    $@4 (98)
        on left: 119
        on right: 120
    whileStatement (99)
        on left: 124
        on right: 15
    $@5 (100)
        on left: 122
        on right: 124
    $@6 (101)
        on left: 123
        on right: 124
    repeatStatement (102)
        on left: 127
        on right: 17
    $@7 (103)
        on left: 125
        on right: 127
    $@8 (104)
        on left: 126
        on right: 127
    forAssignment (105)
        on left: 128 129 130
        on right: 136
    forDeclaration (106)
        on left: 131 132
        on right: 136
    forStatement (107)
        on left: 136
        on right: 16
    $@9 (108)
        on left: 133
        on right: 136
    $@10 (109)
        on left: 134
        on right: 136
    $@11 (110)
        on left: 135
        on right: 136
    switchStatement (111)
        on left: 139
        on right: 14
    $@12 (112)
        on left: 137
        on right: 139
    $@13 (113)
        on left: 138
        on right: 139
    caseList (114)
        on left: 140 141 142
        on right: 139 140
    caseStatement (115)
        on left: 144
        on right: 140
    $@14 (116)
        on left: 143
        on right: 144
    enumIdentifiers (117)
        on left: 145 146
        on right: 145 148
    enumStatement (118)
        on left: 148
        on right: 18
    $@15 (119)
        on left: 147
        on right: 148
    functionStatement (120)
        on left: 151
        on right: 4
    $@16 (121)
        on left: 149
        on right: 151
    $@17 (122)
        on left: 150
        on right: 151
    parameter (123)
        on left: 152 153 154 155 156
        on right: 151 152 154
    returnStatement (124)
        on left: 157 158
        on right: 19
    continueBreakStatement (125)
        on left: 159 160 161 162 163 164
        on right: 21
    printStatement (126)
        on left: 165 166
        on right: 20
    functionCallStatement (127)
        on left: 168
        on right: 22
    $@18 (128)
        on left: 167
        on right: 168
    argument (129)
        on left: 169 170 171
        on right: 157 165 168 169
    comment (130)
        on left: 172
        on right: 23
    main (131)
        on left: 175
        on right: 5
    $@19 (132)
        on left: 173
        on right: 175
    $@20 (133)
        on left: 174
        on right: 175


State 0

    0 $accept: . program $end

    INT         shift, and go to state 1
    CHAR        shift, and go to state 2
    FLOAT       shift, and go to state 3
    STRING      shift, and go to state 4
    CONST       shift, and go to state 5
    BOOL        shift, and go to state 6
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    CONTINUE    shift, and go to state 9
    BREAK       shift, and go to state 10
    WHILE       shift, and go to state 11
    FOR         shift, and go to state 12
    RETURN      shift, and go to state 13
    REPEAT      shift, and go to state 14
    ENUM        shift, and go to state 15
    MAIN        shift, and go to state 16
    PRINT       shift, and go to state 17
    COMMENT     shift, and go to state 18
    IDENTIFIER  shift, and go to state 19

    program                                   go to state 20
    statement                                 go to state 21
    blockStatements                           go to state 22
    blockStatement                            go to state 23
    types                                     go to state 24
    variableDeclarationStatement              go to state 25
    assignVariableDeclaration                 go to state 26
    noSemiColumnAssignVariableDeclaration     go to state 27
    nonAssignVariableDeclaration              go to state 28
    noSemiColumnNonAssignVariableDeclaration  go to state 29
    constDeclarationStatement                 go to state 30
    noSemiColumnConstDeclaration              go to state 31
    assignmentStatement                       go to state 32
    incStatement                              go to state 33
    decStatement                              go to state 34
    ifStatement                               go to state 35
    whileStatement                            go to state 36
    repeatStatement                           go to state 37
    forStatement                              go to state 38
    switchStatement                           go to state 39
    enumStatement                             go to state 40
    functionStatement                         go to state 41
    returnStatement                           go to state 42
    continueBreakStatement                    go to state 43
    printStatement                            go to state 44
    functionCallStatement                     go to state 45
    comment                                   go to state 46
    main                                      go to state 47


State 1

   24 types: INT .
   44 noSemiColumnAssignVariableDeclaration: INT . IDENTIFIER ASSIGN intMathExpression
   49 noSemiColumnNonAssignVariableDeclaration: INT . IDENTIFIER

    IDENTIFIER  shift, and go to state 48

    $default  reduce using rule 24 (types)


State 2

   25 types: CHAR .
   43 noSemiColumnAssignVariableDeclaration: CHAR . IDENTIFIER ASSIGN CHAR_LITERAL
   50 noSemiColumnNonAssignVariableDeclaration: CHAR . IDENTIFIER

    IDENTIFIER  shift, and go to state 49

    $default  reduce using rule 25 (types)


State 3

   26 types: FLOAT .
   45 noSemiColumnAssignVariableDeclaration: FLOAT . IDENTIFIER ASSIGN floatMathExpression
   51 noSemiColumnNonAssignVariableDeclaration: FLOAT . IDENTIFIER

    IDENTIFIER  shift, and go to state 50

    $default  reduce using rule 26 (types)


State 4

   27 types: STRING .
   46 noSemiColumnAssignVariableDeclaration: STRING . IDENTIFIER ASSIGN stringExpression
   52 noSemiColumnNonAssignVariableDeclaration: STRING . IDENTIFIER

    IDENTIFIER  shift, and go to state 51

    $default  reduce using rule 27 (types)


State 5

   55 noSemiColumnConstDeclaration: CONST . CHAR IDENTIFIER ASSIGN CHAR_LITERAL
   56                             | CONST . INT IDENTIFIER ASSIGN intMathExpression
   57                             | CONST . FLOAT IDENTIFIER ASSIGN floatMathExpression
   58                             | CONST . STRING IDENTIFIER ASSIGN stringExpression
   59                             | CONST . BOOL IDENTIFIER ASSIGN logicalExpression

    INT     shift, and go to state 52
    CHAR    shift, and go to state 53
    FLOAT   shift, and go to state 54
    STRING  shift, and go to state 55
    BOOL    shift, and go to state 56


State 6

   28 types: BOOL .
   47 noSemiColumnAssignVariableDeclaration: BOOL . IDENTIFIER ASSIGN logicalExpression
   53 noSemiColumnNonAssignVariableDeclaration: BOOL . IDENTIFIER

    IDENTIFIER  shift, and go to state 57

    $default  reduce using rule 28 (types)


State 7

  117 ifStatement: IF . LEFT_PARENTHESIS logicalExpression $@1 RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@2 blockStatements RIGHT_CURLY_BRACE $@3 elsePart

    LEFT_PARENTHESIS  shift, and go to state 58


State 8

  139 switchStatement: SWITCH . LEFT_PARENTHESIS IDENTIFIER $@12 RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@13 caseList RIGHT_CURLY_BRACE

    LEFT_PARENTHESIS  shift, and go to state 59


State 9

  162 continueBreakStatement: CONTINUE . ';'
  163                       | CONTINUE . IDENTIFIER ';'
  164                       | CONTINUE .

    IDENTIFIER  shift, and go to state 60
    ';'         shift, and go to state 61

    IDENTIFIER  [reduce using rule 164 (continueBreakStatement)]
    $default    reduce using rule 164 (continueBreakStatement)


State 10

  159 continueBreakStatement: BREAK . ';'
  160                       | BREAK . IDENTIFIER ';'
  161                       | BREAK .

    IDENTIFIER  shift, and go to state 62
    ';'         shift, and go to state 63

    IDENTIFIER  [reduce using rule 161 (continueBreakStatement)]
    $default    reduce using rule 161 (continueBreakStatement)


State 11

  124 whileStatement: WHILE . LEFT_PARENTHESIS logicalExpression $@5 RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@6 blockStatements RIGHT_CURLY_BRACE

    LEFT_PARENTHESIS  shift, and go to state 64


State 12

  136 forStatement: FOR . LEFT_PARENTHESIS $@9 forDeclaration $@10 logicalExpression $@11 ';' forAssignment RIGHT_PARENTHESIS LEFT_CURLY_BRACE blockStatements RIGHT_CURLY_BRACE

    LEFT_PARENTHESIS  shift, and go to state 65


State 13

  157 returnStatement: RETURN . argument ';'
  158                | RETURN . ';'

    NOT               shift, and go to state 66
    LEFT_PARENTHESIS  shift, and go to state 67
    IDENTIFIER        shift, and go to state 68
    DIGIT             shift, and go to state 69
    FLOAT_LITERAL     shift, and go to state 70
    STRING_LITERAL    shift, and go to state 71
    BOOL_LITERAL      shift, and go to state 72
    ';'               shift, and go to state 73

    ';'  [reduce using rule 171 (argument)]

    expression           go to state 74
    intMathExpression    go to state 75
    intMathTerm          go to state 76
    intMathFactor        go to state 77
    intMathPrimary       go to state 78
    floatMathExpression  go to state 79
    floatMathTerm        go to state 80
    floatMathFactor      go to state 81
    stringExpression     go to state 82
    logicalExpression    go to state 83
    logicalTerm          go to state 84
    logicalFactor        go to state 85
    logicalPrimary       go to state 86
    argument             go to state 87


State 14

  127 repeatStatement: REPEAT . LEFT_CURLY_BRACE $@7 blockStatements RIGHT_CURLY_BRACE UNTIL LEFT_PARENTHESIS logicalExpression $@8 RIGHT_PARENTHESIS

    LEFT_CURLY_BRACE  shift, and go to state 88


State 15

  148 enumStatement: ENUM . IDENTIFIER LEFT_CURLY_BRACE $@15 enumIdentifiers RIGHT_CURLY_BRACE

    IDENTIFIER  shift, and go to state 89


State 16

  175 main: MAIN . $@19 LEFT_PARENTHESIS RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@20 blockStatements RIGHT_CURLY_BRACE

    $default  reduce using rule 173 ($@19)

    $@19  go to state 90


State 17

  165 printStatement: PRINT . LEFT_PARENTHESIS argument RIGHT_PARENTHESIS ';'
  166               | PRINT . LEFT_PARENTHESIS RIGHT_PARENTHESIS ';'

    LEFT_PARENTHESIS  shift, and go to state 91


State 18

  172 comment: COMMENT .

    $default  reduce using rule 172 (comment)


State 19

   60 assignmentStatement: IDENTIFIER . ASSIGN intMathExpression ';'
   61                    | IDENTIFIER . ASSIGN floatMathExpression ';'
   62                    | IDENTIFIER . ASSIGN stringExpression ';'
   63                    | IDENTIFIER . ASSIGN logicalExpression ';'
   64                    | IDENTIFIER . ASSIGN CHAR_LITERAL ';'
   65 incStatement: IDENTIFIER . INCREMENT ';'
   66 decStatement: IDENTIFIER . DECREMENT ';'
  168 functionCallStatement: IDENTIFIER . $@18 LEFT_PARENTHESIS argument RIGHT_PARENTHESIS ';'

    INCREMENT  shift, and go to state 92
    DECREMENT  shift, and go to state 93
    ASSIGN     shift, and go to state 94

    $default  reduce using rule 167 ($@18)

    $@18  go to state 95


State 20

    0 $accept: program . $end
    2 program: program . statement

    $end        shift, and go to state 96
    INT         shift, and go to state 1
    CHAR        shift, and go to state 2
    FLOAT       shift, and go to state 3
    STRING      shift, and go to state 4
    CONST       shift, and go to state 5
    BOOL        shift, and go to state 6
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    CONTINUE    shift, and go to state 9
    BREAK       shift, and go to state 10
    WHILE       shift, and go to state 11
    FOR         shift, and go to state 12
    RETURN      shift, and go to state 13
    REPEAT      shift, and go to state 14
    ENUM        shift, and go to state 15
    MAIN        shift, and go to state 16
    PRINT       shift, and go to state 17
    COMMENT     shift, and go to state 18
    IDENTIFIER  shift, and go to state 19

    statement                                 go to state 97
    blockStatements                           go to state 22
    blockStatement                            go to state 23
    types                                     go to state 24
    variableDeclarationStatement              go to state 25
    assignVariableDeclaration                 go to state 26
    noSemiColumnAssignVariableDeclaration     go to state 27
    nonAssignVariableDeclaration              go to state 28
    noSemiColumnNonAssignVariableDeclaration  go to state 29
    constDeclarationStatement                 go to state 30
    noSemiColumnConstDeclaration              go to state 31
    assignmentStatement                       go to state 32
    incStatement                              go to state 33
    decStatement                              go to state 34
    ifStatement                               go to state 35
    whileStatement                            go to state 36
    repeatStatement                           go to state 37
    forStatement                              go to state 38
    switchStatement                           go to state 39
    enumStatement                             go to state 40
    functionStatement                         go to state 41
    returnStatement                           go to state 42
    continueBreakStatement                    go to state 43
    printStatement                            go to state 44
    functionCallStatement                     go to state 45
    comment                                   go to state 46
    main                                      go to state 47


State 21

    1 program: statement .

    $default  reduce using rule 1 (program)


State 22

    3 statement: blockStatements .
    7 blockStatements: blockStatements . blockStatement

    INT         shift, and go to state 98
    CHAR        shift, and go to state 99
    FLOAT       shift, and go to state 100
    STRING      shift, and go to state 101
    CONST       shift, and go to state 5
    BOOL        shift, and go to state 102
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    CONTINUE    shift, and go to state 9
    BREAK       shift, and go to state 10
    WHILE       shift, and go to state 11
    FOR         shift, and go to state 12
    RETURN      shift, and go to state 13
    REPEAT      shift, and go to state 14
    ENUM        shift, and go to state 15
    PRINT       shift, and go to state 17
    COMMENT     shift, and go to state 18
    IDENTIFIER  shift, and go to state 19

    INT         [reduce using rule 3 (statement)]
    CHAR        [reduce using rule 3 (statement)]
    FLOAT       [reduce using rule 3 (statement)]
    STRING      [reduce using rule 3 (statement)]
    CONST       [reduce using rule 3 (statement)]
    BOOL        [reduce using rule 3 (statement)]
    IF          [reduce using rule 3 (statement)]
    SWITCH      [reduce using rule 3 (statement)]
    CONTINUE    [reduce using rule 3 (statement)]
    BREAK       [reduce using rule 3 (statement)]
    WHILE       [reduce using rule 3 (statement)]
    FOR         [reduce using rule 3 (statement)]
    RETURN      [reduce using rule 3 (statement)]
    REPEAT      [reduce using rule 3 (statement)]
    ENUM        [reduce using rule 3 (statement)]
    PRINT       [reduce using rule 3 (statement)]
    COMMENT     [reduce using rule 3 (statement)]
    IDENTIFIER  [reduce using rule 3 (statement)]
    $default    reduce using rule 3 (statement)

    blockStatement                            go to state 103
    variableDeclarationStatement              go to state 25
    assignVariableDeclaration                 go to state 26
    noSemiColumnAssignVariableDeclaration     go to state 27
    nonAssignVariableDeclaration              go to state 28
    noSemiColumnNonAssignVariableDeclaration  go to state 29
    constDeclarationStatement                 go to state 30
    noSemiColumnConstDeclaration              go to state 31
    assignmentStatement                       go to state 32
    incStatement                              go to state 33
    decStatement                              go to state 34
    ifStatement                               go to state 35
    whileStatement                            go to state 36
    repeatStatement                           go to state 37
    forStatement                              go to state 38
    switchStatement                           go to state 39
    enumStatement                             go to state 40
    returnStatement                           go to state 42
    continueBreakStatement                    go to state 43
    printStatement                            go to state 44
    functionCallStatement                     go to state 45
    comment                                   go to state 46


State 23

    6 blockStatements: blockStatement .

    $default  reduce using rule 6 (blockStatements)


State 24

  151 functionStatement: types . FUNCTION IDENTIFIER $@16 LEFT_PARENTHESIS $@17 parameter RIGHT_PARENTHESIS LEFT_CURLY_BRACE blockStatements RIGHT_CURLY_BRACE

    FUNCTION  shift, and go to state 104


State 25

    8 blockStatement: variableDeclarationStatement .

    $default  reduce using rule 8 (blockStatement)


State 26

   38 variableDeclarationStatement: assignVariableDeclaration .

    $default  reduce using rule 38 (variableDeclarationStatement)


State 27

   42 assignVariableDeclaration: noSemiColumnAssignVariableDeclaration . ';'

    ';'  shift, and go to state 105


State 28

   39 variableDeclarationStatement: nonAssignVariableDeclaration .

    $default  reduce using rule 39 (variableDeclarationStatement)


State 29

   48 nonAssignVariableDeclaration: noSemiColumnNonAssignVariableDeclaration . ';'

    ';'  shift, and go to state 106


State 30

    9 blockStatement: constDeclarationStatement .

    $default  reduce using rule 9 (blockStatement)


State 31

   54 constDeclarationStatement: noSemiColumnConstDeclaration . ';'

    ';'  shift, and go to state 107


State 32

   10 blockStatement: assignmentStatement .

    $default  reduce using rule 10 (blockStatement)


State 33

   11 blockStatement: incStatement .

    $default  reduce using rule 11 (blockStatement)


State 34

   12 blockStatement: decStatement .

    $default  reduce using rule 12 (blockStatement)


State 35

   13 blockStatement: ifStatement .

    $default  reduce using rule 13 (blockStatement)


State 36

   15 blockStatement: whileStatement .

    $default  reduce using rule 15 (blockStatement)


State 37

   17 blockStatement: repeatStatement .

    $default  reduce using rule 17 (blockStatement)


State 38

   16 blockStatement: forStatement .

    $default  reduce using rule 16 (blockStatement)


State 39

   14 blockStatement: switchStatement .

    $default  reduce using rule 14 (blockStatement)


State 40

   18 blockStatement: enumStatement .

    $default  reduce using rule 18 (blockStatement)


State 41

    4 statement: functionStatement .

    $default  reduce using rule 4 (statement)


State 42

   19 blockStatement: returnStatement .

    $default  reduce using rule 19 (blockStatement)


State 43

   21 blockStatement: continueBreakStatement .

    $default  reduce using rule 21 (blockStatement)


State 44

   20 blockStatement: printStatement .

    $default  reduce using rule 20 (blockStatement)


State 45

   22 blockStatement: functionCallStatement .

    $default  reduce using rule 22 (blockStatement)


State 46

   23 blockStatement: comment .

    $default  reduce using rule 23 (blockStatement)


State 47

    5 statement: main .

    $default  reduce using rule 5 (statement)


State 48

   44 noSemiColumnAssignVariableDeclaration: INT IDENTIFIER . ASSIGN intMathExpression
   49 noSemiColumnNonAssignVariableDeclaration: INT IDENTIFIER .

    ASSIGN  shift, and go to state 108

    $default  reduce using rule 49 (noSemiColumnNonAssignVariableDeclaration)


State 49

   43 noSemiColumnAssignVariableDeclaration: CHAR IDENTIFIER . ASSIGN CHAR_LITERAL
   50 noSemiColumnNonAssignVariableDeclaration: CHAR IDENTIFIER .

    ASSIGN  shift, and go to state 109

    $default  reduce using rule 50 (noSemiColumnNonAssignVariableDeclaration)


State 50

   45 noSemiColumnAssignVariableDeclaration: FLOAT IDENTIFIER . ASSIGN floatMathExpression
   51 noSemiColumnNonAssignVariableDeclaration: FLOAT IDENTIFIER .

    ASSIGN  shift, and go to state 110

    $default  reduce using rule 51 (noSemiColumnNonAssignVariableDeclaration)


State 51

   46 noSemiColumnAssignVariableDeclaration: STRING IDENTIFIER . ASSIGN stringExpression
   52 noSemiColumnNonAssignVariableDeclaration: STRING IDENTIFIER .

    ASSIGN  shift, and go to state 111

    $default  reduce using rule 52 (noSemiColumnNonAssignVariableDeclaration)


State 52

   56 noSemiColumnConstDeclaration: CONST INT . IDENTIFIER ASSIGN intMathExpression

    IDENTIFIER  shift, and go to state 112


State 53

   55 noSemiColumnConstDeclaration: CONST CHAR . IDENTIFIER ASSIGN CHAR_LITERAL

    IDENTIFIER  shift, and go to state 113


State 54

   57 noSemiColumnConstDeclaration: CONST FLOAT . IDENTIFIER ASSIGN floatMathExpression

    IDENTIFIER  shift, and go to state 114


State 55

   58 noSemiColumnConstDeclaration: CONST STRING . IDENTIFIER ASSIGN stringExpression

    IDENTIFIER  shift, and go to state 115


State 56

   59 noSemiColumnConstDeclaration: CONST BOOL . IDENTIFIER ASSIGN logicalExpression

    IDENTIFIER  shift, and go to state 116


State 57

   47 noSemiColumnAssignVariableDeclaration: BOOL IDENTIFIER . ASSIGN logicalExpression
   53 noSemiColumnNonAssignVariableDeclaration: BOOL IDENTIFIER .

    ASSIGN  shift, and go to state 117

    $default  reduce using rule 53 (noSemiColumnNonAssignVariableDeclaration)


State 58

  117 ifStatement: IF LEFT_PARENTHESIS . logicalExpression $@1 RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@2 blockStatements RIGHT_CURLY_BRACE $@3 elsePart

    NOT               shift, and go to state 66
    LEFT_PARENTHESIS  shift, and go to state 118
    IDENTIFIER        shift, and go to state 119
    DIGIT             shift, and go to state 69
    FLOAT_LITERAL     shift, and go to state 70
    BOOL_LITERAL      shift, and go to state 72

    intMathExpression    go to state 120
    intMathTerm          go to state 76
    intMathFactor        go to state 77
    intMathPrimary       go to state 78
    floatMathExpression  go to state 121
    floatMathTerm        go to state 80
    floatMathFactor      go to state 81
    logicalExpression    go to state 122
    logicalTerm          go to state 84
    logicalFactor        go to state 85
    logicalPrimary       go to state 86


State 59

  139 switchStatement: SWITCH LEFT_PARENTHESIS . IDENTIFIER $@12 RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@13 caseList RIGHT_CURLY_BRACE

    IDENTIFIER  shift, and go to state 123


State 60

  163 continueBreakStatement: CONTINUE IDENTIFIER . ';'

    ';'  shift, and go to state 124


State 61

  162 continueBreakStatement: CONTINUE ';' .

    $default  reduce using rule 162 (continueBreakStatement)


State 62

  160 continueBreakStatement: BREAK IDENTIFIER . ';'

    ';'  shift, and go to state 125


State 63

  159 continueBreakStatement: BREAK ';' .

    $default  reduce using rule 159 (continueBreakStatement)


State 64

  124 whileStatement: WHILE LEFT_PARENTHESIS . logicalExpression $@5 RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@6 blockStatements RIGHT_CURLY_BRACE

    NOT               shift, and go to state 66
    LEFT_PARENTHESIS  shift, and go to state 118
    IDENTIFIER        shift, and go to state 119
    DIGIT             shift, and go to state 69
    FLOAT_LITERAL     shift, and go to state 70
    BOOL_LITERAL      shift, and go to state 72

    intMathExpression    go to state 120
    intMathTerm          go to state 76
    intMathFactor        go to state 77
    intMathPrimary       go to state 78
    floatMathExpression  go to state 121
    floatMathTerm        go to state 80
    floatMathFactor      go to state 81
    logicalExpression    go to state 126
    logicalTerm          go to state 84
    logicalFactor        go to state 85
    logicalPrimary       go to state 86


State 65

  136 forStatement: FOR LEFT_PARENTHESIS . $@9 forDeclaration $@10 logicalExpression $@11 ';' forAssignment RIGHT_PARENTHESIS LEFT_CURLY_BRACE blockStatements RIGHT_CURLY_BRACE

    $default  reduce using rule 133 ($@9)

    $@9  go to state 127


State 66

   98 logicalFactor: NOT . logicalFactor

    NOT               shift, and go to state 66
    LEFT_PARENTHESIS  shift, and go to state 118
    IDENTIFIER        shift, and go to state 119
    DIGIT             shift, and go to state 69
    FLOAT_LITERAL     shift, and go to state 70
    BOOL_LITERAL      shift, and go to state 72

    intMathExpression    go to state 120
    intMathTerm          go to state 76
    intMathFactor        go to state 77
    intMathPrimary       go to state 78
    floatMathExpression  go to state 121
    floatMathTerm        go to state 80
    floatMathFactor      go to state 81
    logicalFactor        go to state 128
    logicalPrimary       go to state 86


State 67

   79 intMathPrimary: LEFT_PARENTHESIS . intMathExpression RIGHT_PARENTHESIS
   88 floatMathFactor: LEFT_PARENTHESIS . floatMathExpression RIGHT_PARENTHESIS
   92 stringExpression: LEFT_PARENTHESIS . stringExpression RIGHT_PARENTHESIS
  111 logicalPrimary: LEFT_PARENTHESIS . logicalExpression RIGHT_PARENTHESIS

    NOT               shift, and go to state 66
    LEFT_PARENTHESIS  shift, and go to state 67
    IDENTIFIER        shift, and go to state 68
    DIGIT             shift, and go to state 69
    FLOAT_LITERAL     shift, and go to state 70
    STRING_LITERAL    shift, and go to state 71
    BOOL_LITERAL      shift, and go to state 72

    intMathExpression    go to state 129
    intMathTerm          go to state 76
    intMathFactor        go to state 77
    intMathPrimary       go to state 78
    floatMathExpression  go to state 130
    floatMathTerm        go to state 80
    floatMathFactor      go to state 81
    stringExpression     go to state 131
    logicalExpression    go to state 132
    logicalTerm          go to state 84
    logicalFactor        go to state 85
    logicalPrimary       go to state 86


State 68

   75 intMathFactor: IDENTIFIER . INCREMENT
   76              | IDENTIFIER . DECREMENT
   77 intMathPrimary: IDENTIFIER .
   86 floatMathFactor: IDENTIFIER .
   90 stringExpression: IDENTIFIER .
  113 logicalPrimary: IDENTIFIER .

    INCREMENT  shift, and go to state 133
    DECREMENT  shift, and go to state 134

    PLUS               reduce using rule 77 (intMathPrimary)
    PLUS               [reduce using rule 86 (floatMathFactor)]
    PLUS               [reduce using rule 90 (stringExpression)]
    MINUS              reduce using rule 77 (intMathPrimary)
    MINUS              [reduce using rule 86 (floatMathFactor)]
    MULTIPLY           reduce using rule 77 (intMathPrimary)
    MULTIPLY           [reduce using rule 86 (floatMathFactor)]
    DIVIDE             reduce using rule 77 (intMathPrimary)
    DIVIDE             [reduce using rule 86 (floatMathFactor)]
    GREATER            reduce using rule 77 (intMathPrimary)
    GREATER            [reduce using rule 86 (floatMathFactor)]
    LESS               reduce using rule 77 (intMathPrimary)
    LESS               [reduce using rule 86 (floatMathFactor)]
    GREATER_EQUAL      reduce using rule 77 (intMathPrimary)
    GREATER_EQUAL      [reduce using rule 86 (floatMathFactor)]
    LESS_EQUAL         reduce using rule 77 (intMathPrimary)
    LESS_EQUAL         [reduce using rule 86 (floatMathFactor)]
    EQUAL              reduce using rule 77 (intMathPrimary)
    EQUAL              [reduce using rule 86 (floatMathFactor)]
    NOT_EQUAL          reduce using rule 77 (intMathPrimary)
    NOT_EQUAL          [reduce using rule 86 (floatMathFactor)]
    AND                reduce using rule 113 (logicalPrimary)
    OR                 reduce using rule 113 (logicalPrimary)
    RIGHT_PARENTHESIS  reduce using rule 77 (intMathPrimary)
    RIGHT_PARENTHESIS  [reduce using rule 86 (floatMathFactor)]
    RIGHT_PARENTHESIS  [reduce using rule 90 (stringExpression)]
    RIGHT_PARENTHESIS  [reduce using rule 113 (logicalPrimary)]
    ';'                reduce using rule 77 (intMathPrimary)
    ';'                [reduce using rule 86 (floatMathFactor)]
    ';'                [reduce using rule 90 (stringExpression)]
    ';'                [reduce using rule 113 (logicalPrimary)]
    ','                reduce using rule 77 (intMathPrimary)
    ','                [reduce using rule 86 (floatMathFactor)]
    ','                [reduce using rule 90 (stringExpression)]
    ','                [reduce using rule 113 (logicalPrimary)]
    $default           reduce using rule 77 (intMathPrimary)


State 69

   78 intMathPrimary: DIGIT .

    $default  reduce using rule 78 (intMathPrimary)


State 70

   87 floatMathFactor: FLOAT_LITERAL .

    $default  reduce using rule 87 (floatMathFactor)


State 71

   89 stringExpression: STRING_LITERAL .

    $default  reduce using rule 89 (stringExpression)


State 72

  112 logicalPrimary: BOOL_LITERAL .

    $default  reduce using rule 112 (logicalPrimary)


State 73

  158 returnStatement: RETURN ';' .

    $default  reduce using rule 158 (returnStatement)


State 74

  169 argument: expression . ',' argument
  170         | expression .

    ','  shift, and go to state 135

    $default  reduce using rule 170 (argument)


State 75

   34 expression: intMathExpression .
   67 intMathExpression: intMathExpression . PLUS intMathTerm
   68                  | intMathExpression . MINUS intMathTerm
   99 logicalPrimary: intMathExpression . GREATER intMathExpression
  100               | intMathExpression . LESS intMathExpression
  101               | intMathExpression . GREATER_EQUAL intMathExpression
  102               | intMathExpression . LESS_EQUAL intMathExpression
  103               | intMathExpression . EQUAL intMathExpression
  104               | intMathExpression . NOT_EQUAL intMathExpression

    PLUS           shift, and go to state 136
    MINUS          shift, and go to state 137
    GREATER        shift, and go to state 138
    LESS           shift, and go to state 139
    GREATER_EQUAL  shift, and go to state 140
    LESS_EQUAL     shift, and go to state 141
    EQUAL          shift, and go to state 142
    NOT_EQUAL      shift, and go to state 143

    $default  reduce using rule 34 (expression)


State 76

   69 intMathExpression: intMathTerm .
   70 intMathTerm: intMathTerm . MULTIPLY intMathFactor
   71            | intMathTerm . DIVIDE intMathFactor
   72            | intMathTerm . MODULO intMathFactor

    MULTIPLY  shift, and go to state 144
    DIVIDE    shift, and go to state 145
    MODULO    shift, and go to state 146

    $default  reduce using rule 69 (intMathExpression)


State 77

   73 intMathTerm: intMathFactor .

    $default  reduce using rule 73 (intMathTerm)


State 78

   74 intMathFactor: intMathPrimary .

    $default  reduce using rule 74 (intMathFactor)


State 79

   35 expression: floatMathExpression .
   80 floatMathExpression: floatMathExpression . PLUS floatMathTerm
   81                    | floatMathExpression . MINUS floatMathTerm
  105 logicalPrimary: floatMathExpression . GREATER floatMathExpression
  106               | floatMathExpression . LESS floatMathExpression
  107               | floatMathExpression . GREATER_EQUAL floatMathExpression
  108               | floatMathExpression . LESS_EQUAL floatMathExpression
  109               | floatMathExpression . EQUAL floatMathExpression
  110               | floatMathExpression . NOT_EQUAL floatMathExpression

    PLUS           shift, and go to state 147
    MINUS          shift, and go to state 148
    GREATER        shift, and go to state 149
    LESS           shift, and go to state 150
    GREATER_EQUAL  shift, and go to state 151
    LESS_EQUAL     shift, and go to state 152
    EQUAL          shift, and go to state 153
    NOT_EQUAL      shift, and go to state 154

    $default  reduce using rule 35 (expression)


State 80

   82 floatMathExpression: floatMathTerm .
   83 floatMathTerm: floatMathTerm . MULTIPLY floatMathFactor
   84              | floatMathTerm . DIVIDE floatMathFactor

    MULTIPLY  shift, and go to state 155
    DIVIDE    shift, and go to state 156

    $default  reduce using rule 82 (floatMathExpression)


State 81

   85 floatMathTerm: floatMathFactor .

    $default  reduce using rule 85 (floatMathTerm)


State 82

   36 expression: stringExpression .
   91 stringExpression: stringExpression . PLUS stringExpression

    PLUS  shift, and go to state 157

    $default  reduce using rule 36 (expression)


State 83

   37 expression: logicalExpression .
   94 logicalExpression: logicalExpression . OR logicalTerm

    OR  shift, and go to state 158

    $default  reduce using rule 37 (expression)


State 84

   93 logicalExpression: logicalTerm .
   96 logicalTerm: logicalTerm . AND logicalFactor

    AND  shift, and go to state 159

    $default  reduce using rule 93 (logicalExpression)


State 85

   95 logicalTerm: logicalFactor .

    $default  reduce using rule 95 (logicalTerm)


State 86

   97 logicalFactor: logicalPrimary .

    $default  reduce using rule 97 (logicalFactor)


State 87

  157 returnStatement: RETURN argument . ';'

    ';'  shift, and go to state 160


State 88

  127 repeatStatement: REPEAT LEFT_CURLY_BRACE . $@7 blockStatements RIGHT_CURLY_BRACE UNTIL LEFT_PARENTHESIS logicalExpression $@8 RIGHT_PARENTHESIS

    $default  reduce using rule 125 ($@7)

    $@7  go to state 161


State 89

  148 enumStatement: ENUM IDENTIFIER . LEFT_CURLY_BRACE $@15 enumIdentifiers RIGHT_CURLY_BRACE

    LEFT_CURLY_BRACE  shift, and go to state 162


State 90

  175 main: MAIN $@19 . LEFT_PARENTHESIS RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@20 blockStatements RIGHT_CURLY_BRACE

    LEFT_PARENTHESIS  shift, and go to state 163


State 91

  165 printStatement: PRINT LEFT_PARENTHESIS . argument RIGHT_PARENTHESIS ';'
  166               | PRINT LEFT_PARENTHESIS . RIGHT_PARENTHESIS ';'

    NOT                shift, and go to state 66
    LEFT_PARENTHESIS   shift, and go to state 67
    RIGHT_PARENTHESIS  shift, and go to state 164
    IDENTIFIER         shift, and go to state 68
    DIGIT              shift, and go to state 69
    FLOAT_LITERAL      shift, and go to state 70
    STRING_LITERAL     shift, and go to state 71
    BOOL_LITERAL       shift, and go to state 72

    RIGHT_PARENTHESIS  [reduce using rule 171 (argument)]

    expression           go to state 74
    intMathExpression    go to state 75
    intMathTerm          go to state 76
    intMathFactor        go to state 77
    intMathPrimary       go to state 78
    floatMathExpression  go to state 79
    floatMathTerm        go to state 80
    floatMathFactor      go to state 81
    stringExpression     go to state 82
    logicalExpression    go to state 83
    logicalTerm          go to state 84
    logicalFactor        go to state 85
    logicalPrimary       go to state 86
    argument             go to state 165


State 92

   65 incStatement: IDENTIFIER INCREMENT . ';'

    ';'  shift, and go to state 166


State 93

   66 decStatement: IDENTIFIER DECREMENT . ';'

    ';'  shift, and go to state 167


State 94

   60 assignmentStatement: IDENTIFIER ASSIGN . intMathExpression ';'
   61                    | IDENTIFIER ASSIGN . floatMathExpression ';'
   62                    | IDENTIFIER ASSIGN . stringExpression ';'
   63                    | IDENTIFIER ASSIGN . logicalExpression ';'
   64                    | IDENTIFIER ASSIGN . CHAR_LITERAL ';'

    NOT               shift, and go to state 66
    LEFT_PARENTHESIS  shift, and go to state 67
    IDENTIFIER        shift, and go to state 68
    DIGIT             shift, and go to state 69
    FLOAT_LITERAL     shift, and go to state 70
    STRING_LITERAL    shift, and go to state 71
    CHAR_LITERAL      shift, and go to state 168
    BOOL_LITERAL      shift, and go to state 72

    intMathExpression    go to state 169
    intMathTerm          go to state 76
    intMathFactor        go to state 77
    intMathPrimary       go to state 78
    floatMathExpression  go to state 170
    floatMathTerm        go to state 80
    floatMathFactor      go to state 81
    stringExpression     go to state 171
    logicalExpression    go to state 172
    logicalTerm          go to state 84
    logicalFactor        go to state 85
    logicalPrimary       go to state 86


State 95

  168 functionCallStatement: IDENTIFIER $@18 . LEFT_PARENTHESIS argument RIGHT_PARENTHESIS ';'

    LEFT_PARENTHESIS  shift, and go to state 173


State 96

    0 $accept: program $end .

    $default  accept


State 97

    2 program: program statement .

    $default  reduce using rule 2 (program)


State 98

   44 noSemiColumnAssignVariableDeclaration: INT . IDENTIFIER ASSIGN intMathExpression
   49 noSemiColumnNonAssignVariableDeclaration: INT . IDENTIFIER

    IDENTIFIER  shift, and go to state 48


State 99

   43 noSemiColumnAssignVariableDeclaration: CHAR . IDENTIFIER ASSIGN CHAR_LITERAL
   50 noSemiColumnNonAssignVariableDeclaration: CHAR . IDENTIFIER

    IDENTIFIER  shift, and go to state 49


State 100

   45 noSemiColumnAssignVariableDeclaration: FLOAT . IDENTIFIER ASSIGN floatMathExpression
   51 noSemiColumnNonAssignVariableDeclaration: FLOAT . IDENTIFIER

    IDENTIFIER  shift, and go to state 50


State 101

   46 noSemiColumnAssignVariableDeclaration: STRING . IDENTIFIER ASSIGN stringExpression
   52 noSemiColumnNonAssignVariableDeclaration: STRING . IDENTIFIER

    IDENTIFIER  shift, and go to state 51


State 102

   47 noSemiColumnAssignVariableDeclaration: BOOL . IDENTIFIER ASSIGN logicalExpression
   53 noSemiColumnNonAssignVariableDeclaration: BOOL . IDENTIFIER

    IDENTIFIER  shift, and go to state 57


State 103

    7 blockStatements: blockStatements blockStatement .

    $default  reduce using rule 7 (blockStatements)


State 104

  151 functionStatement: types FUNCTION . IDENTIFIER $@16 LEFT_PARENTHESIS $@17 parameter RIGHT_PARENTHESIS LEFT_CURLY_BRACE blockStatements RIGHT_CURLY_BRACE

    IDENTIFIER  shift, and go to state 174


State 105

   42 assignVariableDeclaration: noSemiColumnAssignVariableDeclaration ';' .

    $default  reduce using rule 42 (assignVariableDeclaration)


State 106

   48 nonAssignVariableDeclaration: noSemiColumnNonAssignVariableDeclaration ';' .

    $default  reduce using rule 48 (nonAssignVariableDeclaration)


State 107

   54 constDeclarationStatement: noSemiColumnConstDeclaration ';' .

    $default  reduce using rule 54 (constDeclarationStatement)


State 108

   44 noSemiColumnAssignVariableDeclaration: INT IDENTIFIER ASSIGN . intMathExpression

    LEFT_PARENTHESIS  shift, and go to state 175
    IDENTIFIER        shift, and go to state 176
    DIGIT             shift, and go to state 69

    intMathExpression  go to state 177
    intMathTerm        go to state 76
    intMathFactor      go to state 77
    intMathPrimary     go to state 78


State 109

   43 noSemiColumnAssignVariableDeclaration: CHAR IDENTIFIER ASSIGN . CHAR_LITERAL

    CHAR_LITERAL  shift, and go to state 178


State 110

   45 noSemiColumnAssignVariableDeclaration: FLOAT IDENTIFIER ASSIGN . floatMathExpression

    LEFT_PARENTHESIS  shift, and go to state 179
    IDENTIFIER        shift, and go to state 180
    FLOAT_LITERAL     shift, and go to state 70

    floatMathExpression  go to state 181
    floatMathTerm        go to state 80
    floatMathFactor      go to state 81


State 111

   46 noSemiColumnAssignVariableDeclaration: STRING IDENTIFIER ASSIGN . stringExpression

    LEFT_PARENTHESIS  shift, and go to state 182
    IDENTIFIER        shift, and go to state 183
    STRING_LITERAL    shift, and go to state 71

    stringExpression  go to state 184


State 112

   56 noSemiColumnConstDeclaration: CONST INT IDENTIFIER . ASSIGN intMathExpression

    ASSIGN  shift, and go to state 185


State 113

   55 noSemiColumnConstDeclaration: CONST CHAR IDENTIFIER . ASSIGN CHAR_LITERAL

    ASSIGN  shift, and go to state 186


State 114

   57 noSemiColumnConstDeclaration: CONST FLOAT IDENTIFIER . ASSIGN floatMathExpression

    ASSIGN  shift, and go to state 187


State 115

   58 noSemiColumnConstDeclaration: CONST STRING IDENTIFIER . ASSIGN stringExpression

    ASSIGN  shift, and go to state 188


State 116

   59 noSemiColumnConstDeclaration: CONST BOOL IDENTIFIER . ASSIGN logicalExpression

    ASSIGN  shift, and go to state 189


State 117

   47 noSemiColumnAssignVariableDeclaration: BOOL IDENTIFIER ASSIGN . logicalExpression

    NOT               shift, and go to state 66
    LEFT_PARENTHESIS  shift, and go to state 118
    IDENTIFIER        shift, and go to state 119
    DIGIT             shift, and go to state 69
    FLOAT_LITERAL     shift, and go to state 70
    BOOL_LITERAL      shift, and go to state 72

    intMathExpression    go to state 120
    intMathTerm          go to state 76
    intMathFactor        go to state 77
    intMathPrimary       go to state 78
    floatMathExpression  go to state 121
    floatMathTerm        go to state 80
    floatMathFactor      go to state 81
    logicalExpression    go to state 190
    logicalTerm          go to state 84
    logicalFactor        go to state 85
    logicalPrimary       go to state 86


State 118

   79 intMathPrimary: LEFT_PARENTHESIS . intMathExpression RIGHT_PARENTHESIS
   88 floatMathFactor: LEFT_PARENTHESIS . floatMathExpression RIGHT_PARENTHESIS
  111 logicalPrimary: LEFT_PARENTHESIS . logicalExpression RIGHT_PARENTHESIS

    NOT               shift, and go to state 66
    LEFT_PARENTHESIS  shift, and go to state 118
    IDENTIFIER        shift, and go to state 119
    DIGIT             shift, and go to state 69
    FLOAT_LITERAL     shift, and go to state 70
    BOOL_LITERAL      shift, and go to state 72

    intMathExpression    go to state 129
    intMathTerm          go to state 76
    intMathFactor        go to state 77
    intMathPrimary       go to state 78
    floatMathExpression  go to state 130
    floatMathTerm        go to state 80
    floatMathFactor      go to state 81
    logicalExpression    go to state 132
    logicalTerm          go to state 84
    logicalFactor        go to state 85
    logicalPrimary       go to state 86


State 119

   75 intMathFactor: IDENTIFIER . INCREMENT
   76              | IDENTIFIER . DECREMENT
   77 intMathPrimary: IDENTIFIER .
   86 floatMathFactor: IDENTIFIER .
  113 logicalPrimary: IDENTIFIER .

    INCREMENT  shift, and go to state 133
    DECREMENT  shift, and go to state 134

    PLUS               reduce using rule 77 (intMathPrimary)
    PLUS               [reduce using rule 86 (floatMathFactor)]
    MINUS              reduce using rule 77 (intMathPrimary)
    MINUS              [reduce using rule 86 (floatMathFactor)]
    MULTIPLY           reduce using rule 77 (intMathPrimary)
    MULTIPLY           [reduce using rule 86 (floatMathFactor)]
    DIVIDE             reduce using rule 77 (intMathPrimary)
    DIVIDE             [reduce using rule 86 (floatMathFactor)]
    GREATER            reduce using rule 77 (intMathPrimary)
    GREATER            [reduce using rule 86 (floatMathFactor)]
    LESS               reduce using rule 77 (intMathPrimary)
    LESS               [reduce using rule 86 (floatMathFactor)]
    GREATER_EQUAL      reduce using rule 77 (intMathPrimary)
    GREATER_EQUAL      [reduce using rule 86 (floatMathFactor)]
    LESS_EQUAL         reduce using rule 77 (intMathPrimary)
    LESS_EQUAL         [reduce using rule 86 (floatMathFactor)]
    EQUAL              reduce using rule 77 (intMathPrimary)
    EQUAL              [reduce using rule 86 (floatMathFactor)]
    NOT_EQUAL          reduce using rule 77 (intMathPrimary)
    NOT_EQUAL          [reduce using rule 86 (floatMathFactor)]
    AND                reduce using rule 113 (logicalPrimary)
    OR                 reduce using rule 113 (logicalPrimary)
    RIGHT_PARENTHESIS  reduce using rule 77 (intMathPrimary)
    RIGHT_PARENTHESIS  [reduce using rule 86 (floatMathFactor)]
    RIGHT_PARENTHESIS  [reduce using rule 113 (logicalPrimary)]
    ';'                reduce using rule 113 (logicalPrimary)
    ','                reduce using rule 113 (logicalPrimary)
    $default           reduce using rule 77 (intMathPrimary)


State 120

   67 intMathExpression: intMathExpression . PLUS intMathTerm
   68                  | intMathExpression . MINUS intMathTerm
   99 logicalPrimary: intMathExpression . GREATER intMathExpression
  100               | intMathExpression . LESS intMathExpression
  101               | intMathExpression . GREATER_EQUAL intMathExpression
  102               | intMathExpression . LESS_EQUAL intMathExpression
  103               | intMathExpression . EQUAL intMathExpression
  104               | intMathExpression . NOT_EQUAL intMathExpression

    PLUS           shift, and go to state 136
    MINUS          shift, and go to state 137
    GREATER        shift, and go to state 138
    LESS           shift, and go to state 139
    GREATER_EQUAL  shift, and go to state 140
    LESS_EQUAL     shift, and go to state 141
    EQUAL          shift, and go to state 142
    NOT_EQUAL      shift, and go to state 143


State 121

   80 floatMathExpression: floatMathExpression . PLUS floatMathTerm
   81                    | floatMathExpression . MINUS floatMathTerm
  105 logicalPrimary: floatMathExpression . GREATER floatMathExpression
  106               | floatMathExpression . LESS floatMathExpression
  107               | floatMathExpression . GREATER_EQUAL floatMathExpression
  108               | floatMathExpression . LESS_EQUAL floatMathExpression
  109               | floatMathExpression . EQUAL floatMathExpression
  110               | floatMathExpression . NOT_EQUAL floatMathExpression

    PLUS           shift, and go to state 147
    MINUS          shift, and go to state 148
    GREATER        shift, and go to state 149
    LESS           shift, and go to state 150
    GREATER_EQUAL  shift, and go to state 151
    LESS_EQUAL     shift, and go to state 152
    EQUAL          shift, and go to state 153
    NOT_EQUAL      shift, and go to state 154


State 122

   94 logicalExpression: logicalExpression . OR logicalTerm
  117 ifStatement: IF LEFT_PARENTHESIS logicalExpression . $@1 RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@2 blockStatements RIGHT_CURLY_BRACE $@3 elsePart

    OR  shift, and go to state 158

    $default  reduce using rule 114 ($@1)

    $@1  go to state 191


State 123

  139 switchStatement: SWITCH LEFT_PARENTHESIS IDENTIFIER . $@12 RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@13 caseList RIGHT_CURLY_BRACE

    $default  reduce using rule 137 ($@12)

    $@12  go to state 192


State 124

  163 continueBreakStatement: CONTINUE IDENTIFIER ';' .

    $default  reduce using rule 163 (continueBreakStatement)


State 125

  160 continueBreakStatement: BREAK IDENTIFIER ';' .

    $default  reduce using rule 160 (continueBreakStatement)


State 126

   94 logicalExpression: logicalExpression . OR logicalTerm
  124 whileStatement: WHILE LEFT_PARENTHESIS logicalExpression . $@5 RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@6 blockStatements RIGHT_CURLY_BRACE

    OR  shift, and go to state 158

    $default  reduce using rule 122 ($@5)

    $@5  go to state 193


State 127

  136 forStatement: FOR LEFT_PARENTHESIS $@9 . forDeclaration $@10 logicalExpression $@11 ';' forAssignment RIGHT_PARENTHESIS LEFT_CURLY_BRACE blockStatements RIGHT_CURLY_BRACE

    INT         shift, and go to state 194
    CHAR        shift, and go to state 195
    FLOAT       shift, and go to state 196
    STRING      shift, and go to state 197
    BOOL        shift, and go to state 198
    IDENTIFIER  shift, and go to state 199

    assignVariableDeclaration              go to state 200
    noSemiColumnAssignVariableDeclaration  go to state 27
    forDeclaration                         go to state 201


State 128

   98 logicalFactor: NOT logicalFactor .

    $default  reduce using rule 98 (logicalFactor)


State 129

   67 intMathExpression: intMathExpression . PLUS intMathTerm
   68                  | intMathExpression . MINUS intMathTerm
   79 intMathPrimary: LEFT_PARENTHESIS intMathExpression . RIGHT_PARENTHESIS
   99 logicalPrimary: intMathExpression . GREATER intMathExpression
  100               | intMathExpression . LESS intMathExpression
  101               | intMathExpression . GREATER_EQUAL intMathExpression
  102               | intMathExpression . LESS_EQUAL intMathExpression
  103               | intMathExpression . EQUAL intMathExpression
  104               | intMathExpression . NOT_EQUAL intMathExpression

    PLUS               shift, and go to state 136
    MINUS              shift, and go to state 137
    GREATER            shift, and go to state 138
    LESS               shift, and go to state 139
    GREATER_EQUAL      shift, and go to state 140
    LESS_EQUAL         shift, and go to state 141
    EQUAL              shift, and go to state 142
    NOT_EQUAL          shift, and go to state 143
    RIGHT_PARENTHESIS  shift, and go to state 202


State 130

   80 floatMathExpression: floatMathExpression . PLUS floatMathTerm
   81                    | floatMathExpression . MINUS floatMathTerm
   88 floatMathFactor: LEFT_PARENTHESIS floatMathExpression . RIGHT_PARENTHESIS
  105 logicalPrimary: floatMathExpression . GREATER floatMathExpression
  106               | floatMathExpression . LESS floatMathExpression
  107               | floatMathExpression . GREATER_EQUAL floatMathExpression
  108               | floatMathExpression . LESS_EQUAL floatMathExpression
  109               | floatMathExpression . EQUAL floatMathExpression
  110               | floatMathExpression . NOT_EQUAL floatMathExpression

    PLUS               shift, and go to state 147
    MINUS              shift, and go to state 148
    GREATER            shift, and go to state 149
    LESS               shift, and go to state 150
    GREATER_EQUAL      shift, and go to state 151
    LESS_EQUAL         shift, and go to state 152
    EQUAL              shift, and go to state 153
    NOT_EQUAL          shift, and go to state 154
    RIGHT_PARENTHESIS  shift, and go to state 203


State 131

   91 stringExpression: stringExpression . PLUS stringExpression
   92                 | LEFT_PARENTHESIS stringExpression . RIGHT_PARENTHESIS

    PLUS               shift, and go to state 157
    RIGHT_PARENTHESIS  shift, and go to state 204


State 132

   94 logicalExpression: logicalExpression . OR logicalTerm
  111 logicalPrimary: LEFT_PARENTHESIS logicalExpression . RIGHT_PARENTHESIS

    OR                 shift, and go to state 158
    RIGHT_PARENTHESIS  shift, and go to state 205


State 133

   75 intMathFactor: IDENTIFIER INCREMENT .

    $default  reduce using rule 75 (intMathFactor)


State 134

   76 intMathFactor: IDENTIFIER DECREMENT .

    $default  reduce using rule 76 (intMathFactor)


State 135

  169 argument: expression ',' . argument

    NOT               shift, and go to state 66
    LEFT_PARENTHESIS  shift, and go to state 67
    IDENTIFIER        shift, and go to state 68
    DIGIT             shift, and go to state 69
    FLOAT_LITERAL     shift, and go to state 70
    STRING_LITERAL    shift, and go to state 71
    BOOL_LITERAL      shift, and go to state 72

    $default  reduce using rule 171 (argument)

    expression           go to state 74
    intMathExpression    go to state 75
    intMathTerm          go to state 76
    intMathFactor        go to state 77
    intMathPrimary       go to state 78
    floatMathExpression  go to state 79
    floatMathTerm        go to state 80
    floatMathFactor      go to state 81
    stringExpression     go to state 82
    logicalExpression    go to state 83
    logicalTerm          go to state 84
    logicalFactor        go to state 85
    logicalPrimary       go to state 86
    argument             go to state 206


State 136

   67 intMathExpression: intMathExpression PLUS . intMathTerm

    LEFT_PARENTHESIS  shift, and go to state 175
    IDENTIFIER        shift, and go to state 176
    DIGIT             shift, and go to state 69

    intMathTerm     go to state 207
    intMathFactor   go to state 77
    intMathPrimary  go to state 78


State 137

   68 intMathExpression: intMathExpression MINUS . intMathTerm

    LEFT_PARENTHESIS  shift, and go to state 175
    IDENTIFIER        shift, and go to state 176
    DIGIT             shift, and go to state 69

    intMathTerm     go to state 208
    intMathFactor   go to state 77
    intMathPrimary  go to state 78


State 138

   99 logicalPrimary: intMathExpression GREATER . intMathExpression

    LEFT_PARENTHESIS  shift, and go to state 175
    IDENTIFIER        shift, and go to state 176
    DIGIT             shift, and go to state 69

    intMathExpression  go to state 209
    intMathTerm        go to state 76
    intMathFactor      go to state 77
    intMathPrimary     go to state 78


State 139

  100 logicalPrimary: intMathExpression LESS . intMathExpression

    LEFT_PARENTHESIS  shift, and go to state 175
    IDENTIFIER        shift, and go to state 176
    DIGIT             shift, and go to state 69

    intMathExpression  go to state 210
    intMathTerm        go to state 76
    intMathFactor      go to state 77
    intMathPrimary     go to state 78


State 140

  101 logicalPrimary: intMathExpression GREATER_EQUAL . intMathExpression

    LEFT_PARENTHESIS  shift, and go to state 175
    IDENTIFIER        shift, and go to state 176
    DIGIT             shift, and go to state 69

    intMathExpression  go to state 211
    intMathTerm        go to state 76
    intMathFactor      go to state 77
    intMathPrimary     go to state 78


State 141

  102 logicalPrimary: intMathExpression LESS_EQUAL . intMathExpression

    LEFT_PARENTHESIS  shift, and go to state 175
    IDENTIFIER        shift, and go to state 176
    DIGIT             shift, and go to state 69

    intMathExpression  go to state 212
    intMathTerm        go to state 76
    intMathFactor      go to state 77
    intMathPrimary     go to state 78


State 142

  103 logicalPrimary: intMathExpression EQUAL . intMathExpression

    LEFT_PARENTHESIS  shift, and go to state 175
    IDENTIFIER        shift, and go to state 176
    DIGIT             shift, and go to state 69

    intMathExpression  go to state 213
    intMathTerm        go to state 76
    intMathFactor      go to state 77
    intMathPrimary     go to state 78


State 143

  104 logicalPrimary: intMathExpression NOT_EQUAL . intMathExpression

    LEFT_PARENTHESIS  shift, and go to state 175
    IDENTIFIER        shift, and go to state 176
    DIGIT             shift, and go to state 69

    intMathExpression  go to state 214
    intMathTerm        go to state 76
    intMathFactor      go to state 77
    intMathPrimary     go to state 78


State 144

   70 intMathTerm: intMathTerm MULTIPLY . intMathFactor

    LEFT_PARENTHESIS  shift, and go to state 175
    IDENTIFIER        shift, and go to state 176
    DIGIT             shift, and go to state 69

    intMathFactor   go to state 215
    intMathPrimary  go to state 78


State 145

   71 intMathTerm: intMathTerm DIVIDE . intMathFactor

    LEFT_PARENTHESIS  shift, and go to state 175
    IDENTIFIER        shift, and go to state 176
    DIGIT             shift, and go to state 69

    intMathFactor   go to state 216
    intMathPrimary  go to state 78


State 146

   72 intMathTerm: intMathTerm MODULO . intMathFactor

    LEFT_PARENTHESIS  shift, and go to state 175
    IDENTIFIER        shift, and go to state 176
    DIGIT             shift, and go to state 69

    intMathFactor   go to state 217
    intMathPrimary  go to state 78


State 147

   80 floatMathExpression: floatMathExpression PLUS . floatMathTerm

    LEFT_PARENTHESIS  shift, and go to state 179
    IDENTIFIER        shift, and go to state 180
    FLOAT_LITERAL     shift, and go to state 70

    floatMathTerm    go to state 218
    floatMathFactor  go to state 81


State 148

   81 floatMathExpression: floatMathExpression MINUS . floatMathTerm

    LEFT_PARENTHESIS  shift, and go to state 179
    IDENTIFIER        shift, and go to state 180
    FLOAT_LITERAL     shift, and go to state 70

    floatMathTerm    go to state 219
    floatMathFactor  go to state 81


State 149

  105 logicalPrimary: floatMathExpression GREATER . floatMathExpression

    LEFT_PARENTHESIS  shift, and go to state 179
    IDENTIFIER        shift, and go to state 180
    FLOAT_LITERAL     shift, and go to state 70

    floatMathExpression  go to state 220
    floatMathTerm        go to state 80
    floatMathFactor      go to state 81


State 150

  106 logicalPrimary: floatMathExpression LESS . floatMathExpression

    LEFT_PARENTHESIS  shift, and go to state 179
    IDENTIFIER        shift, and go to state 180
    FLOAT_LITERAL     shift, and go to state 70

    floatMathExpression  go to state 221
    floatMathTerm        go to state 80
    floatMathFactor      go to state 81


State 151

  107 logicalPrimary: floatMathExpression GREATER_EQUAL . floatMathExpression

    LEFT_PARENTHESIS  shift, and go to state 179
    IDENTIFIER        shift, and go to state 180
    FLOAT_LITERAL     shift, and go to state 70

    floatMathExpression  go to state 222
    floatMathTerm        go to state 80
    floatMathFactor      go to state 81


State 152

  108 logicalPrimary: floatMathExpression LESS_EQUAL . floatMathExpression

    LEFT_PARENTHESIS  shift, and go to state 179
    IDENTIFIER        shift, and go to state 180
    FLOAT_LITERAL     shift, and go to state 70

    floatMathExpression  go to state 223
    floatMathTerm        go to state 80
    floatMathFactor      go to state 81


State 153

  109 logicalPrimary: floatMathExpression EQUAL . floatMathExpression

    LEFT_PARENTHESIS  shift, and go to state 179
    IDENTIFIER        shift, and go to state 180
    FLOAT_LITERAL     shift, and go to state 70

    floatMathExpression  go to state 224
    floatMathTerm        go to state 80
    floatMathFactor      go to state 81


State 154

  110 logicalPrimary: floatMathExpression NOT_EQUAL . floatMathExpression

    LEFT_PARENTHESIS  shift, and go to state 179
    IDENTIFIER        shift, and go to state 180
    FLOAT_LITERAL     shift, and go to state 70

    floatMathExpression  go to state 225
    floatMathTerm        go to state 80
    floatMathFactor      go to state 81


State 155

   83 floatMathTerm: floatMathTerm MULTIPLY . floatMathFactor

    LEFT_PARENTHESIS  shift, and go to state 179
    IDENTIFIER        shift, and go to state 180
    FLOAT_LITERAL     shift, and go to state 70

    floatMathFactor  go to state 226


State 156

   84 floatMathTerm: floatMathTerm DIVIDE . floatMathFactor

    LEFT_PARENTHESIS  shift, and go to state 179
    IDENTIFIER        shift, and go to state 180
    FLOAT_LITERAL     shift, and go to state 70

    floatMathFactor  go to state 227


State 157

   91 stringExpression: stringExpression PLUS . stringExpression

    LEFT_PARENTHESIS  shift, and go to state 182
    IDENTIFIER        shift, and go to state 183
    STRING_LITERAL    shift, and go to state 71

    stringExpression  go to state 228


State 158

   94 logicalExpression: logicalExpression OR . logicalTerm

    NOT               shift, and go to state 66
    LEFT_PARENTHESIS  shift, and go to state 118
    IDENTIFIER        shift, and go to state 119
    DIGIT             shift, and go to state 69
    FLOAT_LITERAL     shift, and go to state 70
    BOOL_LITERAL      shift, and go to state 72

    intMathExpression    go to state 120
    intMathTerm          go to state 76
    intMathFactor        go to state 77
    intMathPrimary       go to state 78
    floatMathExpression  go to state 121
    floatMathTerm        go to state 80
    floatMathFactor      go to state 81
    logicalTerm          go to state 229
    logicalFactor        go to state 85
    logicalPrimary       go to state 86


State 159

   96 logicalTerm: logicalTerm AND . logicalFactor

    NOT               shift, and go to state 66
    LEFT_PARENTHESIS  shift, and go to state 118
    IDENTIFIER        shift, and go to state 119
    DIGIT             shift, and go to state 69
    FLOAT_LITERAL     shift, and go to state 70
    BOOL_LITERAL      shift, and go to state 72

    intMathExpression    go to state 120
    intMathTerm          go to state 76
    intMathFactor        go to state 77
    intMathPrimary       go to state 78
    floatMathExpression  go to state 121
    floatMathTerm        go to state 80
    floatMathFactor      go to state 81
    logicalFactor        go to state 230
    logicalPrimary       go to state 86


State 160

  157 returnStatement: RETURN argument ';' .

    $default  reduce using rule 157 (returnStatement)


State 161

  127 repeatStatement: REPEAT LEFT_CURLY_BRACE $@7 . blockStatements RIGHT_CURLY_BRACE UNTIL LEFT_PARENTHESIS logicalExpression $@8 RIGHT_PARENTHESIS

    INT         shift, and go to state 98
    CHAR        shift, and go to state 99
    FLOAT       shift, and go to state 100
    STRING      shift, and go to state 101
    CONST       shift, and go to state 5
    BOOL        shift, and go to state 102
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    CONTINUE    shift, and go to state 9
    BREAK       shift, and go to state 10
    WHILE       shift, and go to state 11
    FOR         shift, and go to state 12
    RETURN      shift, and go to state 13
    REPEAT      shift, and go to state 14
    ENUM        shift, and go to state 15
    PRINT       shift, and go to state 17
    COMMENT     shift, and go to state 18
    IDENTIFIER  shift, and go to state 19

    blockStatements                           go to state 231
    blockStatement                            go to state 23
    variableDeclarationStatement              go to state 25
    assignVariableDeclaration                 go to state 26
    noSemiColumnAssignVariableDeclaration     go to state 27
    nonAssignVariableDeclaration              go to state 28
    noSemiColumnNonAssignVariableDeclaration  go to state 29
    constDeclarationStatement                 go to state 30
    noSemiColumnConstDeclaration              go to state 31
    assignmentStatement                       go to state 32
    incStatement                              go to state 33
    decStatement                              go to state 34
    ifStatement                               go to state 35
    whileStatement                            go to state 36
    repeatStatement                           go to state 37
    forStatement                              go to state 38
    switchStatement                           go to state 39
    enumStatement                             go to state 40
    returnStatement                           go to state 42
    continueBreakStatement                    go to state 43
    printStatement                            go to state 44
    functionCallStatement                     go to state 45
    comment                                   go to state 46


State 162

  148 enumStatement: ENUM IDENTIFIER LEFT_CURLY_BRACE . $@15 enumIdentifiers RIGHT_CURLY_BRACE

    $default  reduce using rule 147 ($@15)

    $@15  go to state 232


State 163

  175 main: MAIN $@19 LEFT_PARENTHESIS . RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@20 blockStatements RIGHT_CURLY_BRACE

    RIGHT_PARENTHESIS  shift, and go to state 233


State 164

  166 printStatement: PRINT LEFT_PARENTHESIS RIGHT_PARENTHESIS . ';'

    ';'  shift, and go to state 234


State 165

  165 printStatement: PRINT LEFT_PARENTHESIS argument . RIGHT_PARENTHESIS ';'

    RIGHT_PARENTHESIS  shift, and go to state 235


State 166

   65 incStatement: IDENTIFIER INCREMENT ';' .

    $default  reduce using rule 65 (incStatement)


State 167

   66 decStatement: IDENTIFIER DECREMENT ';' .

    $default  reduce using rule 66 (decStatement)


State 168

   64 assignmentStatement: IDENTIFIER ASSIGN CHAR_LITERAL . ';'

    ';'  shift, and go to state 236


State 169

   60 assignmentStatement: IDENTIFIER ASSIGN intMathExpression . ';'
   67 intMathExpression: intMathExpression . PLUS intMathTerm
   68                  | intMathExpression . MINUS intMathTerm
   99 logicalPrimary: intMathExpression . GREATER intMathExpression
  100               | intMathExpression . LESS intMathExpression
  101               | intMathExpression . GREATER_EQUAL intMathExpression
  102               | intMathExpression . LESS_EQUAL intMathExpression
  103               | intMathExpression . EQUAL intMathExpression
  104               | intMathExpression . NOT_EQUAL intMathExpression

    PLUS           shift, and go to state 136
    MINUS          shift, and go to state 137
    GREATER        shift, and go to state 138
    LESS           shift, and go to state 139
    GREATER_EQUAL  shift, and go to state 140
    LESS_EQUAL     shift, and go to state 141
    EQUAL          shift, and go to state 142
    NOT_EQUAL      shift, and go to state 143
    ';'            shift, and go to state 237


State 170

   61 assignmentStatement: IDENTIFIER ASSIGN floatMathExpression . ';'
   80 floatMathExpression: floatMathExpression . PLUS floatMathTerm
   81                    | floatMathExpression . MINUS floatMathTerm
  105 logicalPrimary: floatMathExpression . GREATER floatMathExpression
  106               | floatMathExpression . LESS floatMathExpression
  107               | floatMathExpression . GREATER_EQUAL floatMathExpression
  108               | floatMathExpression . LESS_EQUAL floatMathExpression
  109               | floatMathExpression . EQUAL floatMathExpression
  110               | floatMathExpression . NOT_EQUAL floatMathExpression

    PLUS           shift, and go to state 147
    MINUS          shift, and go to state 148
    GREATER        shift, and go to state 149
    LESS           shift, and go to state 150
    GREATER_EQUAL  shift, and go to state 151
    LESS_EQUAL     shift, and go to state 152
    EQUAL          shift, and go to state 153
    NOT_EQUAL      shift, and go to state 154
    ';'            shift, and go to state 238


State 171

   62 assignmentStatement: IDENTIFIER ASSIGN stringExpression . ';'
   91 stringExpression: stringExpression . PLUS stringExpression

    PLUS  shift, and go to state 157
    ';'   shift, and go to state 239


State 172

   63 assignmentStatement: IDENTIFIER ASSIGN logicalExpression . ';'
   94 logicalExpression: logicalExpression . OR logicalTerm

    OR   shift, and go to state 158
    ';'  shift, and go to state 240


State 173

  168 functionCallStatement: IDENTIFIER $@18 LEFT_PARENTHESIS . argument RIGHT_PARENTHESIS ';'

    NOT               shift, and go to state 66
    LEFT_PARENTHESIS  shift, and go to state 67
    IDENTIFIER        shift, and go to state 68
    DIGIT             shift, and go to state 69
    FLOAT_LITERAL     shift, and go to state 70
    STRING_LITERAL    shift, and go to state 71
    BOOL_LITERAL      shift, and go to state 72

    $default  reduce using rule 171 (argument)

    expression           go to state 74
    intMathExpression    go to state 75
    intMathTerm          go to state 76
    intMathFactor        go to state 77
    intMathPrimary       go to state 78
    floatMathExpression  go to state 79
    floatMathTerm        go to state 80
    floatMathFactor      go to state 81
    stringExpression     go to state 82
    logicalExpression    go to state 83
    logicalTerm          go to state 84
    logicalFactor        go to state 85
    logicalPrimary       go to state 86
    argument             go to state 241


State 174

  151 functionStatement: types FUNCTION IDENTIFIER . $@16 LEFT_PARENTHESIS $@17 parameter RIGHT_PARENTHESIS LEFT_CURLY_BRACE blockStatements RIGHT_CURLY_BRACE

    $default  reduce using rule 149 ($@16)

    $@16  go to state 242


State 175

   79 intMathPrimary: LEFT_PARENTHESIS . intMathExpression RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 175
    IDENTIFIER        shift, and go to state 176
    DIGIT             shift, and go to state 69

    intMathExpression  go to state 243
    intMathTerm        go to state 76
    intMathFactor      go to state 77
    intMathPrimary     go to state 78


State 176

   75 intMathFactor: IDENTIFIER . INCREMENT
   76              | IDENTIFIER . DECREMENT
   77 intMathPrimary: IDENTIFIER .

    INCREMENT  shift, and go to state 133
    DECREMENT  shift, and go to state 134

    $default  reduce using rule 77 (intMathPrimary)


State 177

   44 noSemiColumnAssignVariableDeclaration: INT IDENTIFIER ASSIGN intMathExpression .
   67 intMathExpression: intMathExpression . PLUS intMathTerm
   68                  | intMathExpression . MINUS intMathTerm

    PLUS   shift, and go to state 136
    MINUS  shift, and go to state 137

    $default  reduce using rule 44 (noSemiColumnAssignVariableDeclaration)


State 178

   43 noSemiColumnAssignVariableDeclaration: CHAR IDENTIFIER ASSIGN CHAR_LITERAL .

    $default  reduce using rule 43 (noSemiColumnAssignVariableDeclaration)


State 179

   88 floatMathFactor: LEFT_PARENTHESIS . floatMathExpression RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 179
    IDENTIFIER        shift, and go to state 180
    FLOAT_LITERAL     shift, and go to state 70

    floatMathExpression  go to state 244
    floatMathTerm        go to state 80
    floatMathFactor      go to state 81


State 180

   86 floatMathFactor: IDENTIFIER .

    $default  reduce using rule 86 (floatMathFactor)


State 181

   45 noSemiColumnAssignVariableDeclaration: FLOAT IDENTIFIER ASSIGN floatMathExpression .
   80 floatMathExpression: floatMathExpression . PLUS floatMathTerm
   81                    | floatMathExpression . MINUS floatMathTerm

    PLUS   shift, and go to state 147
    MINUS  shift, and go to state 148

    $default  reduce using rule 45 (noSemiColumnAssignVariableDeclaration)


State 182

   92 stringExpression: LEFT_PARENTHESIS . stringExpression RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 182
    IDENTIFIER        shift, and go to state 183
    STRING_LITERAL    shift, and go to state 71

    stringExpression  go to state 131


State 183

   90 stringExpression: IDENTIFIER .

    $default  reduce using rule 90 (stringExpression)


State 184

   46 noSemiColumnAssignVariableDeclaration: STRING IDENTIFIER ASSIGN stringExpression .
   91 stringExpression: stringExpression . PLUS stringExpression

    PLUS  shift, and go to state 157

    $default  reduce using rule 46 (noSemiColumnAssignVariableDeclaration)


State 185

   56 noSemiColumnConstDeclaration: CONST INT IDENTIFIER ASSIGN . intMathExpression

    LEFT_PARENTHESIS  shift, and go to state 175
    IDENTIFIER        shift, and go to state 176
    DIGIT             shift, and go to state 69

    intMathExpression  go to state 245
    intMathTerm        go to state 76
    intMathFactor      go to state 77
    intMathPrimary     go to state 78


State 186

   55 noSemiColumnConstDeclaration: CONST CHAR IDENTIFIER ASSIGN . CHAR_LITERAL

    CHAR_LITERAL  shift, and go to state 246


State 187

   57 noSemiColumnConstDeclaration: CONST FLOAT IDENTIFIER ASSIGN . floatMathExpression

    LEFT_PARENTHESIS  shift, and go to state 179
    IDENTIFIER        shift, and go to state 180
    FLOAT_LITERAL     shift, and go to state 70

    floatMathExpression  go to state 247
    floatMathTerm        go to state 80
    floatMathFactor      go to state 81


State 188

   58 noSemiColumnConstDeclaration: CONST STRING IDENTIFIER ASSIGN . stringExpression

    LEFT_PARENTHESIS  shift, and go to state 182
    IDENTIFIER        shift, and go to state 183
    STRING_LITERAL    shift, and go to state 71

    stringExpression  go to state 248


State 189

   59 noSemiColumnConstDeclaration: CONST BOOL IDENTIFIER ASSIGN . logicalExpression

    NOT               shift, and go to state 66
    LEFT_PARENTHESIS  shift, and go to state 118
    IDENTIFIER        shift, and go to state 119
    DIGIT             shift, and go to state 69
    FLOAT_LITERAL     shift, and go to state 70
    BOOL_LITERAL      shift, and go to state 72

    intMathExpression    go to state 120
    intMathTerm          go to state 76
    intMathFactor        go to state 77
    intMathPrimary       go to state 78
    floatMathExpression  go to state 121
    floatMathTerm        go to state 80
    floatMathFactor      go to state 81
    logicalExpression    go to state 249
    logicalTerm          go to state 84
    logicalFactor        go to state 85
    logicalPrimary       go to state 86


State 190

   47 noSemiColumnAssignVariableDeclaration: BOOL IDENTIFIER ASSIGN logicalExpression .
   94 logicalExpression: logicalExpression . OR logicalTerm

    OR  shift, and go to state 158

    $default  reduce using rule 47 (noSemiColumnAssignVariableDeclaration)


State 191

  117 ifStatement: IF LEFT_PARENTHESIS logicalExpression $@1 . RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@2 blockStatements RIGHT_CURLY_BRACE $@3 elsePart

    RIGHT_PARENTHESIS  shift, and go to state 250


State 192

  139 switchStatement: SWITCH LEFT_PARENTHESIS IDENTIFIER $@12 . RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@13 caseList RIGHT_CURLY_BRACE

    RIGHT_PARENTHESIS  shift, and go to state 251


State 193

  124 whileStatement: WHILE LEFT_PARENTHESIS logicalExpression $@5 . RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@6 blockStatements RIGHT_CURLY_BRACE

    RIGHT_PARENTHESIS  shift, and go to state 252


State 194

   44 noSemiColumnAssignVariableDeclaration: INT . IDENTIFIER ASSIGN intMathExpression

    IDENTIFIER  shift, and go to state 253


State 195

   43 noSemiColumnAssignVariableDeclaration: CHAR . IDENTIFIER ASSIGN CHAR_LITERAL

    IDENTIFIER  shift, and go to state 254


State 196

   45 noSemiColumnAssignVariableDeclaration: FLOAT . IDENTIFIER ASSIGN floatMathExpression

    IDENTIFIER  shift, and go to state 255


State 197

   46 noSemiColumnAssignVariableDeclaration: STRING . IDENTIFIER ASSIGN stringExpression

    IDENTIFIER  shift, and go to state 256


State 198

   47 noSemiColumnAssignVariableDeclaration: BOOL . IDENTIFIER ASSIGN logicalExpression

    IDENTIFIER  shift, and go to state 257


State 199

  131 forDeclaration: IDENTIFIER . ASSIGN expression ';'

    ASSIGN  shift, and go to state 258


State 200

  132 forDeclaration: assignVariableDeclaration .

    $default  reduce using rule 132 (forDeclaration)


State 201

  136 forStatement: FOR LEFT_PARENTHESIS $@9 forDeclaration . $@10 logicalExpression $@11 ';' forAssignment RIGHT_PARENTHESIS LEFT_CURLY_BRACE blockStatements RIGHT_CURLY_BRACE

    $default  reduce using rule 134 ($@10)

    $@10  go to state 259


State 202

   79 intMathPrimary: LEFT_PARENTHESIS intMathExpression RIGHT_PARENTHESIS .

    $default  reduce using rule 79 (intMathPrimary)


State 203

   88 floatMathFactor: LEFT_PARENTHESIS floatMathExpression RIGHT_PARENTHESIS .

    $default  reduce using rule 88 (floatMathFactor)


State 204

   92 stringExpression: LEFT_PARENTHESIS stringExpression RIGHT_PARENTHESIS .

    $default  reduce using rule 92 (stringExpression)


State 205

  111 logicalPrimary: LEFT_PARENTHESIS logicalExpression RIGHT_PARENTHESIS .

    $default  reduce using rule 111 (logicalPrimary)


State 206

  169 argument: expression ',' argument .

    $default  reduce using rule 169 (argument)


State 207

   67 intMathExpression: intMathExpression PLUS intMathTerm .
   70 intMathTerm: intMathTerm . MULTIPLY intMathFactor
   71            | intMathTerm . DIVIDE intMathFactor
   72            | intMathTerm . MODULO intMathFactor

    MULTIPLY  shift, and go to state 144
    DIVIDE    shift, and go to state 145
    MODULO    shift, and go to state 146

    $default  reduce using rule 67 (intMathExpression)


State 208

   68 intMathExpression: intMathExpression MINUS intMathTerm .
   70 intMathTerm: intMathTerm . MULTIPLY intMathFactor
   71            | intMathTerm . DIVIDE intMathFactor
   72            | intMathTerm . MODULO intMathFactor

    MULTIPLY  shift, and go to state 144
    DIVIDE    shift, and go to state 145
    MODULO    shift, and go to state 146

    $default  reduce using rule 68 (intMathExpression)


State 209

   67 intMathExpression: intMathExpression . PLUS intMathTerm
   68                  | intMathExpression . MINUS intMathTerm
   99 logicalPrimary: intMathExpression GREATER intMathExpression .

    PLUS   shift, and go to state 136
    MINUS  shift, and go to state 137

    $default  reduce using rule 99 (logicalPrimary)


State 210

   67 intMathExpression: intMathExpression . PLUS intMathTerm
   68                  | intMathExpression . MINUS intMathTerm
  100 logicalPrimary: intMathExpression LESS intMathExpression .

    PLUS   shift, and go to state 136
    MINUS  shift, and go to state 137

    $default  reduce using rule 100 (logicalPrimary)


State 211

   67 intMathExpression: intMathExpression . PLUS intMathTerm
   68                  | intMathExpression . MINUS intMathTerm
  101 logicalPrimary: intMathExpression GREATER_EQUAL intMathExpression .

    PLUS   shift, and go to state 136
    MINUS  shift, and go to state 137

    $default  reduce using rule 101 (logicalPrimary)


State 212

   67 intMathExpression: intMathExpression . PLUS intMathTerm
   68                  | intMathExpression . MINUS intMathTerm
  102 logicalPrimary: intMathExpression LESS_EQUAL intMathExpression .

    PLUS   shift, and go to state 136
    MINUS  shift, and go to state 137

    $default  reduce using rule 102 (logicalPrimary)


State 213

   67 intMathExpression: intMathExpression . PLUS intMathTerm
   68                  | intMathExpression . MINUS intMathTerm
  103 logicalPrimary: intMathExpression EQUAL intMathExpression .

    PLUS   shift, and go to state 136
    MINUS  shift, and go to state 137

    $default  reduce using rule 103 (logicalPrimary)


State 214

   67 intMathExpression: intMathExpression . PLUS intMathTerm
   68                  | intMathExpression . MINUS intMathTerm
  104 logicalPrimary: intMathExpression NOT_EQUAL intMathExpression .

    PLUS   shift, and go to state 136
    MINUS  shift, and go to state 137

    $default  reduce using rule 104 (logicalPrimary)


State 215

   70 intMathTerm: intMathTerm MULTIPLY intMathFactor .

    $default  reduce using rule 70 (intMathTerm)


State 216

   71 intMathTerm: intMathTerm DIVIDE intMathFactor .

    $default  reduce using rule 71 (intMathTerm)


State 217

   72 intMathTerm: intMathTerm MODULO intMathFactor .

    $default  reduce using rule 72 (intMathTerm)


State 218

   80 floatMathExpression: floatMathExpression PLUS floatMathTerm .
   83 floatMathTerm: floatMathTerm . MULTIPLY floatMathFactor
   84              | floatMathTerm . DIVIDE floatMathFactor

    MULTIPLY  shift, and go to state 155
    DIVIDE    shift, and go to state 156

    $default  reduce using rule 80 (floatMathExpression)


State 219

   81 floatMathExpression: floatMathExpression MINUS floatMathTerm .
   83 floatMathTerm: floatMathTerm . MULTIPLY floatMathFactor
   84              | floatMathTerm . DIVIDE floatMathFactor

    MULTIPLY  shift, and go to state 155
    DIVIDE    shift, and go to state 156

    $default  reduce using rule 81 (floatMathExpression)


State 220

   80 floatMathExpression: floatMathExpression . PLUS floatMathTerm
   81                    | floatMathExpression . MINUS floatMathTerm
  105 logicalPrimary: floatMathExpression GREATER floatMathExpression .

    PLUS   shift, and go to state 147
    MINUS  shift, and go to state 148

    $default  reduce using rule 105 (logicalPrimary)


State 221

   80 floatMathExpression: floatMathExpression . PLUS floatMathTerm
   81                    | floatMathExpression . MINUS floatMathTerm
  106 logicalPrimary: floatMathExpression LESS floatMathExpression .

    PLUS   shift, and go to state 147
    MINUS  shift, and go to state 148

    $default  reduce using rule 106 (logicalPrimary)


State 222

   80 floatMathExpression: floatMathExpression . PLUS floatMathTerm
   81                    | floatMathExpression . MINUS floatMathTerm
  107 logicalPrimary: floatMathExpression GREATER_EQUAL floatMathExpression .

    PLUS   shift, and go to state 147
    MINUS  shift, and go to state 148

    $default  reduce using rule 107 (logicalPrimary)


State 223

   80 floatMathExpression: floatMathExpression . PLUS floatMathTerm
   81                    | floatMathExpression . MINUS floatMathTerm
  108 logicalPrimary: floatMathExpression LESS_EQUAL floatMathExpression .

    PLUS   shift, and go to state 147
    MINUS  shift, and go to state 148

    $default  reduce using rule 108 (logicalPrimary)


State 224

   80 floatMathExpression: floatMathExpression . PLUS floatMathTerm
   81                    | floatMathExpression . MINUS floatMathTerm
  109 logicalPrimary: floatMathExpression EQUAL floatMathExpression .

    PLUS   shift, and go to state 147
    MINUS  shift, and go to state 148

    $default  reduce using rule 109 (logicalPrimary)


State 225

   80 floatMathExpression: floatMathExpression . PLUS floatMathTerm
   81                    | floatMathExpression . MINUS floatMathTerm
  110 logicalPrimary: floatMathExpression NOT_EQUAL floatMathExpression .

    PLUS   shift, and go to state 147
    MINUS  shift, and go to state 148

    $default  reduce using rule 110 (logicalPrimary)


State 226

   83 floatMathTerm: floatMathTerm MULTIPLY floatMathFactor .

    $default  reduce using rule 83 (floatMathTerm)


State 227

   84 floatMathTerm: floatMathTerm DIVIDE floatMathFactor .

    $default  reduce using rule 84 (floatMathTerm)


State 228

   91 stringExpression: stringExpression . PLUS stringExpression
   91                 | stringExpression PLUS stringExpression .

    PLUS  shift, and go to state 157

    PLUS      [reduce using rule 91 (stringExpression)]
    $default  reduce using rule 91 (stringExpression)


State 229

   94 logicalExpression: logicalExpression OR logicalTerm .
   96 logicalTerm: logicalTerm . AND logicalFactor

    AND  shift, and go to state 159

    $default  reduce using rule 94 (logicalExpression)


State 230

   96 logicalTerm: logicalTerm AND logicalFactor .

    $default  reduce using rule 96 (logicalTerm)


State 231

    7 blockStatements: blockStatements . blockStatement
  127 repeatStatement: REPEAT LEFT_CURLY_BRACE $@7 blockStatements . RIGHT_CURLY_BRACE UNTIL LEFT_PARENTHESIS logicalExpression $@8 RIGHT_PARENTHESIS

    INT                shift, and go to state 98
    CHAR               shift, and go to state 99
    FLOAT              shift, and go to state 100
    STRING             shift, and go to state 101
    CONST              shift, and go to state 5
    BOOL               shift, and go to state 102
    IF                 shift, and go to state 7
    SWITCH             shift, and go to state 8
    CONTINUE           shift, and go to state 9
    BREAK              shift, and go to state 10
    WHILE              shift, and go to state 11
    FOR                shift, and go to state 12
    RETURN             shift, and go to state 13
    REPEAT             shift, and go to state 14
    RIGHT_CURLY_BRACE  shift, and go to state 260
    ENUM               shift, and go to state 15
    PRINT              shift, and go to state 17
    COMMENT            shift, and go to state 18
    IDENTIFIER         shift, and go to state 19

    blockStatement                            go to state 103
    variableDeclarationStatement              go to state 25
    assignVariableDeclaration                 go to state 26
    noSemiColumnAssignVariableDeclaration     go to state 27
    nonAssignVariableDeclaration              go to state 28
    noSemiColumnNonAssignVariableDeclaration  go to state 29
    constDeclarationStatement                 go to state 30
    noSemiColumnConstDeclaration              go to state 31
    assignmentStatement                       go to state 32
    incStatement                              go to state 33
    decStatement                              go to state 34
    ifStatement                               go to state 35
    whileStatement                            go to state 36
    repeatStatement                           go to state 37
    forStatement                              go to state 38
    switchStatement                           go to state 39
    enumStatement                             go to state 40
    returnStatement                           go to state 42
    continueBreakStatement                    go to state 43
    printStatement                            go to state 44
    functionCallStatement                     go to state 45
    comment                                   go to state 46


State 232

  148 enumStatement: ENUM IDENTIFIER LEFT_CURLY_BRACE $@15 . enumIdentifiers RIGHT_CURLY_BRACE

    IDENTIFIER  shift, and go to state 261

    enumIdentifiers  go to state 262


State 233

  175 main: MAIN $@19 LEFT_PARENTHESIS RIGHT_PARENTHESIS . LEFT_CURLY_BRACE $@20 blockStatements RIGHT_CURLY_BRACE

    LEFT_CURLY_BRACE  shift, and go to state 263


State 234

  166 printStatement: PRINT LEFT_PARENTHESIS RIGHT_PARENTHESIS ';' .

    $default  reduce using rule 166 (printStatement)


State 235

  165 printStatement: PRINT LEFT_PARENTHESIS argument RIGHT_PARENTHESIS . ';'

    ';'  shift, and go to state 264


State 236

   64 assignmentStatement: IDENTIFIER ASSIGN CHAR_LITERAL ';' .

    $default  reduce using rule 64 (assignmentStatement)


State 237

   60 assignmentStatement: IDENTIFIER ASSIGN intMathExpression ';' .

    $default  reduce using rule 60 (assignmentStatement)


State 238

   61 assignmentStatement: IDENTIFIER ASSIGN floatMathExpression ';' .

    $default  reduce using rule 61 (assignmentStatement)


State 239

   62 assignmentStatement: IDENTIFIER ASSIGN stringExpression ';' .

    $default  reduce using rule 62 (assignmentStatement)


State 240

   63 assignmentStatement: IDENTIFIER ASSIGN logicalExpression ';' .

    $default  reduce using rule 63 (assignmentStatement)


State 241

  168 functionCallStatement: IDENTIFIER $@18 LEFT_PARENTHESIS argument . RIGHT_PARENTHESIS ';'

    RIGHT_PARENTHESIS  shift, and go to state 265


State 242

  151 functionStatement: types FUNCTION IDENTIFIER $@16 . LEFT_PARENTHESIS $@17 parameter RIGHT_PARENTHESIS LEFT_CURLY_BRACE blockStatements RIGHT_CURLY_BRACE

    LEFT_PARENTHESIS  shift, and go to state 266


State 243

   67 intMathExpression: intMathExpression . PLUS intMathTerm
   68                  | intMathExpression . MINUS intMathTerm
   79 intMathPrimary: LEFT_PARENTHESIS intMathExpression . RIGHT_PARENTHESIS

    PLUS               shift, and go to state 136
    MINUS              shift, and go to state 137
    RIGHT_PARENTHESIS  shift, and go to state 202


State 244

   80 floatMathExpression: floatMathExpression . PLUS floatMathTerm
   81                    | floatMathExpression . MINUS floatMathTerm
   88 floatMathFactor: LEFT_PARENTHESIS floatMathExpression . RIGHT_PARENTHESIS

    PLUS               shift, and go to state 147
    MINUS              shift, and go to state 148
    RIGHT_PARENTHESIS  shift, and go to state 203


State 245

   56 noSemiColumnConstDeclaration: CONST INT IDENTIFIER ASSIGN intMathExpression .
   67 intMathExpression: intMathExpression . PLUS intMathTerm
   68                  | intMathExpression . MINUS intMathTerm

    PLUS   shift, and go to state 136
    MINUS  shift, and go to state 137

    $default  reduce using rule 56 (noSemiColumnConstDeclaration)


State 246

   55 noSemiColumnConstDeclaration: CONST CHAR IDENTIFIER ASSIGN CHAR_LITERAL .

    $default  reduce using rule 55 (noSemiColumnConstDeclaration)


State 247

   57 noSemiColumnConstDeclaration: CONST FLOAT IDENTIFIER ASSIGN floatMathExpression .
   80 floatMathExpression: floatMathExpression . PLUS floatMathTerm
   81                    | floatMathExpression . MINUS floatMathTerm

    PLUS   shift, and go to state 147
    MINUS  shift, and go to state 148

    $default  reduce using rule 57 (noSemiColumnConstDeclaration)


State 248

   58 noSemiColumnConstDeclaration: CONST STRING IDENTIFIER ASSIGN stringExpression .
   91 stringExpression: stringExpression . PLUS stringExpression

    PLUS  shift, and go to state 157

    $default  reduce using rule 58 (noSemiColumnConstDeclaration)


State 249

   59 noSemiColumnConstDeclaration: CONST BOOL IDENTIFIER ASSIGN logicalExpression .
   94 logicalExpression: logicalExpression . OR logicalTerm

    OR  shift, and go to state 158

    $default  reduce using rule 59 (noSemiColumnConstDeclaration)


State 250

  117 ifStatement: IF LEFT_PARENTHESIS logicalExpression $@1 RIGHT_PARENTHESIS . LEFT_CURLY_BRACE $@2 blockStatements RIGHT_CURLY_BRACE $@3 elsePart

    LEFT_CURLY_BRACE  shift, and go to state 267


State 251

  139 switchStatement: SWITCH LEFT_PARENTHESIS IDENTIFIER $@12 RIGHT_PARENTHESIS . LEFT_CURLY_BRACE $@13 caseList RIGHT_CURLY_BRACE

    LEFT_CURLY_BRACE  shift, and go to state 268


State 252

  124 whileStatement: WHILE LEFT_PARENTHESIS logicalExpression $@5 RIGHT_PARENTHESIS . LEFT_CURLY_BRACE $@6 blockStatements RIGHT_CURLY_BRACE

    LEFT_CURLY_BRACE  shift, and go to state 269


State 253

   44 noSemiColumnAssignVariableDeclaration: INT IDENTIFIER . ASSIGN intMathExpression

    ASSIGN  shift, and go to state 108


State 254

   43 noSemiColumnAssignVariableDeclaration: CHAR IDENTIFIER . ASSIGN CHAR_LITERAL

    ASSIGN  shift, and go to state 109


State 255

   45 noSemiColumnAssignVariableDeclaration: FLOAT IDENTIFIER . ASSIGN floatMathExpression

    ASSIGN  shift, and go to state 110


State 256

   46 noSemiColumnAssignVariableDeclaration: STRING IDENTIFIER . ASSIGN stringExpression

    ASSIGN  shift, and go to state 111


State 257

   47 noSemiColumnAssignVariableDeclaration: BOOL IDENTIFIER . ASSIGN logicalExpression

    ASSIGN  shift, and go to state 117


State 258

  131 forDeclaration: IDENTIFIER ASSIGN . expression ';'

    NOT               shift, and go to state 66
    LEFT_PARENTHESIS  shift, and go to state 67
    IDENTIFIER        shift, and go to state 68
    DIGIT             shift, and go to state 69
    FLOAT_LITERAL     shift, and go to state 70
    STRING_LITERAL    shift, and go to state 71
    BOOL_LITERAL      shift, and go to state 72

    expression           go to state 270
    intMathExpression    go to state 75
    intMathTerm          go to state 76
    intMathFactor        go to state 77
    intMathPrimary       go to state 78
    floatMathExpression  go to state 79
    floatMathTerm        go to state 80
    floatMathFactor      go to state 81
    stringExpression     go to state 82
    logicalExpression    go to state 83
    logicalTerm          go to state 84
    logicalFactor        go to state 85
    logicalPrimary       go to state 86


State 259

  136 forStatement: FOR LEFT_PARENTHESIS $@9 forDeclaration $@10 . logicalExpression $@11 ';' forAssignment RIGHT_PARENTHESIS LEFT_CURLY_BRACE blockStatements RIGHT_CURLY_BRACE

    NOT               shift, and go to state 66
    LEFT_PARENTHESIS  shift, and go to state 118
    IDENTIFIER        shift, and go to state 119
    DIGIT             shift, and go to state 69
    FLOAT_LITERAL     shift, and go to state 70
    BOOL_LITERAL      shift, and go to state 72

    intMathExpression    go to state 120
    intMathTerm          go to state 76
    intMathFactor        go to state 77
    intMathPrimary       go to state 78
    floatMathExpression  go to state 121
    floatMathTerm        go to state 80
    floatMathFactor      go to state 81
    logicalExpression    go to state 271
    logicalTerm          go to state 84
    logicalFactor        go to state 85
    logicalPrimary       go to state 86


State 260

  127 repeatStatement: REPEAT LEFT_CURLY_BRACE $@7 blockStatements RIGHT_CURLY_BRACE . UNTIL LEFT_PARENTHESIS logicalExpression $@8 RIGHT_PARENTHESIS

    UNTIL  shift, and go to state 272


State 261

  145 enumIdentifiers: IDENTIFIER . ',' enumIdentifiers
  146                | IDENTIFIER .

    ','  shift, and go to state 273

    $default  reduce using rule 146 (enumIdentifiers)


State 262

  148 enumStatement: ENUM IDENTIFIER LEFT_CURLY_BRACE $@15 enumIdentifiers . RIGHT_CURLY_BRACE

    RIGHT_CURLY_BRACE  shift, and go to state 274


State 263

  175 main: MAIN $@19 LEFT_PARENTHESIS RIGHT_PARENTHESIS LEFT_CURLY_BRACE . $@20 blockStatements RIGHT_CURLY_BRACE

    $default  reduce using rule 174 ($@20)

    $@20  go to state 275


State 264

  165 printStatement: PRINT LEFT_PARENTHESIS argument RIGHT_PARENTHESIS ';' .

    $default  reduce using rule 165 (printStatement)


State 265

  168 functionCallStatement: IDENTIFIER $@18 LEFT_PARENTHESIS argument RIGHT_PARENTHESIS . ';'

    ';'  shift, and go to state 276


State 266

  151 functionStatement: types FUNCTION IDENTIFIER $@16 LEFT_PARENTHESIS . $@17 parameter RIGHT_PARENTHESIS LEFT_CURLY_BRACE blockStatements RIGHT_CURLY_BRACE

    $default  reduce using rule 150 ($@17)

    $@17  go to state 277


State 267

  117 ifStatement: IF LEFT_PARENTHESIS logicalExpression $@1 RIGHT_PARENTHESIS LEFT_CURLY_BRACE . $@2 blockStatements RIGHT_CURLY_BRACE $@3 elsePart

    $default  reduce using rule 115 ($@2)

    $@2  go to state 278


State 268

  139 switchStatement: SWITCH LEFT_PARENTHESIS IDENTIFIER $@12 RIGHT_PARENTHESIS LEFT_CURLY_BRACE . $@13 caseList RIGHT_CURLY_BRACE

    $default  reduce using rule 138 ($@13)

    $@13  go to state 279


State 269

  124 whileStatement: WHILE LEFT_PARENTHESIS logicalExpression $@5 RIGHT_PARENTHESIS LEFT_CURLY_BRACE . $@6 blockStatements RIGHT_CURLY_BRACE

    $default  reduce using rule 123 ($@6)

    $@6  go to state 280


State 270

  131 forDeclaration: IDENTIFIER ASSIGN expression . ';'

    ';'  shift, and go to state 281


State 271

   94 logicalExpression: logicalExpression . OR logicalTerm
  136 forStatement: FOR LEFT_PARENTHESIS $@9 forDeclaration $@10 logicalExpression . $@11 ';' forAssignment RIGHT_PARENTHESIS LEFT_CURLY_BRACE blockStatements RIGHT_CURLY_BRACE

    OR  shift, and go to state 158

    $default  reduce using rule 135 ($@11)

    $@11  go to state 282


State 272

  127 repeatStatement: REPEAT LEFT_CURLY_BRACE $@7 blockStatements RIGHT_CURLY_BRACE UNTIL . LEFT_PARENTHESIS logicalExpression $@8 RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 283


State 273

  145 enumIdentifiers: IDENTIFIER ',' . enumIdentifiers

    IDENTIFIER  shift, and go to state 261

    enumIdentifiers  go to state 284


State 274

  148 enumStatement: ENUM IDENTIFIER LEFT_CURLY_BRACE $@15 enumIdentifiers RIGHT_CURLY_BRACE .

    $default  reduce using rule 148 (enumStatement)


State 275

  175 main: MAIN $@19 LEFT_PARENTHESIS RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@20 . blockStatements RIGHT_CURLY_BRACE

    INT         shift, and go to state 98
    CHAR        shift, and go to state 99
    FLOAT       shift, and go to state 100
    STRING      shift, and go to state 101
    CONST       shift, and go to state 5
    BOOL        shift, and go to state 102
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    CONTINUE    shift, and go to state 9
    BREAK       shift, and go to state 10
    WHILE       shift, and go to state 11
    FOR         shift, and go to state 12
    RETURN      shift, and go to state 13
    REPEAT      shift, and go to state 14
    ENUM        shift, and go to state 15
    PRINT       shift, and go to state 17
    COMMENT     shift, and go to state 18
    IDENTIFIER  shift, and go to state 19

    blockStatements                           go to state 285
    blockStatement                            go to state 23
    variableDeclarationStatement              go to state 25
    assignVariableDeclaration                 go to state 26
    noSemiColumnAssignVariableDeclaration     go to state 27
    nonAssignVariableDeclaration              go to state 28
    noSemiColumnNonAssignVariableDeclaration  go to state 29
    constDeclarationStatement                 go to state 30
    noSemiColumnConstDeclaration              go to state 31
    assignmentStatement                       go to state 32
    incStatement                              go to state 33
    decStatement                              go to state 34
    ifStatement                               go to state 35
    whileStatement                            go to state 36
    repeatStatement                           go to state 37
    forStatement                              go to state 38
    switchStatement                           go to state 39
    enumStatement                             go to state 40
    returnStatement                           go to state 42
    continueBreakStatement                    go to state 43
    printStatement                            go to state 44
    functionCallStatement                     go to state 45
    comment                                   go to state 46


State 276

  168 functionCallStatement: IDENTIFIER $@18 LEFT_PARENTHESIS argument RIGHT_PARENTHESIS ';' .

    $default  reduce using rule 168 (functionCallStatement)


State 277

  151 functionStatement: types FUNCTION IDENTIFIER $@16 LEFT_PARENTHESIS $@17 . parameter RIGHT_PARENTHESIS LEFT_CURLY_BRACE blockStatements RIGHT_CURLY_BRACE

    INT     shift, and go to state 98
    CHAR    shift, and go to state 99
    FLOAT   shift, and go to state 100
    STRING  shift, and go to state 101
    CONST   shift, and go to state 5
    BOOL    shift, and go to state 102

    $default  reduce using rule 156 (parameter)

    noSemiColumnVariableDeclarationStatement  go to state 286
    noSemiColumnAssignVariableDeclaration     go to state 287
    noSemiColumnNonAssignVariableDeclaration  go to state 288
    noSemiColumnConstDeclaration              go to state 289
    parameter                                 go to state 290


State 278

  117 ifStatement: IF LEFT_PARENTHESIS logicalExpression $@1 RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@2 . blockStatements RIGHT_CURLY_BRACE $@3 elsePart

    INT         shift, and go to state 98
    CHAR        shift, and go to state 99
    FLOAT       shift, and go to state 100
    STRING      shift, and go to state 101
    CONST       shift, and go to state 5
    BOOL        shift, and go to state 102
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    CONTINUE    shift, and go to state 9
    BREAK       shift, and go to state 10
    WHILE       shift, and go to state 11
    FOR         shift, and go to state 12
    RETURN      shift, and go to state 13
    REPEAT      shift, and go to state 14
    ENUM        shift, and go to state 15
    PRINT       shift, and go to state 17
    COMMENT     shift, and go to state 18
    IDENTIFIER  shift, and go to state 19

    blockStatements                           go to state 291
    blockStatement                            go to state 23
    variableDeclarationStatement              go to state 25
    assignVariableDeclaration                 go to state 26
    noSemiColumnAssignVariableDeclaration     go to state 27
    nonAssignVariableDeclaration              go to state 28
    noSemiColumnNonAssignVariableDeclaration  go to state 29
    constDeclarationStatement                 go to state 30
    noSemiColumnConstDeclaration              go to state 31
    assignmentStatement                       go to state 32
    incStatement                              go to state 33
    decStatement                              go to state 34
    ifStatement                               go to state 35
    whileStatement                            go to state 36
    repeatStatement                           go to state 37
    forStatement                              go to state 38
    switchStatement                           go to state 39
    enumStatement                             go to state 40
    returnStatement                           go to state 42
    continueBreakStatement                    go to state 43
    printStatement                            go to state 44
    functionCallStatement                     go to state 45
    comment                                   go to state 46


State 279

  139 switchStatement: SWITCH LEFT_PARENTHESIS IDENTIFIER $@12 RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@13 . caseList RIGHT_CURLY_BRACE

    CASE     shift, and go to state 292
    DEFAULT  shift, and go to state 293

    $default  reduce using rule 142 (caseList)

    caseList       go to state 294
    caseStatement  go to state 295


State 280

  124 whileStatement: WHILE LEFT_PARENTHESIS logicalExpression $@5 RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@6 . blockStatements RIGHT_CURLY_BRACE

    INT         shift, and go to state 98
    CHAR        shift, and go to state 99
    FLOAT       shift, and go to state 100
    STRING      shift, and go to state 101
    CONST       shift, and go to state 5
    BOOL        shift, and go to state 102
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    CONTINUE    shift, and go to state 9
    BREAK       shift, and go to state 10
    WHILE       shift, and go to state 11
    FOR         shift, and go to state 12
    RETURN      shift, and go to state 13
    REPEAT      shift, and go to state 14
    ENUM        shift, and go to state 15
    PRINT       shift, and go to state 17
    COMMENT     shift, and go to state 18
    IDENTIFIER  shift, and go to state 19

    blockStatements                           go to state 296
    blockStatement                            go to state 23
    variableDeclarationStatement              go to state 25
    assignVariableDeclaration                 go to state 26
    noSemiColumnAssignVariableDeclaration     go to state 27
    nonAssignVariableDeclaration              go to state 28
    noSemiColumnNonAssignVariableDeclaration  go to state 29
    constDeclarationStatement                 go to state 30
    noSemiColumnConstDeclaration              go to state 31
    assignmentStatement                       go to state 32
    incStatement                              go to state 33
    decStatement                              go to state 34
    ifStatement                               go to state 35
    whileStatement                            go to state 36
    repeatStatement                           go to state 37
    forStatement                              go to state 38
    switchStatement                           go to state 39
    enumStatement                             go to state 40
    returnStatement                           go to state 42
    continueBreakStatement                    go to state 43
    printStatement                            go to state 44
    functionCallStatement                     go to state 45
    comment                                   go to state 46


State 281

  131 forDeclaration: IDENTIFIER ASSIGN expression ';' .

    $default  reduce using rule 131 (forDeclaration)


State 282

  136 forStatement: FOR LEFT_PARENTHESIS $@9 forDeclaration $@10 logicalExpression $@11 . ';' forAssignment RIGHT_PARENTHESIS LEFT_CURLY_BRACE blockStatements RIGHT_CURLY_BRACE

    ';'  shift, and go to state 297


State 283

  127 repeatStatement: REPEAT LEFT_CURLY_BRACE $@7 blockStatements RIGHT_CURLY_BRACE UNTIL LEFT_PARENTHESIS . logicalExpression $@8 RIGHT_PARENTHESIS

    NOT               shift, and go to state 66
    LEFT_PARENTHESIS  shift, and go to state 118
    IDENTIFIER        shift, and go to state 119
    DIGIT             shift, and go to state 69
    FLOAT_LITERAL     shift, and go to state 70
    BOOL_LITERAL      shift, and go to state 72

    intMathExpression    go to state 120
    intMathTerm          go to state 76
    intMathFactor        go to state 77
    intMathPrimary       go to state 78
    floatMathExpression  go to state 121
    floatMathTerm        go to state 80
    floatMathFactor      go to state 81
    logicalExpression    go to state 298
    logicalTerm          go to state 84
    logicalFactor        go to state 85
    logicalPrimary       go to state 86


State 284

  145 enumIdentifiers: IDENTIFIER ',' enumIdentifiers .

    $default  reduce using rule 145 (enumIdentifiers)


State 285

    7 blockStatements: blockStatements . blockStatement
  175 main: MAIN $@19 LEFT_PARENTHESIS RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@20 blockStatements . RIGHT_CURLY_BRACE

    INT                shift, and go to state 98
    CHAR               shift, and go to state 99
    FLOAT              shift, and go to state 100
    STRING             shift, and go to state 101
    CONST              shift, and go to state 5
    BOOL               shift, and go to state 102
    IF                 shift, and go to state 7
    SWITCH             shift, and go to state 8
    CONTINUE           shift, and go to state 9
    BREAK              shift, and go to state 10
    WHILE              shift, and go to state 11
    FOR                shift, and go to state 12
    RETURN             shift, and go to state 13
    REPEAT             shift, and go to state 14
    RIGHT_CURLY_BRACE  shift, and go to state 299
    ENUM               shift, and go to state 15
    PRINT              shift, and go to state 17
    COMMENT            shift, and go to state 18
    IDENTIFIER         shift, and go to state 19

    blockStatement                            go to state 103
    variableDeclarationStatement              go to state 25
    assignVariableDeclaration                 go to state 26
    noSemiColumnAssignVariableDeclaration     go to state 27
    nonAssignVariableDeclaration              go to state 28
    noSemiColumnNonAssignVariableDeclaration  go to state 29
    constDeclarationStatement                 go to state 30
    noSemiColumnConstDeclaration              go to state 31
    assignmentStatement                       go to state 32
    incStatement                              go to state 33
    decStatement                              go to state 34
    ifStatement                               go to state 35
    whileStatement                            go to state 36
    repeatStatement                           go to state 37
    forStatement                              go to state 38
    switchStatement                           go to state 39
    enumStatement                             go to state 40
    returnStatement                           go to state 42
    continueBreakStatement                    go to state 43
    printStatement                            go to state 44
    functionCallStatement                     go to state 45
    comment                                   go to state 46


State 286

  152 parameter: noSemiColumnVariableDeclarationStatement . ',' parameter
  153          | noSemiColumnVariableDeclarationStatement .

    ','  shift, and go to state 300

    $default  reduce using rule 153 (parameter)


State 287

   40 noSemiColumnVariableDeclarationStatement: noSemiColumnAssignVariableDeclaration .

    $default  reduce using rule 40 (noSemiColumnVariableDeclarationStatement)


State 288

   41 noSemiColumnVariableDeclarationStatement: noSemiColumnNonAssignVariableDeclaration .

    $default  reduce using rule 41 (noSemiColumnVariableDeclarationStatement)


State 289

  154 parameter: noSemiColumnConstDeclaration . ',' parameter
  155          | noSemiColumnConstDeclaration .

    ','  shift, and go to state 301

    $default  reduce using rule 155 (parameter)


State 290

  151 functionStatement: types FUNCTION IDENTIFIER $@16 LEFT_PARENTHESIS $@17 parameter . RIGHT_PARENTHESIS LEFT_CURLY_BRACE blockStatements RIGHT_CURLY_BRACE

    RIGHT_PARENTHESIS  shift, and go to state 302


State 291

    7 blockStatements: blockStatements . blockStatement
  117 ifStatement: IF LEFT_PARENTHESIS logicalExpression $@1 RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@2 blockStatements . RIGHT_CURLY_BRACE $@3 elsePart

    INT                shift, and go to state 98
    CHAR               shift, and go to state 99
    FLOAT              shift, and go to state 100
    STRING             shift, and go to state 101
    CONST              shift, and go to state 5
    BOOL               shift, and go to state 102
    IF                 shift, and go to state 7
    SWITCH             shift, and go to state 8
    CONTINUE           shift, and go to state 9
    BREAK              shift, and go to state 10
    WHILE              shift, and go to state 11
    FOR                shift, and go to state 12
    RETURN             shift, and go to state 13
    REPEAT             shift, and go to state 14
    RIGHT_CURLY_BRACE  shift, and go to state 303
    ENUM               shift, and go to state 15
    PRINT              shift, and go to state 17
    COMMENT            shift, and go to state 18
    IDENTIFIER         shift, and go to state 19

    blockStatement                            go to state 103
    variableDeclarationStatement              go to state 25
    assignVariableDeclaration                 go to state 26
    noSemiColumnAssignVariableDeclaration     go to state 27
    nonAssignVariableDeclaration              go to state 28
    noSemiColumnNonAssignVariableDeclaration  go to state 29
    constDeclarationStatement                 go to state 30
    noSemiColumnConstDeclaration              go to state 31
    assignmentStatement                       go to state 32
    incStatement                              go to state 33
    decStatement                              go to state 34
    ifStatement                               go to state 35
    whileStatement                            go to state 36
    repeatStatement                           go to state 37
    forStatement                              go to state 38
    switchStatement                           go to state 39
    enumStatement                             go to state 40
    returnStatement                           go to state 42
    continueBreakStatement                    go to state 43
    printStatement                            go to state 44
    functionCallStatement                     go to state 45
    comment                                   go to state 46


State 292

  144 caseStatement: CASE . values $@14 ':' blockStatements BREAK ';'

    DIGIT           shift, and go to state 304
    FLOAT_LITERAL   shift, and go to state 305
    STRING_LITERAL  shift, and go to state 306
    CHAR_LITERAL    shift, and go to state 307
    BOOL_LITERAL    shift, and go to state 308

    values  go to state 309


State 293

  141 caseList: DEFAULT . ':' blockStatements BREAK ';'

    ':'  shift, and go to state 310


State 294

  139 switchStatement: SWITCH LEFT_PARENTHESIS IDENTIFIER $@12 RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@13 caseList . RIGHT_CURLY_BRACE

    RIGHT_CURLY_BRACE  shift, and go to state 311


State 295

  140 caseList: caseStatement . caseList

    CASE     shift, and go to state 292
    DEFAULT  shift, and go to state 293

    $default  reduce using rule 142 (caseList)

    caseList       go to state 312
    caseStatement  go to state 295


State 296

    7 blockStatements: blockStatements . blockStatement
  124 whileStatement: WHILE LEFT_PARENTHESIS logicalExpression $@5 RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@6 blockStatements . RIGHT_CURLY_BRACE

    INT                shift, and go to state 98
    CHAR               shift, and go to state 99
    FLOAT              shift, and go to state 100
    STRING             shift, and go to state 101
    CONST              shift, and go to state 5
    BOOL               shift, and go to state 102
    IF                 shift, and go to state 7
    SWITCH             shift, and go to state 8
    CONTINUE           shift, and go to state 9
    BREAK              shift, and go to state 10
    WHILE              shift, and go to state 11
    FOR                shift, and go to state 12
    RETURN             shift, and go to state 13
    REPEAT             shift, and go to state 14
    RIGHT_CURLY_BRACE  shift, and go to state 313
    ENUM               shift, and go to state 15
    PRINT              shift, and go to state 17
    COMMENT            shift, and go to state 18
    IDENTIFIER         shift, and go to state 19

    blockStatement                            go to state 103
    variableDeclarationStatement              go to state 25
    assignVariableDeclaration                 go to state 26
    noSemiColumnAssignVariableDeclaration     go to state 27
    nonAssignVariableDeclaration              go to state 28
    noSemiColumnNonAssignVariableDeclaration  go to state 29
    constDeclarationStatement                 go to state 30
    noSemiColumnConstDeclaration              go to state 31
    assignmentStatement                       go to state 32
    incStatement                              go to state 33
    decStatement                              go to state 34
    ifStatement                               go to state 35
    whileStatement                            go to state 36
    repeatStatement                           go to state 37
    forStatement                              go to state 38
    switchStatement                           go to state 39
    enumStatement                             go to state 40
    returnStatement                           go to state 42
    continueBreakStatement                    go to state 43
    printStatement                            go to state 44
    functionCallStatement                     go to state 45
    comment                                   go to state 46


State 297

  136 forStatement: FOR LEFT_PARENTHESIS $@9 forDeclaration $@10 logicalExpression $@11 ';' . forAssignment RIGHT_PARENTHESIS LEFT_CURLY_BRACE blockStatements RIGHT_CURLY_BRACE

    IDENTIFIER  shift, and go to state 314

    forAssignment  go to state 315


State 298

   94 logicalExpression: logicalExpression . OR logicalTerm
  127 repeatStatement: REPEAT LEFT_CURLY_BRACE $@7 blockStatements RIGHT_CURLY_BRACE UNTIL LEFT_PARENTHESIS logicalExpression . $@8 RIGHT_PARENTHESIS

    OR  shift, and go to state 158

    $default  reduce using rule 126 ($@8)

    $@8  go to state 316


State 299

  175 main: MAIN $@19 LEFT_PARENTHESIS RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@20 blockStatements RIGHT_CURLY_BRACE .

    $default  reduce using rule 175 (main)


State 300

  152 parameter: noSemiColumnVariableDeclarationStatement ',' . parameter

    INT     shift, and go to state 98
    CHAR    shift, and go to state 99
    FLOAT   shift, and go to state 100
    STRING  shift, and go to state 101
    CONST   shift, and go to state 5
    BOOL    shift, and go to state 102

    $default  reduce using rule 156 (parameter)

    noSemiColumnVariableDeclarationStatement  go to state 286
    noSemiColumnAssignVariableDeclaration     go to state 287
    noSemiColumnNonAssignVariableDeclaration  go to state 288
    noSemiColumnConstDeclaration              go to state 289
    parameter                                 go to state 317


State 301

  154 parameter: noSemiColumnConstDeclaration ',' . parameter

    INT     shift, and go to state 98
    CHAR    shift, and go to state 99
    FLOAT   shift, and go to state 100
    STRING  shift, and go to state 101
    CONST   shift, and go to state 5
    BOOL    shift, and go to state 102

    $default  reduce using rule 156 (parameter)

    noSemiColumnVariableDeclarationStatement  go to state 286
    noSemiColumnAssignVariableDeclaration     go to state 287
    noSemiColumnNonAssignVariableDeclaration  go to state 288
    noSemiColumnConstDeclaration              go to state 289
    parameter                                 go to state 318


State 302

  151 functionStatement: types FUNCTION IDENTIFIER $@16 LEFT_PARENTHESIS $@17 parameter RIGHT_PARENTHESIS . LEFT_CURLY_BRACE blockStatements RIGHT_CURLY_BRACE

    LEFT_CURLY_BRACE  shift, and go to state 319


State 303

  117 ifStatement: IF LEFT_PARENTHESIS logicalExpression $@1 RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@2 blockStatements RIGHT_CURLY_BRACE . $@3 elsePart

    $default  reduce using rule 116 ($@3)

    $@3  go to state 320


State 304

   29 values: DIGIT .

    $default  reduce using rule 29 (values)


State 305

   30 values: FLOAT_LITERAL .

    $default  reduce using rule 30 (values)


State 306

   31 values: STRING_LITERAL .

    $default  reduce using rule 31 (values)


State 307

   32 values: CHAR_LITERAL .

    $default  reduce using rule 32 (values)


State 308

   33 values: BOOL_LITERAL .

    $default  reduce using rule 33 (values)


State 309

  144 caseStatement: CASE values . $@14 ':' blockStatements BREAK ';'

    $default  reduce using rule 143 ($@14)

    $@14  go to state 321


State 310

  141 caseList: DEFAULT ':' . blockStatements BREAK ';'

    INT         shift, and go to state 98
    CHAR        shift, and go to state 99
    FLOAT       shift, and go to state 100
    STRING      shift, and go to state 101
    CONST       shift, and go to state 5
    BOOL        shift, and go to state 102
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    CONTINUE    shift, and go to state 9
    BREAK       shift, and go to state 10
    WHILE       shift, and go to state 11
    FOR         shift, and go to state 12
    RETURN      shift, and go to state 13
    REPEAT      shift, and go to state 14
    ENUM        shift, and go to state 15
    PRINT       shift, and go to state 17
    COMMENT     shift, and go to state 18
    IDENTIFIER  shift, and go to state 19

    blockStatements                           go to state 322
    blockStatement                            go to state 23
    variableDeclarationStatement              go to state 25
    assignVariableDeclaration                 go to state 26
    noSemiColumnAssignVariableDeclaration     go to state 27
    nonAssignVariableDeclaration              go to state 28
    noSemiColumnNonAssignVariableDeclaration  go to state 29
    constDeclarationStatement                 go to state 30
    noSemiColumnConstDeclaration              go to state 31
    assignmentStatement                       go to state 32
    incStatement                              go to state 33
    decStatement                              go to state 34
    ifStatement                               go to state 35
    whileStatement                            go to state 36
    repeatStatement                           go to state 37
    forStatement                              go to state 38
    switchStatement                           go to state 39
    enumStatement                             go to state 40
    returnStatement                           go to state 42
    continueBreakStatement                    go to state 43
    printStatement                            go to state 44
    functionCallStatement                     go to state 45
    comment                                   go to state 46


State 311

  139 switchStatement: SWITCH LEFT_PARENTHESIS IDENTIFIER $@12 RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@13 caseList RIGHT_CURLY_BRACE .

    $default  reduce using rule 139 (switchStatement)


State 312

  140 caseList: caseStatement caseList .

    $default  reduce using rule 140 (caseList)


State 313

  124 whileStatement: WHILE LEFT_PARENTHESIS logicalExpression $@5 RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@6 blockStatements RIGHT_CURLY_BRACE .

    $default  reduce using rule 124 (whileStatement)


State 314

  128 forAssignment: IDENTIFIER . ASSIGN expression
  129              | IDENTIFIER . INCREMENT
  130              | IDENTIFIER . DECREMENT

    INCREMENT  shift, and go to state 323
    DECREMENT  shift, and go to state 324
    ASSIGN     shift, and go to state 325


State 315

  136 forStatement: FOR LEFT_PARENTHESIS $@9 forDeclaration $@10 logicalExpression $@11 ';' forAssignment . RIGHT_PARENTHESIS LEFT_CURLY_BRACE blockStatements RIGHT_CURLY_BRACE

    RIGHT_PARENTHESIS  shift, and go to state 326


State 316

  127 repeatStatement: REPEAT LEFT_CURLY_BRACE $@7 blockStatements RIGHT_CURLY_BRACE UNTIL LEFT_PARENTHESIS logicalExpression $@8 . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 327


State 317

  152 parameter: noSemiColumnVariableDeclarationStatement ',' parameter .

    $default  reduce using rule 152 (parameter)


State 318

  154 parameter: noSemiColumnConstDeclaration ',' parameter .

    $default  reduce using rule 154 (parameter)


State 319

  151 functionStatement: types FUNCTION IDENTIFIER $@16 LEFT_PARENTHESIS $@17 parameter RIGHT_PARENTHESIS LEFT_CURLY_BRACE . blockStatements RIGHT_CURLY_BRACE

    INT         shift, and go to state 98
    CHAR        shift, and go to state 99
    FLOAT       shift, and go to state 100
    STRING      shift, and go to state 101
    CONST       shift, and go to state 5
    BOOL        shift, and go to state 102
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    CONTINUE    shift, and go to state 9
    BREAK       shift, and go to state 10
    WHILE       shift, and go to state 11
    FOR         shift, and go to state 12
    RETURN      shift, and go to state 13
    REPEAT      shift, and go to state 14
    ENUM        shift, and go to state 15
    PRINT       shift, and go to state 17
    COMMENT     shift, and go to state 18
    IDENTIFIER  shift, and go to state 19

    blockStatements                           go to state 328
    blockStatement                            go to state 23
    variableDeclarationStatement              go to state 25
    assignVariableDeclaration                 go to state 26
    noSemiColumnAssignVariableDeclaration     go to state 27
    nonAssignVariableDeclaration              go to state 28
    noSemiColumnNonAssignVariableDeclaration  go to state 29
    constDeclarationStatement                 go to state 30
    noSemiColumnConstDeclaration              go to state 31
    assignmentStatement                       go to state 32
    incStatement                              go to state 33
    decStatement                              go to state 34
    ifStatement                               go to state 35
    whileStatement                            go to state 36
    repeatStatement                           go to state 37
    forStatement                              go to state 38
    switchStatement                           go to state 39
    enumStatement                             go to state 40
    returnStatement                           go to state 42
    continueBreakStatement                    go to state 43
    printStatement                            go to state 44
    functionCallStatement                     go to state 45
    comment                                   go to state 46


State 320

  117 ifStatement: IF LEFT_PARENTHESIS logicalExpression $@1 RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@2 blockStatements RIGHT_CURLY_BRACE $@3 . elsePart

    ELSE  shift, and go to state 329

    $default  reduce using rule 121 (elsePart)

    elsePart  go to state 330


State 321

  144 caseStatement: CASE values $@14 . ':' blockStatements BREAK ';'

    ':'  shift, and go to state 331


State 322

    7 blockStatements: blockStatements . blockStatement
  141 caseList: DEFAULT ':' blockStatements . BREAK ';'

    INT         shift, and go to state 98
    CHAR        shift, and go to state 99
    FLOAT       shift, and go to state 100
    STRING      shift, and go to state 101
    CONST       shift, and go to state 5
    BOOL        shift, and go to state 102
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    CONTINUE    shift, and go to state 9
    BREAK       shift, and go to state 332
    WHILE       shift, and go to state 11
    FOR         shift, and go to state 12
    RETURN      shift, and go to state 13
    REPEAT      shift, and go to state 14
    ENUM        shift, and go to state 15
    PRINT       shift, and go to state 17
    COMMENT     shift, and go to state 18
    IDENTIFIER  shift, and go to state 19

    blockStatement                            go to state 103
    variableDeclarationStatement              go to state 25
    assignVariableDeclaration                 go to state 26
    noSemiColumnAssignVariableDeclaration     go to state 27
    nonAssignVariableDeclaration              go to state 28
    noSemiColumnNonAssignVariableDeclaration  go to state 29
    constDeclarationStatement                 go to state 30
    noSemiColumnConstDeclaration              go to state 31
    assignmentStatement                       go to state 32
    incStatement                              go to state 33
    decStatement                              go to state 34
    ifStatement                               go to state 35
    whileStatement                            go to state 36
    repeatStatement                           go to state 37
    forStatement                              go to state 38
    switchStatement                           go to state 39
    enumStatement                             go to state 40
    returnStatement                           go to state 42
    continueBreakStatement                    go to state 43
    printStatement                            go to state 44
    functionCallStatement                     go to state 45
    comment                                   go to state 46


State 323

  129 forAssignment: IDENTIFIER INCREMENT .

    $default  reduce using rule 129 (forAssignment)


State 324

  130 forAssignment: IDENTIFIER DECREMENT .

    $default  reduce using rule 130 (forAssignment)


State 325

  128 forAssignment: IDENTIFIER ASSIGN . expression

    NOT               shift, and go to state 66
    LEFT_PARENTHESIS  shift, and go to state 67
    IDENTIFIER        shift, and go to state 68
    DIGIT             shift, and go to state 69
    FLOAT_LITERAL     shift, and go to state 70
    STRING_LITERAL    shift, and go to state 71
    BOOL_LITERAL      shift, and go to state 72

    expression           go to state 333
    intMathExpression    go to state 75
    intMathTerm          go to state 76
    intMathFactor        go to state 77
    intMathPrimary       go to state 78
    floatMathExpression  go to state 79
    floatMathTerm        go to state 80
    floatMathFactor      go to state 81
    stringExpression     go to state 82
    logicalExpression    go to state 83
    logicalTerm          go to state 84
    logicalFactor        go to state 85
    logicalPrimary       go to state 86


State 326

  136 forStatement: FOR LEFT_PARENTHESIS $@9 forDeclaration $@10 logicalExpression $@11 ';' forAssignment RIGHT_PARENTHESIS . LEFT_CURLY_BRACE blockStatements RIGHT_CURLY_BRACE

    LEFT_CURLY_BRACE  shift, and go to state 334


State 327

  127 repeatStatement: REPEAT LEFT_CURLY_BRACE $@7 blockStatements RIGHT_CURLY_BRACE UNTIL LEFT_PARENTHESIS logicalExpression $@8 RIGHT_PARENTHESIS .

    $default  reduce using rule 127 (repeatStatement)


State 328

    7 blockStatements: blockStatements . blockStatement
  151 functionStatement: types FUNCTION IDENTIFIER $@16 LEFT_PARENTHESIS $@17 parameter RIGHT_PARENTHESIS LEFT_CURLY_BRACE blockStatements . RIGHT_CURLY_BRACE

    INT                shift, and go to state 98
    CHAR               shift, and go to state 99
    FLOAT              shift, and go to state 100
    STRING             shift, and go to state 101
    CONST              shift, and go to state 5
    BOOL               shift, and go to state 102
    IF                 shift, and go to state 7
    SWITCH             shift, and go to state 8
    CONTINUE           shift, and go to state 9
    BREAK              shift, and go to state 10
    WHILE              shift, and go to state 11
    FOR                shift, and go to state 12
    RETURN             shift, and go to state 13
    REPEAT             shift, and go to state 14
    RIGHT_CURLY_BRACE  shift, and go to state 335
    ENUM               shift, and go to state 15
    PRINT              shift, and go to state 17
    COMMENT            shift, and go to state 18
    IDENTIFIER         shift, and go to state 19

    blockStatement                            go to state 103
    variableDeclarationStatement              go to state 25
    assignVariableDeclaration                 go to state 26
    noSemiColumnAssignVariableDeclaration     go to state 27
    nonAssignVariableDeclaration              go to state 28
    noSemiColumnNonAssignVariableDeclaration  go to state 29
    constDeclarationStatement                 go to state 30
    noSemiColumnConstDeclaration              go to state 31
    assignmentStatement                       go to state 32
    incStatement                              go to state 33
    decStatement                              go to state 34
    ifStatement                               go to state 35
    whileStatement                            go to state 36
    repeatStatement                           go to state 37
    forStatement                              go to state 38
    switchStatement                           go to state 39
    enumStatement                             go to state 40
    returnStatement                           go to state 42
    continueBreakStatement                    go to state 43
    printStatement                            go to state 44
    functionCallStatement                     go to state 45
    comment                                   go to state 46


State 329

  118 elsePart: ELSE . ifStatement
  120         | ELSE . LEFT_CURLY_BRACE $@4 blockStatements RIGHT_CURLY_BRACE

    IF                shift, and go to state 7
    LEFT_CURLY_BRACE  shift, and go to state 336

    ifStatement  go to state 337


State 330

  117 ifStatement: IF LEFT_PARENTHESIS logicalExpression $@1 RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@2 blockStatements RIGHT_CURLY_BRACE $@3 elsePart .

    $default  reduce using rule 117 (ifStatement)


State 331

  144 caseStatement: CASE values $@14 ':' . blockStatements BREAK ';'

    INT         shift, and go to state 98
    CHAR        shift, and go to state 99
    FLOAT       shift, and go to state 100
    STRING      shift, and go to state 101
    CONST       shift, and go to state 5
    BOOL        shift, and go to state 102
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    CONTINUE    shift, and go to state 9
    BREAK       shift, and go to state 10
    WHILE       shift, and go to state 11
    FOR         shift, and go to state 12
    RETURN      shift, and go to state 13
    REPEAT      shift, and go to state 14
    ENUM        shift, and go to state 15
    PRINT       shift, and go to state 17
    COMMENT     shift, and go to state 18
    IDENTIFIER  shift, and go to state 19

    blockStatements                           go to state 338
    blockStatement                            go to state 23
    variableDeclarationStatement              go to state 25
    assignVariableDeclaration                 go to state 26
    noSemiColumnAssignVariableDeclaration     go to state 27
    nonAssignVariableDeclaration              go to state 28
    noSemiColumnNonAssignVariableDeclaration  go to state 29
    constDeclarationStatement                 go to state 30
    noSemiColumnConstDeclaration              go to state 31
    assignmentStatement                       go to state 32
    incStatement                              go to state 33
    decStatement                              go to state 34
    ifStatement                               go to state 35
    whileStatement                            go to state 36
    repeatStatement                           go to state 37
    forStatement                              go to state 38
    switchStatement                           go to state 39
    enumStatement                             go to state 40
    returnStatement                           go to state 42
    continueBreakStatement                    go to state 43
    printStatement                            go to state 44
    functionCallStatement                     go to state 45
    comment                                   go to state 46


State 332

  141 caseList: DEFAULT ':' blockStatements BREAK . ';'
  159 continueBreakStatement: BREAK . ';'
  160                       | BREAK . IDENTIFIER ';'
  161                       | BREAK .

    IDENTIFIER  shift, and go to state 62
    ';'         shift, and go to state 339

    IDENTIFIER  [reduce using rule 161 (continueBreakStatement)]
    $default    reduce using rule 161 (continueBreakStatement)


State 333

  128 forAssignment: IDENTIFIER ASSIGN expression .

    $default  reduce using rule 128 (forAssignment)


State 334

  136 forStatement: FOR LEFT_PARENTHESIS $@9 forDeclaration $@10 logicalExpression $@11 ';' forAssignment RIGHT_PARENTHESIS LEFT_CURLY_BRACE . blockStatements RIGHT_CURLY_BRACE

    INT         shift, and go to state 98
    CHAR        shift, and go to state 99
    FLOAT       shift, and go to state 100
    STRING      shift, and go to state 101
    CONST       shift, and go to state 5
    BOOL        shift, and go to state 102
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    CONTINUE    shift, and go to state 9
    BREAK       shift, and go to state 10
    WHILE       shift, and go to state 11
    FOR         shift, and go to state 12
    RETURN      shift, and go to state 13
    REPEAT      shift, and go to state 14
    ENUM        shift, and go to state 15
    PRINT       shift, and go to state 17
    COMMENT     shift, and go to state 18
    IDENTIFIER  shift, and go to state 19

    blockStatements                           go to state 340
    blockStatement                            go to state 23
    variableDeclarationStatement              go to state 25
    assignVariableDeclaration                 go to state 26
    noSemiColumnAssignVariableDeclaration     go to state 27
    nonAssignVariableDeclaration              go to state 28
    noSemiColumnNonAssignVariableDeclaration  go to state 29
    constDeclarationStatement                 go to state 30
    noSemiColumnConstDeclaration              go to state 31
    assignmentStatement                       go to state 32
    incStatement                              go to state 33
    decStatement                              go to state 34
    ifStatement                               go to state 35
    whileStatement                            go to state 36
    repeatStatement                           go to state 37
    forStatement                              go to state 38
    switchStatement                           go to state 39
    enumStatement                             go to state 40
    returnStatement                           go to state 42
    continueBreakStatement                    go to state 43
    printStatement                            go to state 44
    functionCallStatement                     go to state 45
    comment                                   go to state 46


State 335

  151 functionStatement: types FUNCTION IDENTIFIER $@16 LEFT_PARENTHESIS $@17 parameter RIGHT_PARENTHESIS LEFT_CURLY_BRACE blockStatements RIGHT_CURLY_BRACE .

    $default  reduce using rule 151 (functionStatement)


State 336

  120 elsePart: ELSE LEFT_CURLY_BRACE . $@4 blockStatements RIGHT_CURLY_BRACE

    $default  reduce using rule 119 ($@4)

    $@4  go to state 341


State 337

  118 elsePart: ELSE ifStatement .

    $default  reduce using rule 118 (elsePart)


State 338

    7 blockStatements: blockStatements . blockStatement
  144 caseStatement: CASE values $@14 ':' blockStatements . BREAK ';'

    INT         shift, and go to state 98
    CHAR        shift, and go to state 99
    FLOAT       shift, and go to state 100
    STRING      shift, and go to state 101
    CONST       shift, and go to state 5
    BOOL        shift, and go to state 102
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    CONTINUE    shift, and go to state 9
    BREAK       shift, and go to state 342
    WHILE       shift, and go to state 11
    FOR         shift, and go to state 12
    RETURN      shift, and go to state 13
    REPEAT      shift, and go to state 14
    ENUM        shift, and go to state 15
    PRINT       shift, and go to state 17
    COMMENT     shift, and go to state 18
    IDENTIFIER  shift, and go to state 19

    blockStatement                            go to state 103
    variableDeclarationStatement              go to state 25
    assignVariableDeclaration                 go to state 26
    noSemiColumnAssignVariableDeclaration     go to state 27
    nonAssignVariableDeclaration              go to state 28
    noSemiColumnNonAssignVariableDeclaration  go to state 29
    constDeclarationStatement                 go to state 30
    noSemiColumnConstDeclaration              go to state 31
    assignmentStatement                       go to state 32
    incStatement                              go to state 33
    decStatement                              go to state 34
    ifStatement                               go to state 35
    whileStatement                            go to state 36
    repeatStatement                           go to state 37
    forStatement                              go to state 38
    switchStatement                           go to state 39
    enumStatement                             go to state 40
    returnStatement                           go to state 42
    continueBreakStatement                    go to state 43
    printStatement                            go to state 44
    functionCallStatement                     go to state 45
    comment                                   go to state 46


State 339

  141 caseList: DEFAULT ':' blockStatements BREAK ';' .
  159 continueBreakStatement: BREAK ';' .

    RIGHT_CURLY_BRACE  reduce using rule 141 (caseList)
    $default           reduce using rule 159 (continueBreakStatement)


State 340

    7 blockStatements: blockStatements . blockStatement
  136 forStatement: FOR LEFT_PARENTHESIS $@9 forDeclaration $@10 logicalExpression $@11 ';' forAssignment RIGHT_PARENTHESIS LEFT_CURLY_BRACE blockStatements . RIGHT_CURLY_BRACE

    INT                shift, and go to state 98
    CHAR               shift, and go to state 99
    FLOAT              shift, and go to state 100
    STRING             shift, and go to state 101
    CONST              shift, and go to state 5
    BOOL               shift, and go to state 102
    IF                 shift, and go to state 7
    SWITCH             shift, and go to state 8
    CONTINUE           shift, and go to state 9
    BREAK              shift, and go to state 10
    WHILE              shift, and go to state 11
    FOR                shift, and go to state 12
    RETURN             shift, and go to state 13
    REPEAT             shift, and go to state 14
    RIGHT_CURLY_BRACE  shift, and go to state 343
    ENUM               shift, and go to state 15
    PRINT              shift, and go to state 17
    COMMENT            shift, and go to state 18
    IDENTIFIER         shift, and go to state 19

    blockStatement                            go to state 103
    variableDeclarationStatement              go to state 25
    assignVariableDeclaration                 go to state 26
    noSemiColumnAssignVariableDeclaration     go to state 27
    nonAssignVariableDeclaration              go to state 28
    noSemiColumnNonAssignVariableDeclaration  go to state 29
    constDeclarationStatement                 go to state 30
    noSemiColumnConstDeclaration              go to state 31
    assignmentStatement                       go to state 32
    incStatement                              go to state 33
    decStatement                              go to state 34
    ifStatement                               go to state 35
    whileStatement                            go to state 36
    repeatStatement                           go to state 37
    forStatement                              go to state 38
    switchStatement                           go to state 39
    enumStatement                             go to state 40
    returnStatement                           go to state 42
    continueBreakStatement                    go to state 43
    printStatement                            go to state 44
    functionCallStatement                     go to state 45
    comment                                   go to state 46


State 341

  120 elsePart: ELSE LEFT_CURLY_BRACE $@4 . blockStatements RIGHT_CURLY_BRACE

    INT         shift, and go to state 98
    CHAR        shift, and go to state 99
    FLOAT       shift, and go to state 100
    STRING      shift, and go to state 101
    CONST       shift, and go to state 5
    BOOL        shift, and go to state 102
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    CONTINUE    shift, and go to state 9
    BREAK       shift, and go to state 10
    WHILE       shift, and go to state 11
    FOR         shift, and go to state 12
    RETURN      shift, and go to state 13
    REPEAT      shift, and go to state 14
    ENUM        shift, and go to state 15
    PRINT       shift, and go to state 17
    COMMENT     shift, and go to state 18
    IDENTIFIER  shift, and go to state 19

    blockStatements                           go to state 344
    blockStatement                            go to state 23
    variableDeclarationStatement              go to state 25
    assignVariableDeclaration                 go to state 26
    noSemiColumnAssignVariableDeclaration     go to state 27
    nonAssignVariableDeclaration              go to state 28
    noSemiColumnNonAssignVariableDeclaration  go to state 29
    constDeclarationStatement                 go to state 30
    noSemiColumnConstDeclaration              go to state 31
    assignmentStatement                       go to state 32
    incStatement                              go to state 33
    decStatement                              go to state 34
    ifStatement                               go to state 35
    whileStatement                            go to state 36
    repeatStatement                           go to state 37
    forStatement                              go to state 38
    switchStatement                           go to state 39
    enumStatement                             go to state 40
    returnStatement                           go to state 42
    continueBreakStatement                    go to state 43
    printStatement                            go to state 44
    functionCallStatement                     go to state 45
    comment                                   go to state 46


State 342

  144 caseStatement: CASE values $@14 ':' blockStatements BREAK . ';'
  159 continueBreakStatement: BREAK . ';'
  160                       | BREAK . IDENTIFIER ';'
  161                       | BREAK .

    IDENTIFIER  shift, and go to state 62
    ';'         shift, and go to state 345

    IDENTIFIER  [reduce using rule 161 (continueBreakStatement)]
    $default    reduce using rule 161 (continueBreakStatement)


State 343

  136 forStatement: FOR LEFT_PARENTHESIS $@9 forDeclaration $@10 logicalExpression $@11 ';' forAssignment RIGHT_PARENTHESIS LEFT_CURLY_BRACE blockStatements RIGHT_CURLY_BRACE .

    $default  reduce using rule 136 (forStatement)


State 344

    7 blockStatements: blockStatements . blockStatement
  120 elsePart: ELSE LEFT_CURLY_BRACE $@4 blockStatements . RIGHT_CURLY_BRACE

    INT                shift, and go to state 98
    CHAR               shift, and go to state 99
    FLOAT              shift, and go to state 100
    STRING             shift, and go to state 101
    CONST              shift, and go to state 5
    BOOL               shift, and go to state 102
    IF                 shift, and go to state 7
    SWITCH             shift, and go to state 8
    CONTINUE           shift, and go to state 9
    BREAK              shift, and go to state 10
    WHILE              shift, and go to state 11
    FOR                shift, and go to state 12
    RETURN             shift, and go to state 13
    REPEAT             shift, and go to state 14
    RIGHT_CURLY_BRACE  shift, and go to state 346
    ENUM               shift, and go to state 15
    PRINT              shift, and go to state 17
    COMMENT            shift, and go to state 18
    IDENTIFIER         shift, and go to state 19

    blockStatement                            go to state 103
    variableDeclarationStatement              go to state 25
    assignVariableDeclaration                 go to state 26
    noSemiColumnAssignVariableDeclaration     go to state 27
    nonAssignVariableDeclaration              go to state 28
    noSemiColumnNonAssignVariableDeclaration  go to state 29
    constDeclarationStatement                 go to state 30
    noSemiColumnConstDeclaration              go to state 31
    assignmentStatement                       go to state 32
    incStatement                              go to state 33
    decStatement                              go to state 34
    ifStatement                               go to state 35
    whileStatement                            go to state 36
    repeatStatement                           go to state 37
    forStatement                              go to state 38
    switchStatement                           go to state 39
    enumStatement                             go to state 40
    returnStatement                           go to state 42
    continueBreakStatement                    go to state 43
    printStatement                            go to state 44
    functionCallStatement                     go to state 45
    comment                                   go to state 46


State 345

  144 caseStatement: CASE values $@14 ':' blockStatements BREAK ';' .
  159 continueBreakStatement: BREAK ';' .

    CASE               reduce using rule 144 (caseStatement)
    DEFAULT            reduce using rule 144 (caseStatement)
    RIGHT_CURLY_BRACE  reduce using rule 144 (caseStatement)
    $default           reduce using rule 159 (continueBreakStatement)


State 346

  120 elsePart: ELSE LEFT_CURLY_BRACE $@4 blockStatements RIGHT_CURLY_BRACE .

    $default  reduce using rule 120 (elsePart)
