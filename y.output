Terminals unused in grammar

    VOID
    THEN
    DO
    LEFT_SQUARE_BRACKET
    RIGHT_SQUARE_BRACKET
    SCAN


State 9 conflicts: 1 shift/reduce
State 10 conflicts: 1 shift/reduce
State 13 conflicts: 1 shift/reduce
State 23 conflicts: 18 shift/reduce
State 68 conflicts: 20 reduce/reduce
State 92 conflicts: 1 shift/reduce
State 114 conflicts: 12 reduce/reduce
State 223 conflicts: 1 shift/reduce
State 266 conflicts: 9 reduce/reduce
State 339 conflicts: 1 shift/reduce
State 346 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: statement
    2        | program statement

    3 statement: blockStatements
    4          | functionStatement
    5          | main

    6 blockStatements: blockStatement
    7                | blockStatements blockStatement

    8 blockStatement: variableDeclarationStatement
    9               | constDeclarationStatement
   10               | assignmentStatement
   11               | incStatement
   12               | decStatement
   13               | ifStatement
   14               | switchStatement
   15               | whileStatement
   16               | forStatement
   17               | repeatStatement
   18               | enumStatement
   19               | returnStatement
   20               | printStatement
   21               | continueBreakStatement
   22               | functionCallStatement
   23               | comment

   24 values: DIGIT
   25       | FLOAT_LITERAL
   26       | STRING_LITERAL
   27       | CHAR_LITERAL
   28       | BOOL_LITERAL

   29 expression: intMathExpression
   30           | floatMathExpression
   31           | stringExpression
   32           | logicalExpression

   33 variableDeclarationStatement: assignVariableDeclaration
   34                             | nonAssignVariableDeclaration

   35 noSemiColumnVariableDeclarationStatement: noSemiColumnAssignVariableDeclaration
   36                                         | noSemiColumnNonAssignVariableDeclaration

   37 assignVariableDeclaration: noSemiColumnAssignVariableDeclaration ';'

   38 noSemiColumnAssignVariableDeclaration: CHAR IDENTIFIER ASSIGN CHAR_LITERAL
   39                                      | INT IDENTIFIER ASSIGN intMathExpression
   40                                      | FLOAT IDENTIFIER ASSIGN floatMathExpression
   41                                      | STRING IDENTIFIER ASSIGN stringExpression
   42                                      | BOOL IDENTIFIER ASSIGN logicalExpression

   43 nonAssignVariableDeclaration: noSemiColumnNonAssignVariableDeclaration ';'

   44 noSemiColumnNonAssignVariableDeclaration: INT IDENTIFIER
   45                                         | CHAR IDENTIFIER
   46                                         | FLOAT IDENTIFIER
   47                                         | STRING IDENTIFIER
   48                                         | BOOL IDENTIFIER

   49 constDeclarationStatement: noSemiColumnConstDeclaration ';'

   50 noSemiColumnConstDeclaration: CONST CHAR IDENTIFIER ASSIGN CHAR_LITERAL
   51                             | CONST INT IDENTIFIER ASSIGN intMathExpression
   52                             | CONST FLOAT IDENTIFIER ASSIGN floatMathExpression
   53                             | CONST STRING IDENTIFIER ASSIGN stringExpression
   54                             | CONST BOOL IDENTIFIER ASSIGN logicalExpression

   55 assignmentStatement: IDENTIFIER ASSIGN intMathExpression ';'
   56                    | IDENTIFIER ASSIGN floatMathExpression ';'
   57                    | IDENTIFIER ASSIGN stringExpression ';'
   58                    | IDENTIFIER ASSIGN logicalExpression ';'
   59                    | IDENTIFIER ASSIGN CHAR_LITERAL ';'

   60 incStatement: IDENTIFIER INCREMENT ';'

   61 decStatement: IDENTIFIER DECREMENT ';'

   62 intMathExpression: intMathExpression PLUS intMathTerm
   63                  | intMathExpression MINUS intMathTerm
   64                  | intMathTerm

   65 intMathTerm: intMathTerm MULTIPLY intMathFactor
   66            | intMathTerm DIVIDE intMathFactor
   67            | intMathTerm MODULO intMathFactor
   68            | intMathFactor

   69 intMathFactor: intMathPrimary
   70              | IDENTIFIER INCREMENT
   71              | IDENTIFIER DECREMENT

   72 intMathPrimary: IDENTIFIER
   73               | DIGIT
   74               | LEFT_PARENTHESIS intMathExpression RIGHT_PARENTHESIS

   75 floatMathExpression: floatMathExpression PLUS floatMathTerm
   76                    | floatMathExpression MINUS floatMathTerm
   77                    | floatMathTerm

   78 floatMathTerm: floatMathTerm MULTIPLY floatMathFactor
   79              | floatMathTerm DIVIDE floatMathFactor
   80              | floatMathFactor

   81 floatMathFactor: IDENTIFIER
   82                | FLOAT_LITERAL
   83                | LEFT_PARENTHESIS floatMathExpression RIGHT_PARENTHESIS

   84 stringExpression: STRING_LITERAL
   85                 | IDENTIFIER
   86                 | stringExpression PLUS stringExpression
   87                 | LEFT_PARENTHESIS stringExpression RIGHT_PARENTHESIS

   88 logicalExpression: logicalTerm
   89                  | logicalExpression OR logicalTerm

   90 logicalTerm: logicalFactor
   91            | logicalTerm AND logicalFactor

   92 logicalFactor: logicalPrimary
   93              | NOT logicalFactor

   94 logicalPrimary: intMathExpression GREATER intMathExpression
   95               | intMathExpression LESS intMathExpression
   96               | intMathExpression GREATER_EQUAL intMathExpression
   97               | intMathExpression LESS_EQUAL intMathExpression
   98               | intMathExpression EQUAL intMathExpression
   99               | intMathExpression NOT_EQUAL intMathExpression
  100               | floatMathExpression GREATER floatMathExpression
  101               | floatMathExpression LESS floatMathExpression
  102               | floatMathExpression GREATER_EQUAL floatMathExpression
  103               | floatMathExpression LESS_EQUAL floatMathExpression
  104               | floatMathExpression EQUAL floatMathExpression
  105               | floatMathExpression NOT_EQUAL floatMathExpression
  106               | LEFT_PARENTHESIS logicalExpression RIGHT_PARENTHESIS
  107               | BOOL_LITERAL
  108               | IDENTIFIER

  109 $@1: %empty

  110 $@2: %empty

  111 $@3: %empty

  112 ifStatement: IF LEFT_PARENTHESIS logicalExpression $@1 RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@2 blockStatements RIGHT_CURLY_BRACE $@3 elsePart

  113 elsePart: ELSE ifStatement

  114 $@4: %empty

  115 elsePart: ELSE LEFT_CURLY_BRACE $@4 blockStatements RIGHT_CURLY_BRACE
  116         | %empty

  117 $@5: %empty

  118 $@6: %empty

  119 whileStatement: WHILE LEFT_PARENTHESIS logicalExpression $@5 RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@6 blockStatements RIGHT_CURLY_BRACE

  120 $@7: %empty

  121 $@8: %empty

  122 repeatStatement: REPEAT LEFT_CURLY_BRACE $@7 blockStatements RIGHT_CURLY_BRACE UNTIL LEFT_PARENTHESIS logicalExpression $@8 RIGHT_PARENTHESIS

  123 forAssignment: IDENTIFIER ASSIGN intMathExpression
  124              | IDENTIFIER ASSIGN floatMathExpression
  125              | IDENTIFIER ASSIGN stringExpression
  126              | IDENTIFIER ASSIGN BOOL_LITERAL
  127              | IDENTIFIER INCREMENT
  128              | IDENTIFIER DECREMENT

  129 forDeclaration: IDENTIFIER ASSIGN intMathExpression ';'
  130               | IDENTIFIER ASSIGN floatMathExpression ';'
  131               | IDENTIFIER ASSIGN stringExpression ';'
  132               | IDENTIFIER ASSIGN BOOL_LITERAL ';'
  133               | assignVariableDeclaration

  134 $@9: %empty

  135 forStatement: FOR LEFT_PARENTHESIS $@9 forDeclaration logicalExpression ';' forAssignment RIGHT_PARENTHESIS LEFT_CURLY_BRACE blockStatements RIGHT_CURLY_BRACE

  136 $@10: %empty

  137 $@11: %empty

  138 switchStatement: SWITCH LEFT_PARENTHESIS IDENTIFIER $@10 RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@11 caseList RIGHT_CURLY_BRACE

  139 caseList: caseStatement caseList
  140         | DEFAULT ':' blockStatements BREAK ';'
  141         | %empty

  142 $@12: %empty

  143 caseStatement: CASE values $@12 ':' blockStatements BREAK ';'

  144 enumIdentifiers: IDENTIFIER ',' enumIdentifiers
  145                | IDENTIFIER

  146 $@13: %empty

  147 enumStatement: ENUM IDENTIFIER LEFT_CURLY_BRACE $@13 enumIdentifiers RIGHT_CURLY_BRACE

  148 $@14: %empty

  149 $@15: %empty

  150 functionStatement: FUNCTION IDENTIFIER $@14 LEFT_PARENTHESIS $@15 parameter RIGHT_PARENTHESIS LEFT_CURLY_BRACE blockStatements RIGHT_CURLY_BRACE

  151 parameter: noSemiColumnVariableDeclarationStatement ',' parameter
  152          | noSemiColumnVariableDeclarationStatement
  153          | noSemiColumnConstDeclaration ',' parameter
  154          | noSemiColumnConstDeclaration
  155          | %empty

  156 returnStatement: RETURN argument ';'
  157                | RETURN ';'

  158 continueBreakStatement: BREAK ';'
  159                       | BREAK IDENTIFIER ';'
  160                       | BREAK
  161                       | CONTINUE ';'
  162                       | CONTINUE IDENTIFIER ';'
  163                       | CONTINUE

  164 printStatement: PRINT LEFT_PARENTHESIS argument RIGHT_PARENTHESIS ';'
  165               | PRINT LEFT_PARENTHESIS RIGHT_PARENTHESIS ';'

  166 $@16: %empty

  167 functionCallStatement: IDENTIFIER $@16 LEFT_PARENTHESIS argument RIGHT_PARENTHESIS ';'

  168 argument: expression ',' argument
  169         | expression
  170         | %empty

  171 comment: COMMENT

  172 $@17: %empty

  173 $@18: %empty

  174 main: MAIN $@17 LEFT_PARENTHESIS RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@18 blockStatements RIGHT_CURLY_BRACE


Terminals, with rules where they appear

    $end (0) 0
    ',' (44) 144 151 153 168
    ':' (58) 140 143
    ';' (59) 37 43 49 55 56 57 58 59 60 61 129 130 131 132 135 140 143 156 157 158 159 161 162 164 165 167
    error (256)
    INT (258) 39 44 51
    CHAR (259) 38 45 50
    FLOAT (260) 40 46 52
    STRING (261) 41 47 53
    CONST (262) 50 51 52 53 54
    BOOL (263) 42 48 54
    VOID (264)
    PLUS (265) 62 75 86
    MINUS (266) 63 76
    MULTIPLY (267) 65 78
    DIVIDE (268) 66 79
    MODULO (269) 67
    INCREMENT (270) 60 70 127
    DECREMENT (271) 61 71 128
    GREATER (272) 94 100
    LESS (273) 95 101
    GREATER_EQUAL (274) 96 102
    LESS_EQUAL (275) 97 103
    EQUAL (276) 98 104
    NOT_EQUAL (277) 99 105
    AND (278) 91
    OR (279) 89
    NOT (280) 93
    ASSIGN (281) 38 39 40 41 42 50 51 52 53 54 55 56 57 58 59 123 124 125 126 129 130 131 132
    IF (282) 112
    ELSE (283) 113 115
    SWITCH (284) 138
    CASE (285) 143
    DEFAULT (286) 140
    CONTINUE (287) 161 162 163
    BREAK (288) 140 143 158 159 160
    THEN (289)
    WHILE (290) 119
    DO (291)
    FOR (292) 135
    RETURN (293) 156 157
    REPEAT (294) 122
    UNTIL (295) 122
    LEFT_CURLY_BRACE (296) 112 115 119 122 135 138 147 150 174
    RIGHT_CURLY_BRACE (297) 112 115 119 122 135 138 147 150 174
    LEFT_PARENTHESIS (298) 74 83 87 106 112 119 122 135 138 150 164 165 167 174
    RIGHT_PARENTHESIS (299) 74 83 87 106 112 119 122 135 138 150 164 165 167 174
    LEFT_SQUARE_BRACKET (300)
    RIGHT_SQUARE_BRACKET (301)
    ENUM (302) 147
    FUNCTION (303) 150
    MAIN (304) 174
    PRINT (305) 164 165
    SCAN (306)
    COMMENT (307) 171
    IDENTIFIER <sVal> (308) 38 39 40 41 42 44 45 46 47 48 50 51 52 53 54 55 56 57 58 59 60 61 70 71 72 81 85 108 123 124 125 126 127 128 129 130 131 132 138 144 145 147 150 159 162 167
    DIGIT <iVal> (309) 24 73
    FLOAT_LITERAL <fVal> (310) 25 82
    STRING_LITERAL <sVal> (311) 26 84
    CHAR_LITERAL <cVal> (312) 27 38 50 59
    BOOL_LITERAL <bVal> (313) 28 107 126 132


Nonterminals, with rules where they appear

    $accept (62)
        on left: 0
    program (63)
        on left: 1 2
        on right: 0 2
    statement (64)
        on left: 3 4 5
        on right: 1 2
    blockStatements (65)
        on left: 6 7
        on right: 3 7 112 115 119 122 135 140 143 150 174
    blockStatement (66)
        on left: 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
        on right: 6 7
    values <values> (67)
        on left: 24 25 26 27 28
        on right: 143
    expression (68)
        on left: 29 30 31 32
        on right: 168 169
    variableDeclarationStatement (69)
        on left: 33 34
        on right: 8
    noSemiColumnVariableDeclarationStatement (70)
        on left: 35 36
        on right: 151 152
    assignVariableDeclaration (71)
        on left: 37
        on right: 33 133
    noSemiColumnAssignVariableDeclaration (72)
        on left: 38 39 40 41 42
        on right: 35 37
    nonAssignVariableDeclaration (73)
        on left: 43
        on right: 34
    noSemiColumnNonAssignVariableDeclaration (74)
        on left: 44 45 46 47 48
        on right: 36 43
    constDeclarationStatement (75)
        on left: 49
        on right: 9
    noSemiColumnConstDeclaration (76)
        on left: 50 51 52 53 54
        on right: 49 153 154
    assignmentStatement (77)
        on left: 55 56 57 58 59
        on right: 10
    incStatement (78)
        on left: 60
        on right: 11
    decStatement (79)
        on left: 61
        on right: 12
    intMathExpression <iVal> (80)
        on left: 62 63 64
        on right: 29 39 51 55 62 63 74 94 95 96 97 98 99 123 129
    intMathTerm <iVal> (81)
        on left: 65 66 67 68
        on right: 62 63 64 65 66 67
    intMathFactor <iVal> (82)
        on left: 69 70 71
        on right: 65 66 67 68
    intMathPrimary <iVal> (83)
        on left: 72 73 74
        on right: 69
    floatMathExpression <fVal> (84)
        on left: 75 76 77
        on right: 30 40 52 56 75 76 83 100 101 102 103 104 105 124 130
    floatMathTerm <fVal> (85)
        on left: 78 79 80
        on right: 75 76 77 78 79
    floatMathFactor <fVal> (86)
        on left: 81 82 83
        on right: 78 79 80
    stringExpression <sVal> (87)
        on left: 84 85 86 87
        on right: 31 41 53 57 86 87 125 131
    logicalExpression <bVal> (88)
        on left: 88 89
        on right: 32 42 54 58 89 106 112 119 122 135
    logicalTerm <bVal> (89)
        on left: 90 91
        on right: 88 89 91
    logicalFactor <bVal> (90)
        on left: 92 93
        on right: 90 91 93
    logicalPrimary <bVal> (91)
        on left: 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108
        on right: 92
    ifStatement (92)
        on left: 112
        on right: 13 113
    $@1 (93)
        on left: 109
        on right: 112
    $@2 (94)
        on left: 110
        on right: 112
    $@3 (95)
        on left: 111
        on right: 112
    elsePart (96)
        on left: 113 115 116
        on right: 112
    $@4 (97)
        on left: 114
        on right: 115
    whileStatement (98)
        on left: 119
        on right: 15
    $@5 (99)
        on left: 117
        on right: 119
    $@6 (100)
        on left: 118
        on right: 119
    repeatStatement (101)
        on left: 122
        on right: 17
    $@7 (102)
        on left: 120
        on right: 122
    $@8 (103)
        on left: 121
        on right: 122
    forAssignment (104)
        on left: 123 124 125 126 127 128
        on right: 135
    forDeclaration (105)
        on left: 129 130 131 132 133
        on right: 135
    forStatement (106)
        on left: 135
        on right: 16
    $@9 (107)
        on left: 134
        on right: 135
    switchStatement (108)
        on left: 138
        on right: 14
    $@10 (109)
        on left: 136
        on right: 138
    $@11 (110)
        on left: 137
        on right: 138
    caseList (111)
        on left: 139 140 141
        on right: 138 139
    caseStatement (112)
        on left: 143
        on right: 139
    $@12 (113)
        on left: 142
        on right: 143
    enumIdentifiers (114)
        on left: 144 145
        on right: 144 147
    enumStatement (115)
        on left: 147
        on right: 18
    $@13 (116)
        on left: 146
        on right: 147
    functionStatement (117)
        on left: 150
        on right: 4
    $@14 (118)
        on left: 148
        on right: 150
    $@15 (119)
        on left: 149
        on right: 150
    parameter (120)
        on left: 151 152 153 154 155
        on right: 150 151 153
    returnStatement (121)
        on left: 156 157
        on right: 19
    continueBreakStatement (122)
        on left: 158 159 160 161 162 163
        on right: 21
    printStatement (123)
        on left: 164 165
        on right: 20
    functionCallStatement (124)
        on left: 167
        on right: 22
    $@16 (125)
        on left: 166
        on right: 167
    argument (126)
        on left: 168 169 170
        on right: 156 164 167 168
    comment (127)
        on left: 171
        on right: 23
    main (128)
        on left: 174
        on right: 5
    $@17 (129)
        on left: 172
        on right: 174
    $@18 (130)
        on left: 173
        on right: 174


State 0

    0 $accept: . program $end

    INT         shift, and go to state 1
    CHAR        shift, and go to state 2
    FLOAT       shift, and go to state 3
    STRING      shift, and go to state 4
    CONST       shift, and go to state 5
    BOOL        shift, and go to state 6
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    CONTINUE    shift, and go to state 9
    BREAK       shift, and go to state 10
    WHILE       shift, and go to state 11
    FOR         shift, and go to state 12
    RETURN      shift, and go to state 13
    REPEAT      shift, and go to state 14
    ENUM        shift, and go to state 15
    FUNCTION    shift, and go to state 16
    MAIN        shift, and go to state 17
    PRINT       shift, and go to state 18
    COMMENT     shift, and go to state 19
    IDENTIFIER  shift, and go to state 20

    program                                   go to state 21
    statement                                 go to state 22
    blockStatements                           go to state 23
    blockStatement                            go to state 24
    variableDeclarationStatement              go to state 25
    assignVariableDeclaration                 go to state 26
    noSemiColumnAssignVariableDeclaration     go to state 27
    nonAssignVariableDeclaration              go to state 28
    noSemiColumnNonAssignVariableDeclaration  go to state 29
    constDeclarationStatement                 go to state 30
    noSemiColumnConstDeclaration              go to state 31
    assignmentStatement                       go to state 32
    incStatement                              go to state 33
    decStatement                              go to state 34
    ifStatement                               go to state 35
    whileStatement                            go to state 36
    repeatStatement                           go to state 37
    forStatement                              go to state 38
    switchStatement                           go to state 39
    enumStatement                             go to state 40
    functionStatement                         go to state 41
    returnStatement                           go to state 42
    continueBreakStatement                    go to state 43
    printStatement                            go to state 44
    functionCallStatement                     go to state 45
    comment                                   go to state 46
    main                                      go to state 47


State 1

   39 noSemiColumnAssignVariableDeclaration: INT . IDENTIFIER ASSIGN intMathExpression
   44 noSemiColumnNonAssignVariableDeclaration: INT . IDENTIFIER

    IDENTIFIER  shift, and go to state 48


State 2

   38 noSemiColumnAssignVariableDeclaration: CHAR . IDENTIFIER ASSIGN CHAR_LITERAL
   45 noSemiColumnNonAssignVariableDeclaration: CHAR . IDENTIFIER

    IDENTIFIER  shift, and go to state 49


State 3

   40 noSemiColumnAssignVariableDeclaration: FLOAT . IDENTIFIER ASSIGN floatMathExpression
   46 noSemiColumnNonAssignVariableDeclaration: FLOAT . IDENTIFIER

    IDENTIFIER  shift, and go to state 50


State 4

   41 noSemiColumnAssignVariableDeclaration: STRING . IDENTIFIER ASSIGN stringExpression
   47 noSemiColumnNonAssignVariableDeclaration: STRING . IDENTIFIER

    IDENTIFIER  shift, and go to state 51


State 5

   50 noSemiColumnConstDeclaration: CONST . CHAR IDENTIFIER ASSIGN CHAR_LITERAL
   51                             | CONST . INT IDENTIFIER ASSIGN intMathExpression
   52                             | CONST . FLOAT IDENTIFIER ASSIGN floatMathExpression
   53                             | CONST . STRING IDENTIFIER ASSIGN stringExpression
   54                             | CONST . BOOL IDENTIFIER ASSIGN logicalExpression

    INT     shift, and go to state 52
    CHAR    shift, and go to state 53
    FLOAT   shift, and go to state 54
    STRING  shift, and go to state 55
    BOOL    shift, and go to state 56


State 6

   42 noSemiColumnAssignVariableDeclaration: BOOL . IDENTIFIER ASSIGN logicalExpression
   48 noSemiColumnNonAssignVariableDeclaration: BOOL . IDENTIFIER

    IDENTIFIER  shift, and go to state 57


State 7

  112 ifStatement: IF . LEFT_PARENTHESIS logicalExpression $@1 RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@2 blockStatements RIGHT_CURLY_BRACE $@3 elsePart

    LEFT_PARENTHESIS  shift, and go to state 58


State 8

  138 switchStatement: SWITCH . LEFT_PARENTHESIS IDENTIFIER $@10 RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@11 caseList RIGHT_CURLY_BRACE

    LEFT_PARENTHESIS  shift, and go to state 59


State 9

  161 continueBreakStatement: CONTINUE . ';'
  162                       | CONTINUE . IDENTIFIER ';'
  163                       | CONTINUE .

    IDENTIFIER  shift, and go to state 60
    ';'         shift, and go to state 61

    IDENTIFIER  [reduce using rule 163 (continueBreakStatement)]
    $default    reduce using rule 163 (continueBreakStatement)


State 10

  158 continueBreakStatement: BREAK . ';'
  159                       | BREAK . IDENTIFIER ';'
  160                       | BREAK .

    IDENTIFIER  shift, and go to state 62
    ';'         shift, and go to state 63

    IDENTIFIER  [reduce using rule 160 (continueBreakStatement)]
    $default    reduce using rule 160 (continueBreakStatement)


State 11

  119 whileStatement: WHILE . LEFT_PARENTHESIS logicalExpression $@5 RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@6 blockStatements RIGHT_CURLY_BRACE

    LEFT_PARENTHESIS  shift, and go to state 64


State 12

  135 forStatement: FOR . LEFT_PARENTHESIS $@9 forDeclaration logicalExpression ';' forAssignment RIGHT_PARENTHESIS LEFT_CURLY_BRACE blockStatements RIGHT_CURLY_BRACE

    LEFT_PARENTHESIS  shift, and go to state 65


State 13

  156 returnStatement: RETURN . argument ';'
  157                | RETURN . ';'

    NOT               shift, and go to state 66
    LEFT_PARENTHESIS  shift, and go to state 67
    IDENTIFIER        shift, and go to state 68
    DIGIT             shift, and go to state 69
    FLOAT_LITERAL     shift, and go to state 70
    STRING_LITERAL    shift, and go to state 71
    BOOL_LITERAL      shift, and go to state 72
    ';'               shift, and go to state 73

    ';'  [reduce using rule 170 (argument)]

    expression           go to state 74
    intMathExpression    go to state 75
    intMathTerm          go to state 76
    intMathFactor        go to state 77
    intMathPrimary       go to state 78
    floatMathExpression  go to state 79
    floatMathTerm        go to state 80
    floatMathFactor      go to state 81
    stringExpression     go to state 82
    logicalExpression    go to state 83
    logicalTerm          go to state 84
    logicalFactor        go to state 85
    logicalPrimary       go to state 86
    argument             go to state 87


State 14

  122 repeatStatement: REPEAT . LEFT_CURLY_BRACE $@7 blockStatements RIGHT_CURLY_BRACE UNTIL LEFT_PARENTHESIS logicalExpression $@8 RIGHT_PARENTHESIS

    LEFT_CURLY_BRACE  shift, and go to state 88


State 15

  147 enumStatement: ENUM . IDENTIFIER LEFT_CURLY_BRACE $@13 enumIdentifiers RIGHT_CURLY_BRACE

    IDENTIFIER  shift, and go to state 89


State 16

  150 functionStatement: FUNCTION . IDENTIFIER $@14 LEFT_PARENTHESIS $@15 parameter RIGHT_PARENTHESIS LEFT_CURLY_BRACE blockStatements RIGHT_CURLY_BRACE

    IDENTIFIER  shift, and go to state 90


State 17

  174 main: MAIN . $@17 LEFT_PARENTHESIS RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@18 blockStatements RIGHT_CURLY_BRACE

    $default  reduce using rule 172 ($@17)

    $@17  go to state 91


State 18

  164 printStatement: PRINT . LEFT_PARENTHESIS argument RIGHT_PARENTHESIS ';'
  165               | PRINT . LEFT_PARENTHESIS RIGHT_PARENTHESIS ';'

    LEFT_PARENTHESIS  shift, and go to state 92


State 19

  171 comment: COMMENT .

    $default  reduce using rule 171 (comment)


State 20

   55 assignmentStatement: IDENTIFIER . ASSIGN intMathExpression ';'
   56                    | IDENTIFIER . ASSIGN floatMathExpression ';'
   57                    | IDENTIFIER . ASSIGN stringExpression ';'
   58                    | IDENTIFIER . ASSIGN logicalExpression ';'
   59                    | IDENTIFIER . ASSIGN CHAR_LITERAL ';'
   60 incStatement: IDENTIFIER . INCREMENT ';'
   61 decStatement: IDENTIFIER . DECREMENT ';'
  167 functionCallStatement: IDENTIFIER . $@16 LEFT_PARENTHESIS argument RIGHT_PARENTHESIS ';'

    INCREMENT  shift, and go to state 93
    DECREMENT  shift, and go to state 94
    ASSIGN     shift, and go to state 95

    $default  reduce using rule 166 ($@16)

    $@16  go to state 96


State 21

    0 $accept: program . $end
    2 program: program . statement

    $end        shift, and go to state 97
    INT         shift, and go to state 1
    CHAR        shift, and go to state 2
    FLOAT       shift, and go to state 3
    STRING      shift, and go to state 4
    CONST       shift, and go to state 5
    BOOL        shift, and go to state 6
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    CONTINUE    shift, and go to state 9
    BREAK       shift, and go to state 10
    WHILE       shift, and go to state 11
    FOR         shift, and go to state 12
    RETURN      shift, and go to state 13
    REPEAT      shift, and go to state 14
    ENUM        shift, and go to state 15
    FUNCTION    shift, and go to state 16
    MAIN        shift, and go to state 17
    PRINT       shift, and go to state 18
    COMMENT     shift, and go to state 19
    IDENTIFIER  shift, and go to state 20

    statement                                 go to state 98
    blockStatements                           go to state 23
    blockStatement                            go to state 24
    variableDeclarationStatement              go to state 25
    assignVariableDeclaration                 go to state 26
    noSemiColumnAssignVariableDeclaration     go to state 27
    nonAssignVariableDeclaration              go to state 28
    noSemiColumnNonAssignVariableDeclaration  go to state 29
    constDeclarationStatement                 go to state 30
    noSemiColumnConstDeclaration              go to state 31
    assignmentStatement                       go to state 32
    incStatement                              go to state 33
    decStatement                              go to state 34
    ifStatement                               go to state 35
    whileStatement                            go to state 36
    repeatStatement                           go to state 37
    forStatement                              go to state 38
    switchStatement                           go to state 39
    enumStatement                             go to state 40
    functionStatement                         go to state 41
    returnStatement                           go to state 42
    continueBreakStatement                    go to state 43
    printStatement                            go to state 44
    functionCallStatement                     go to state 45
    comment                                   go to state 46
    main                                      go to state 47


State 22

    1 program: statement .

    $default  reduce using rule 1 (program)


State 23

    3 statement: blockStatements .
    7 blockStatements: blockStatements . blockStatement

    INT         shift, and go to state 1
    CHAR        shift, and go to state 2
    FLOAT       shift, and go to state 3
    STRING      shift, and go to state 4
    CONST       shift, and go to state 5
    BOOL        shift, and go to state 6
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    CONTINUE    shift, and go to state 9
    BREAK       shift, and go to state 10
    WHILE       shift, and go to state 11
    FOR         shift, and go to state 12
    RETURN      shift, and go to state 13
    REPEAT      shift, and go to state 14
    ENUM        shift, and go to state 15
    PRINT       shift, and go to state 18
    COMMENT     shift, and go to state 19
    IDENTIFIER  shift, and go to state 20

    INT         [reduce using rule 3 (statement)]
    CHAR        [reduce using rule 3 (statement)]
    FLOAT       [reduce using rule 3 (statement)]
    STRING      [reduce using rule 3 (statement)]
    CONST       [reduce using rule 3 (statement)]
    BOOL        [reduce using rule 3 (statement)]
    IF          [reduce using rule 3 (statement)]
    SWITCH      [reduce using rule 3 (statement)]
    CONTINUE    [reduce using rule 3 (statement)]
    BREAK       [reduce using rule 3 (statement)]
    WHILE       [reduce using rule 3 (statement)]
    FOR         [reduce using rule 3 (statement)]
    RETURN      [reduce using rule 3 (statement)]
    REPEAT      [reduce using rule 3 (statement)]
    ENUM        [reduce using rule 3 (statement)]
    PRINT       [reduce using rule 3 (statement)]
    COMMENT     [reduce using rule 3 (statement)]
    IDENTIFIER  [reduce using rule 3 (statement)]
    $default    reduce using rule 3 (statement)

    blockStatement                            go to state 99
    variableDeclarationStatement              go to state 25
    assignVariableDeclaration                 go to state 26
    noSemiColumnAssignVariableDeclaration     go to state 27
    nonAssignVariableDeclaration              go to state 28
    noSemiColumnNonAssignVariableDeclaration  go to state 29
    constDeclarationStatement                 go to state 30
    noSemiColumnConstDeclaration              go to state 31
    assignmentStatement                       go to state 32
    incStatement                              go to state 33
    decStatement                              go to state 34
    ifStatement                               go to state 35
    whileStatement                            go to state 36
    repeatStatement                           go to state 37
    forStatement                              go to state 38
    switchStatement                           go to state 39
    enumStatement                             go to state 40
    returnStatement                           go to state 42
    continueBreakStatement                    go to state 43
    printStatement                            go to state 44
    functionCallStatement                     go to state 45
    comment                                   go to state 46


State 24

    6 blockStatements: blockStatement .

    $default  reduce using rule 6 (blockStatements)


State 25

    8 blockStatement: variableDeclarationStatement .

    $default  reduce using rule 8 (blockStatement)


State 26

   33 variableDeclarationStatement: assignVariableDeclaration .

    $default  reduce using rule 33 (variableDeclarationStatement)


State 27

   37 assignVariableDeclaration: noSemiColumnAssignVariableDeclaration . ';'

    ';'  shift, and go to state 100


State 28

   34 variableDeclarationStatement: nonAssignVariableDeclaration .

    $default  reduce using rule 34 (variableDeclarationStatement)


State 29

   43 nonAssignVariableDeclaration: noSemiColumnNonAssignVariableDeclaration . ';'

    ';'  shift, and go to state 101


State 30

    9 blockStatement: constDeclarationStatement .

    $default  reduce using rule 9 (blockStatement)


State 31

   49 constDeclarationStatement: noSemiColumnConstDeclaration . ';'

    ';'  shift, and go to state 102


State 32

   10 blockStatement: assignmentStatement .

    $default  reduce using rule 10 (blockStatement)


State 33

   11 blockStatement: incStatement .

    $default  reduce using rule 11 (blockStatement)


State 34

   12 blockStatement: decStatement .

    $default  reduce using rule 12 (blockStatement)


State 35

   13 blockStatement: ifStatement .

    $default  reduce using rule 13 (blockStatement)


State 36

   15 blockStatement: whileStatement .

    $default  reduce using rule 15 (blockStatement)


State 37

   17 blockStatement: repeatStatement .

    $default  reduce using rule 17 (blockStatement)


State 38

   16 blockStatement: forStatement .

    $default  reduce using rule 16 (blockStatement)


State 39

   14 blockStatement: switchStatement .

    $default  reduce using rule 14 (blockStatement)


State 40

   18 blockStatement: enumStatement .

    $default  reduce using rule 18 (blockStatement)


State 41

    4 statement: functionStatement .

    $default  reduce using rule 4 (statement)


State 42

   19 blockStatement: returnStatement .

    $default  reduce using rule 19 (blockStatement)


State 43

   21 blockStatement: continueBreakStatement .

    $default  reduce using rule 21 (blockStatement)


State 44

   20 blockStatement: printStatement .

    $default  reduce using rule 20 (blockStatement)


State 45

   22 blockStatement: functionCallStatement .

    $default  reduce using rule 22 (blockStatement)


State 46

   23 blockStatement: comment .

    $default  reduce using rule 23 (blockStatement)


State 47

    5 statement: main .

    $default  reduce using rule 5 (statement)


State 48

   39 noSemiColumnAssignVariableDeclaration: INT IDENTIFIER . ASSIGN intMathExpression
   44 noSemiColumnNonAssignVariableDeclaration: INT IDENTIFIER .

    ASSIGN  shift, and go to state 103

    $default  reduce using rule 44 (noSemiColumnNonAssignVariableDeclaration)


State 49

   38 noSemiColumnAssignVariableDeclaration: CHAR IDENTIFIER . ASSIGN CHAR_LITERAL
   45 noSemiColumnNonAssignVariableDeclaration: CHAR IDENTIFIER .

    ASSIGN  shift, and go to state 104

    $default  reduce using rule 45 (noSemiColumnNonAssignVariableDeclaration)


State 50

   40 noSemiColumnAssignVariableDeclaration: FLOAT IDENTIFIER . ASSIGN floatMathExpression
   46 noSemiColumnNonAssignVariableDeclaration: FLOAT IDENTIFIER .

    ASSIGN  shift, and go to state 105

    $default  reduce using rule 46 (noSemiColumnNonAssignVariableDeclaration)


State 51

   41 noSemiColumnAssignVariableDeclaration: STRING IDENTIFIER . ASSIGN stringExpression
   47 noSemiColumnNonAssignVariableDeclaration: STRING IDENTIFIER .

    ASSIGN  shift, and go to state 106

    $default  reduce using rule 47 (noSemiColumnNonAssignVariableDeclaration)


State 52

   51 noSemiColumnConstDeclaration: CONST INT . IDENTIFIER ASSIGN intMathExpression

    IDENTIFIER  shift, and go to state 107


State 53

   50 noSemiColumnConstDeclaration: CONST CHAR . IDENTIFIER ASSIGN CHAR_LITERAL

    IDENTIFIER  shift, and go to state 108


State 54

   52 noSemiColumnConstDeclaration: CONST FLOAT . IDENTIFIER ASSIGN floatMathExpression

    IDENTIFIER  shift, and go to state 109


State 55

   53 noSemiColumnConstDeclaration: CONST STRING . IDENTIFIER ASSIGN stringExpression

    IDENTIFIER  shift, and go to state 110


State 56

   54 noSemiColumnConstDeclaration: CONST BOOL . IDENTIFIER ASSIGN logicalExpression

    IDENTIFIER  shift, and go to state 111


State 57

   42 noSemiColumnAssignVariableDeclaration: BOOL IDENTIFIER . ASSIGN logicalExpression
   48 noSemiColumnNonAssignVariableDeclaration: BOOL IDENTIFIER .

    ASSIGN  shift, and go to state 112

    $default  reduce using rule 48 (noSemiColumnNonAssignVariableDeclaration)


State 58

  112 ifStatement: IF LEFT_PARENTHESIS . logicalExpression $@1 RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@2 blockStatements RIGHT_CURLY_BRACE $@3 elsePart

    NOT               shift, and go to state 66
    LEFT_PARENTHESIS  shift, and go to state 113
    IDENTIFIER        shift, and go to state 114
    DIGIT             shift, and go to state 69
    FLOAT_LITERAL     shift, and go to state 70
    BOOL_LITERAL      shift, and go to state 72

    intMathExpression    go to state 115
    intMathTerm          go to state 76
    intMathFactor        go to state 77
    intMathPrimary       go to state 78
    floatMathExpression  go to state 116
    floatMathTerm        go to state 80
    floatMathFactor      go to state 81
    logicalExpression    go to state 117
    logicalTerm          go to state 84
    logicalFactor        go to state 85
    logicalPrimary       go to state 86


State 59

  138 switchStatement: SWITCH LEFT_PARENTHESIS . IDENTIFIER $@10 RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@11 caseList RIGHT_CURLY_BRACE

    IDENTIFIER  shift, and go to state 118


State 60

  162 continueBreakStatement: CONTINUE IDENTIFIER . ';'

    ';'  shift, and go to state 119


State 61

  161 continueBreakStatement: CONTINUE ';' .

    $default  reduce using rule 161 (continueBreakStatement)


State 62

  159 continueBreakStatement: BREAK IDENTIFIER . ';'

    ';'  shift, and go to state 120


State 63

  158 continueBreakStatement: BREAK ';' .

    $default  reduce using rule 158 (continueBreakStatement)


State 64

  119 whileStatement: WHILE LEFT_PARENTHESIS . logicalExpression $@5 RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@6 blockStatements RIGHT_CURLY_BRACE

    NOT               shift, and go to state 66
    LEFT_PARENTHESIS  shift, and go to state 113
    IDENTIFIER        shift, and go to state 114
    DIGIT             shift, and go to state 69
    FLOAT_LITERAL     shift, and go to state 70
    BOOL_LITERAL      shift, and go to state 72

    intMathExpression    go to state 115
    intMathTerm          go to state 76
    intMathFactor        go to state 77
    intMathPrimary       go to state 78
    floatMathExpression  go to state 116
    floatMathTerm        go to state 80
    floatMathFactor      go to state 81
    logicalExpression    go to state 121
    logicalTerm          go to state 84
    logicalFactor        go to state 85
    logicalPrimary       go to state 86


State 65

  135 forStatement: FOR LEFT_PARENTHESIS . $@9 forDeclaration logicalExpression ';' forAssignment RIGHT_PARENTHESIS LEFT_CURLY_BRACE blockStatements RIGHT_CURLY_BRACE

    $default  reduce using rule 134 ($@9)

    $@9  go to state 122


State 66

   93 logicalFactor: NOT . logicalFactor

    NOT               shift, and go to state 66
    LEFT_PARENTHESIS  shift, and go to state 113
    IDENTIFIER        shift, and go to state 114
    DIGIT             shift, and go to state 69
    FLOAT_LITERAL     shift, and go to state 70
    BOOL_LITERAL      shift, and go to state 72

    intMathExpression    go to state 115
    intMathTerm          go to state 76
    intMathFactor        go to state 77
    intMathPrimary       go to state 78
    floatMathExpression  go to state 116
    floatMathTerm        go to state 80
    floatMathFactor      go to state 81
    logicalFactor        go to state 123
    logicalPrimary       go to state 86


State 67

   74 intMathPrimary: LEFT_PARENTHESIS . intMathExpression RIGHT_PARENTHESIS
   83 floatMathFactor: LEFT_PARENTHESIS . floatMathExpression RIGHT_PARENTHESIS
   87 stringExpression: LEFT_PARENTHESIS . stringExpression RIGHT_PARENTHESIS
  106 logicalPrimary: LEFT_PARENTHESIS . logicalExpression RIGHT_PARENTHESIS

    NOT               shift, and go to state 66
    LEFT_PARENTHESIS  shift, and go to state 67
    IDENTIFIER        shift, and go to state 68
    DIGIT             shift, and go to state 69
    FLOAT_LITERAL     shift, and go to state 70
    STRING_LITERAL    shift, and go to state 71
    BOOL_LITERAL      shift, and go to state 72

    intMathExpression    go to state 124
    intMathTerm          go to state 76
    intMathFactor        go to state 77
    intMathPrimary       go to state 78
    floatMathExpression  go to state 125
    floatMathTerm        go to state 80
    floatMathFactor      go to state 81
    stringExpression     go to state 126
    logicalExpression    go to state 127
    logicalTerm          go to state 84
    logicalFactor        go to state 85
    logicalPrimary       go to state 86


State 68

   70 intMathFactor: IDENTIFIER . INCREMENT
   71              | IDENTIFIER . DECREMENT
   72 intMathPrimary: IDENTIFIER .
   81 floatMathFactor: IDENTIFIER .
   85 stringExpression: IDENTIFIER .
  108 logicalPrimary: IDENTIFIER .

    INCREMENT  shift, and go to state 128
    DECREMENT  shift, and go to state 129

    PLUS               reduce using rule 72 (intMathPrimary)
    PLUS               [reduce using rule 81 (floatMathFactor)]
    PLUS               [reduce using rule 85 (stringExpression)]
    MINUS              reduce using rule 72 (intMathPrimary)
    MINUS              [reduce using rule 81 (floatMathFactor)]
    MULTIPLY           reduce using rule 72 (intMathPrimary)
    MULTIPLY           [reduce using rule 81 (floatMathFactor)]
    DIVIDE             reduce using rule 72 (intMathPrimary)
    DIVIDE             [reduce using rule 81 (floatMathFactor)]
    GREATER            reduce using rule 72 (intMathPrimary)
    GREATER            [reduce using rule 81 (floatMathFactor)]
    LESS               reduce using rule 72 (intMathPrimary)
    LESS               [reduce using rule 81 (floatMathFactor)]
    GREATER_EQUAL      reduce using rule 72 (intMathPrimary)
    GREATER_EQUAL      [reduce using rule 81 (floatMathFactor)]
    LESS_EQUAL         reduce using rule 72 (intMathPrimary)
    LESS_EQUAL         [reduce using rule 81 (floatMathFactor)]
    EQUAL              reduce using rule 72 (intMathPrimary)
    EQUAL              [reduce using rule 81 (floatMathFactor)]
    NOT_EQUAL          reduce using rule 72 (intMathPrimary)
    NOT_EQUAL          [reduce using rule 81 (floatMathFactor)]
    AND                reduce using rule 108 (logicalPrimary)
    OR                 reduce using rule 108 (logicalPrimary)
    RIGHT_PARENTHESIS  reduce using rule 72 (intMathPrimary)
    RIGHT_PARENTHESIS  [reduce using rule 81 (floatMathFactor)]
    RIGHT_PARENTHESIS  [reduce using rule 85 (stringExpression)]
    RIGHT_PARENTHESIS  [reduce using rule 108 (logicalPrimary)]
    ';'                reduce using rule 72 (intMathPrimary)
    ';'                [reduce using rule 81 (floatMathFactor)]
    ';'                [reduce using rule 85 (stringExpression)]
    ';'                [reduce using rule 108 (logicalPrimary)]
    ','                reduce using rule 72 (intMathPrimary)
    ','                [reduce using rule 81 (floatMathFactor)]
    ','                [reduce using rule 85 (stringExpression)]
    ','                [reduce using rule 108 (logicalPrimary)]
    $default           reduce using rule 72 (intMathPrimary)


State 69

   73 intMathPrimary: DIGIT .

    $default  reduce using rule 73 (intMathPrimary)


State 70

   82 floatMathFactor: FLOAT_LITERAL .

    $default  reduce using rule 82 (floatMathFactor)


State 71

   84 stringExpression: STRING_LITERAL .

    $default  reduce using rule 84 (stringExpression)


State 72

  107 logicalPrimary: BOOL_LITERAL .

    $default  reduce using rule 107 (logicalPrimary)


State 73

  157 returnStatement: RETURN ';' .

    $default  reduce using rule 157 (returnStatement)


State 74

  168 argument: expression . ',' argument
  169         | expression .

    ','  shift, and go to state 130

    $default  reduce using rule 169 (argument)


State 75

   29 expression: intMathExpression .
   62 intMathExpression: intMathExpression . PLUS intMathTerm
   63                  | intMathExpression . MINUS intMathTerm
   94 logicalPrimary: intMathExpression . GREATER intMathExpression
   95               | intMathExpression . LESS intMathExpression
   96               | intMathExpression . GREATER_EQUAL intMathExpression
   97               | intMathExpression . LESS_EQUAL intMathExpression
   98               | intMathExpression . EQUAL intMathExpression
   99               | intMathExpression . NOT_EQUAL intMathExpression

    PLUS           shift, and go to state 131
    MINUS          shift, and go to state 132
    GREATER        shift, and go to state 133
    LESS           shift, and go to state 134
    GREATER_EQUAL  shift, and go to state 135
    LESS_EQUAL     shift, and go to state 136
    EQUAL          shift, and go to state 137
    NOT_EQUAL      shift, and go to state 138

    $default  reduce using rule 29 (expression)


State 76

   64 intMathExpression: intMathTerm .
   65 intMathTerm: intMathTerm . MULTIPLY intMathFactor
   66            | intMathTerm . DIVIDE intMathFactor
   67            | intMathTerm . MODULO intMathFactor

    MULTIPLY  shift, and go to state 139
    DIVIDE    shift, and go to state 140
    MODULO    shift, and go to state 141

    $default  reduce using rule 64 (intMathExpression)


State 77

   68 intMathTerm: intMathFactor .

    $default  reduce using rule 68 (intMathTerm)


State 78

   69 intMathFactor: intMathPrimary .

    $default  reduce using rule 69 (intMathFactor)


State 79

   30 expression: floatMathExpression .
   75 floatMathExpression: floatMathExpression . PLUS floatMathTerm
   76                    | floatMathExpression . MINUS floatMathTerm
  100 logicalPrimary: floatMathExpression . GREATER floatMathExpression
  101               | floatMathExpression . LESS floatMathExpression
  102               | floatMathExpression . GREATER_EQUAL floatMathExpression
  103               | floatMathExpression . LESS_EQUAL floatMathExpression
  104               | floatMathExpression . EQUAL floatMathExpression
  105               | floatMathExpression . NOT_EQUAL floatMathExpression

    PLUS           shift, and go to state 142
    MINUS          shift, and go to state 143
    GREATER        shift, and go to state 144
    LESS           shift, and go to state 145
    GREATER_EQUAL  shift, and go to state 146
    LESS_EQUAL     shift, and go to state 147
    EQUAL          shift, and go to state 148
    NOT_EQUAL      shift, and go to state 149

    $default  reduce using rule 30 (expression)


State 80

   77 floatMathExpression: floatMathTerm .
   78 floatMathTerm: floatMathTerm . MULTIPLY floatMathFactor
   79              | floatMathTerm . DIVIDE floatMathFactor

    MULTIPLY  shift, and go to state 150
    DIVIDE    shift, and go to state 151

    $default  reduce using rule 77 (floatMathExpression)


State 81

   80 floatMathTerm: floatMathFactor .

    $default  reduce using rule 80 (floatMathTerm)


State 82

   31 expression: stringExpression .
   86 stringExpression: stringExpression . PLUS stringExpression

    PLUS  shift, and go to state 152

    $default  reduce using rule 31 (expression)


State 83

   32 expression: logicalExpression .
   89 logicalExpression: logicalExpression . OR logicalTerm

    OR  shift, and go to state 153

    $default  reduce using rule 32 (expression)


State 84

   88 logicalExpression: logicalTerm .
   91 logicalTerm: logicalTerm . AND logicalFactor

    AND  shift, and go to state 154

    $default  reduce using rule 88 (logicalExpression)


State 85

   90 logicalTerm: logicalFactor .

    $default  reduce using rule 90 (logicalTerm)


State 86

   92 logicalFactor: logicalPrimary .

    $default  reduce using rule 92 (logicalFactor)


State 87

  156 returnStatement: RETURN argument . ';'

    ';'  shift, and go to state 155


State 88

  122 repeatStatement: REPEAT LEFT_CURLY_BRACE . $@7 blockStatements RIGHT_CURLY_BRACE UNTIL LEFT_PARENTHESIS logicalExpression $@8 RIGHT_PARENTHESIS

    $default  reduce using rule 120 ($@7)

    $@7  go to state 156


State 89

  147 enumStatement: ENUM IDENTIFIER . LEFT_CURLY_BRACE $@13 enumIdentifiers RIGHT_CURLY_BRACE

    LEFT_CURLY_BRACE  shift, and go to state 157


State 90

  150 functionStatement: FUNCTION IDENTIFIER . $@14 LEFT_PARENTHESIS $@15 parameter RIGHT_PARENTHESIS LEFT_CURLY_BRACE blockStatements RIGHT_CURLY_BRACE

    $default  reduce using rule 148 ($@14)

    $@14  go to state 158


State 91

  174 main: MAIN $@17 . LEFT_PARENTHESIS RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@18 blockStatements RIGHT_CURLY_BRACE

    LEFT_PARENTHESIS  shift, and go to state 159


State 92

  164 printStatement: PRINT LEFT_PARENTHESIS . argument RIGHT_PARENTHESIS ';'
  165               | PRINT LEFT_PARENTHESIS . RIGHT_PARENTHESIS ';'

    NOT                shift, and go to state 66
    LEFT_PARENTHESIS   shift, and go to state 67
    RIGHT_PARENTHESIS  shift, and go to state 160
    IDENTIFIER         shift, and go to state 68
    DIGIT              shift, and go to state 69
    FLOAT_LITERAL      shift, and go to state 70
    STRING_LITERAL     shift, and go to state 71
    BOOL_LITERAL       shift, and go to state 72

    RIGHT_PARENTHESIS  [reduce using rule 170 (argument)]

    expression           go to state 74
    intMathExpression    go to state 75
    intMathTerm          go to state 76
    intMathFactor        go to state 77
    intMathPrimary       go to state 78
    floatMathExpression  go to state 79
    floatMathTerm        go to state 80
    floatMathFactor      go to state 81
    stringExpression     go to state 82
    logicalExpression    go to state 83
    logicalTerm          go to state 84
    logicalFactor        go to state 85
    logicalPrimary       go to state 86
    argument             go to state 161


State 93

   60 incStatement: IDENTIFIER INCREMENT . ';'

    ';'  shift, and go to state 162


State 94

   61 decStatement: IDENTIFIER DECREMENT . ';'

    ';'  shift, and go to state 163


State 95

   55 assignmentStatement: IDENTIFIER ASSIGN . intMathExpression ';'
   56                    | IDENTIFIER ASSIGN . floatMathExpression ';'
   57                    | IDENTIFIER ASSIGN . stringExpression ';'
   58                    | IDENTIFIER ASSIGN . logicalExpression ';'
   59                    | IDENTIFIER ASSIGN . CHAR_LITERAL ';'

    NOT               shift, and go to state 66
    LEFT_PARENTHESIS  shift, and go to state 67
    IDENTIFIER        shift, and go to state 68
    DIGIT             shift, and go to state 69
    FLOAT_LITERAL     shift, and go to state 70
    STRING_LITERAL    shift, and go to state 71
    CHAR_LITERAL      shift, and go to state 164
    BOOL_LITERAL      shift, and go to state 72

    intMathExpression    go to state 165
    intMathTerm          go to state 76
    intMathFactor        go to state 77
    intMathPrimary       go to state 78
    floatMathExpression  go to state 166
    floatMathTerm        go to state 80
    floatMathFactor      go to state 81
    stringExpression     go to state 167
    logicalExpression    go to state 168
    logicalTerm          go to state 84
    logicalFactor        go to state 85
    logicalPrimary       go to state 86


State 96

  167 functionCallStatement: IDENTIFIER $@16 . LEFT_PARENTHESIS argument RIGHT_PARENTHESIS ';'

    LEFT_PARENTHESIS  shift, and go to state 169


State 97

    0 $accept: program $end .

    $default  accept


State 98

    2 program: program statement .

    $default  reduce using rule 2 (program)


State 99

    7 blockStatements: blockStatements blockStatement .

    $default  reduce using rule 7 (blockStatements)


State 100

   37 assignVariableDeclaration: noSemiColumnAssignVariableDeclaration ';' .

    $default  reduce using rule 37 (assignVariableDeclaration)


State 101

   43 nonAssignVariableDeclaration: noSemiColumnNonAssignVariableDeclaration ';' .

    $default  reduce using rule 43 (nonAssignVariableDeclaration)


State 102

   49 constDeclarationStatement: noSemiColumnConstDeclaration ';' .

    $default  reduce using rule 49 (constDeclarationStatement)


State 103

   39 noSemiColumnAssignVariableDeclaration: INT IDENTIFIER ASSIGN . intMathExpression

    LEFT_PARENTHESIS  shift, and go to state 170
    IDENTIFIER        shift, and go to state 171
    DIGIT             shift, and go to state 69

    intMathExpression  go to state 172
    intMathTerm        go to state 76
    intMathFactor      go to state 77
    intMathPrimary     go to state 78


State 104

   38 noSemiColumnAssignVariableDeclaration: CHAR IDENTIFIER ASSIGN . CHAR_LITERAL

    CHAR_LITERAL  shift, and go to state 173


State 105

   40 noSemiColumnAssignVariableDeclaration: FLOAT IDENTIFIER ASSIGN . floatMathExpression

    LEFT_PARENTHESIS  shift, and go to state 174
    IDENTIFIER        shift, and go to state 175
    FLOAT_LITERAL     shift, and go to state 70

    floatMathExpression  go to state 176
    floatMathTerm        go to state 80
    floatMathFactor      go to state 81


State 106

   41 noSemiColumnAssignVariableDeclaration: STRING IDENTIFIER ASSIGN . stringExpression

    LEFT_PARENTHESIS  shift, and go to state 177
    IDENTIFIER        shift, and go to state 178
    STRING_LITERAL    shift, and go to state 71

    stringExpression  go to state 179


State 107

   51 noSemiColumnConstDeclaration: CONST INT IDENTIFIER . ASSIGN intMathExpression

    ASSIGN  shift, and go to state 180


State 108

   50 noSemiColumnConstDeclaration: CONST CHAR IDENTIFIER . ASSIGN CHAR_LITERAL

    ASSIGN  shift, and go to state 181


State 109

   52 noSemiColumnConstDeclaration: CONST FLOAT IDENTIFIER . ASSIGN floatMathExpression

    ASSIGN  shift, and go to state 182


State 110

   53 noSemiColumnConstDeclaration: CONST STRING IDENTIFIER . ASSIGN stringExpression

    ASSIGN  shift, and go to state 183


State 111

   54 noSemiColumnConstDeclaration: CONST BOOL IDENTIFIER . ASSIGN logicalExpression

    ASSIGN  shift, and go to state 184


State 112

   42 noSemiColumnAssignVariableDeclaration: BOOL IDENTIFIER ASSIGN . logicalExpression

    NOT               shift, and go to state 66
    LEFT_PARENTHESIS  shift, and go to state 113
    IDENTIFIER        shift, and go to state 114
    DIGIT             shift, and go to state 69
    FLOAT_LITERAL     shift, and go to state 70
    BOOL_LITERAL      shift, and go to state 72

    intMathExpression    go to state 115
    intMathTerm          go to state 76
    intMathFactor        go to state 77
    intMathPrimary       go to state 78
    floatMathExpression  go to state 116
    floatMathTerm        go to state 80
    floatMathFactor      go to state 81
    logicalExpression    go to state 185
    logicalTerm          go to state 84
    logicalFactor        go to state 85
    logicalPrimary       go to state 86


State 113

   74 intMathPrimary: LEFT_PARENTHESIS . intMathExpression RIGHT_PARENTHESIS
   83 floatMathFactor: LEFT_PARENTHESIS . floatMathExpression RIGHT_PARENTHESIS
  106 logicalPrimary: LEFT_PARENTHESIS . logicalExpression RIGHT_PARENTHESIS

    NOT               shift, and go to state 66
    LEFT_PARENTHESIS  shift, and go to state 113
    IDENTIFIER        shift, and go to state 114
    DIGIT             shift, and go to state 69
    FLOAT_LITERAL     shift, and go to state 70
    BOOL_LITERAL      shift, and go to state 72

    intMathExpression    go to state 124
    intMathTerm          go to state 76
    intMathFactor        go to state 77
    intMathPrimary       go to state 78
    floatMathExpression  go to state 125
    floatMathTerm        go to state 80
    floatMathFactor      go to state 81
    logicalExpression    go to state 127
    logicalTerm          go to state 84
    logicalFactor        go to state 85
    logicalPrimary       go to state 86


State 114

   70 intMathFactor: IDENTIFIER . INCREMENT
   71              | IDENTIFIER . DECREMENT
   72 intMathPrimary: IDENTIFIER .
   81 floatMathFactor: IDENTIFIER .
  108 logicalPrimary: IDENTIFIER .

    INCREMENT  shift, and go to state 128
    DECREMENT  shift, and go to state 129

    PLUS               reduce using rule 72 (intMathPrimary)
    PLUS               [reduce using rule 81 (floatMathFactor)]
    MINUS              reduce using rule 72 (intMathPrimary)
    MINUS              [reduce using rule 81 (floatMathFactor)]
    MULTIPLY           reduce using rule 72 (intMathPrimary)
    MULTIPLY           [reduce using rule 81 (floatMathFactor)]
    DIVIDE             reduce using rule 72 (intMathPrimary)
    DIVIDE             [reduce using rule 81 (floatMathFactor)]
    GREATER            reduce using rule 72 (intMathPrimary)
    GREATER            [reduce using rule 81 (floatMathFactor)]
    LESS               reduce using rule 72 (intMathPrimary)
    LESS               [reduce using rule 81 (floatMathFactor)]
    GREATER_EQUAL      reduce using rule 72 (intMathPrimary)
    GREATER_EQUAL      [reduce using rule 81 (floatMathFactor)]
    LESS_EQUAL         reduce using rule 72 (intMathPrimary)
    LESS_EQUAL         [reduce using rule 81 (floatMathFactor)]
    EQUAL              reduce using rule 72 (intMathPrimary)
    EQUAL              [reduce using rule 81 (floatMathFactor)]
    NOT_EQUAL          reduce using rule 72 (intMathPrimary)
    NOT_EQUAL          [reduce using rule 81 (floatMathFactor)]
    AND                reduce using rule 108 (logicalPrimary)
    OR                 reduce using rule 108 (logicalPrimary)
    RIGHT_PARENTHESIS  reduce using rule 72 (intMathPrimary)
    RIGHT_PARENTHESIS  [reduce using rule 81 (floatMathFactor)]
    RIGHT_PARENTHESIS  [reduce using rule 108 (logicalPrimary)]
    ';'                reduce using rule 108 (logicalPrimary)
    ','                reduce using rule 108 (logicalPrimary)
    $default           reduce using rule 72 (intMathPrimary)


State 115

   62 intMathExpression: intMathExpression . PLUS intMathTerm
   63                  | intMathExpression . MINUS intMathTerm
   94 logicalPrimary: intMathExpression . GREATER intMathExpression
   95               | intMathExpression . LESS intMathExpression
   96               | intMathExpression . GREATER_EQUAL intMathExpression
   97               | intMathExpression . LESS_EQUAL intMathExpression
   98               | intMathExpression . EQUAL intMathExpression
   99               | intMathExpression . NOT_EQUAL intMathExpression

    PLUS           shift, and go to state 131
    MINUS          shift, and go to state 132
    GREATER        shift, and go to state 133
    LESS           shift, and go to state 134
    GREATER_EQUAL  shift, and go to state 135
    LESS_EQUAL     shift, and go to state 136
    EQUAL          shift, and go to state 137
    NOT_EQUAL      shift, and go to state 138


State 116

   75 floatMathExpression: floatMathExpression . PLUS floatMathTerm
   76                    | floatMathExpression . MINUS floatMathTerm
  100 logicalPrimary: floatMathExpression . GREATER floatMathExpression
  101               | floatMathExpression . LESS floatMathExpression
  102               | floatMathExpression . GREATER_EQUAL floatMathExpression
  103               | floatMathExpression . LESS_EQUAL floatMathExpression
  104               | floatMathExpression . EQUAL floatMathExpression
  105               | floatMathExpression . NOT_EQUAL floatMathExpression

    PLUS           shift, and go to state 142
    MINUS          shift, and go to state 143
    GREATER        shift, and go to state 144
    LESS           shift, and go to state 145
    GREATER_EQUAL  shift, and go to state 146
    LESS_EQUAL     shift, and go to state 147
    EQUAL          shift, and go to state 148
    NOT_EQUAL      shift, and go to state 149


State 117

   89 logicalExpression: logicalExpression . OR logicalTerm
  112 ifStatement: IF LEFT_PARENTHESIS logicalExpression . $@1 RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@2 blockStatements RIGHT_CURLY_BRACE $@3 elsePart

    OR  shift, and go to state 153

    $default  reduce using rule 109 ($@1)

    $@1  go to state 186


State 118

  138 switchStatement: SWITCH LEFT_PARENTHESIS IDENTIFIER . $@10 RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@11 caseList RIGHT_CURLY_BRACE

    $default  reduce using rule 136 ($@10)

    $@10  go to state 187


State 119

  162 continueBreakStatement: CONTINUE IDENTIFIER ';' .

    $default  reduce using rule 162 (continueBreakStatement)


State 120

  159 continueBreakStatement: BREAK IDENTIFIER ';' .

    $default  reduce using rule 159 (continueBreakStatement)


State 121

   89 logicalExpression: logicalExpression . OR logicalTerm
  119 whileStatement: WHILE LEFT_PARENTHESIS logicalExpression . $@5 RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@6 blockStatements RIGHT_CURLY_BRACE

    OR  shift, and go to state 153

    $default  reduce using rule 117 ($@5)

    $@5  go to state 188


State 122

  135 forStatement: FOR LEFT_PARENTHESIS $@9 . forDeclaration logicalExpression ';' forAssignment RIGHT_PARENTHESIS LEFT_CURLY_BRACE blockStatements RIGHT_CURLY_BRACE

    INT         shift, and go to state 189
    CHAR        shift, and go to state 190
    FLOAT       shift, and go to state 191
    STRING      shift, and go to state 192
    BOOL        shift, and go to state 193
    IDENTIFIER  shift, and go to state 194

    assignVariableDeclaration              go to state 195
    noSemiColumnAssignVariableDeclaration  go to state 27
    forDeclaration                         go to state 196


State 123

   93 logicalFactor: NOT logicalFactor .

    $default  reduce using rule 93 (logicalFactor)


State 124

   62 intMathExpression: intMathExpression . PLUS intMathTerm
   63                  | intMathExpression . MINUS intMathTerm
   74 intMathPrimary: LEFT_PARENTHESIS intMathExpression . RIGHT_PARENTHESIS
   94 logicalPrimary: intMathExpression . GREATER intMathExpression
   95               | intMathExpression . LESS intMathExpression
   96               | intMathExpression . GREATER_EQUAL intMathExpression
   97               | intMathExpression . LESS_EQUAL intMathExpression
   98               | intMathExpression . EQUAL intMathExpression
   99               | intMathExpression . NOT_EQUAL intMathExpression

    PLUS               shift, and go to state 131
    MINUS              shift, and go to state 132
    GREATER            shift, and go to state 133
    LESS               shift, and go to state 134
    GREATER_EQUAL      shift, and go to state 135
    LESS_EQUAL         shift, and go to state 136
    EQUAL              shift, and go to state 137
    NOT_EQUAL          shift, and go to state 138
    RIGHT_PARENTHESIS  shift, and go to state 197


State 125

   75 floatMathExpression: floatMathExpression . PLUS floatMathTerm
   76                    | floatMathExpression . MINUS floatMathTerm
   83 floatMathFactor: LEFT_PARENTHESIS floatMathExpression . RIGHT_PARENTHESIS
  100 logicalPrimary: floatMathExpression . GREATER floatMathExpression
  101               | floatMathExpression . LESS floatMathExpression
  102               | floatMathExpression . GREATER_EQUAL floatMathExpression
  103               | floatMathExpression . LESS_EQUAL floatMathExpression
  104               | floatMathExpression . EQUAL floatMathExpression
  105               | floatMathExpression . NOT_EQUAL floatMathExpression

    PLUS               shift, and go to state 142
    MINUS              shift, and go to state 143
    GREATER            shift, and go to state 144
    LESS               shift, and go to state 145
    GREATER_EQUAL      shift, and go to state 146
    LESS_EQUAL         shift, and go to state 147
    EQUAL              shift, and go to state 148
    NOT_EQUAL          shift, and go to state 149
    RIGHT_PARENTHESIS  shift, and go to state 198


State 126

   86 stringExpression: stringExpression . PLUS stringExpression
   87                 | LEFT_PARENTHESIS stringExpression . RIGHT_PARENTHESIS

    PLUS               shift, and go to state 152
    RIGHT_PARENTHESIS  shift, and go to state 199


State 127

   89 logicalExpression: logicalExpression . OR logicalTerm
  106 logicalPrimary: LEFT_PARENTHESIS logicalExpression . RIGHT_PARENTHESIS

    OR                 shift, and go to state 153
    RIGHT_PARENTHESIS  shift, and go to state 200


State 128

   70 intMathFactor: IDENTIFIER INCREMENT .

    $default  reduce using rule 70 (intMathFactor)


State 129

   71 intMathFactor: IDENTIFIER DECREMENT .

    $default  reduce using rule 71 (intMathFactor)


State 130

  168 argument: expression ',' . argument

    NOT               shift, and go to state 66
    LEFT_PARENTHESIS  shift, and go to state 67
    IDENTIFIER        shift, and go to state 68
    DIGIT             shift, and go to state 69
    FLOAT_LITERAL     shift, and go to state 70
    STRING_LITERAL    shift, and go to state 71
    BOOL_LITERAL      shift, and go to state 72

    $default  reduce using rule 170 (argument)

    expression           go to state 74
    intMathExpression    go to state 75
    intMathTerm          go to state 76
    intMathFactor        go to state 77
    intMathPrimary       go to state 78
    floatMathExpression  go to state 79
    floatMathTerm        go to state 80
    floatMathFactor      go to state 81
    stringExpression     go to state 82
    logicalExpression    go to state 83
    logicalTerm          go to state 84
    logicalFactor        go to state 85
    logicalPrimary       go to state 86
    argument             go to state 201


State 131

   62 intMathExpression: intMathExpression PLUS . intMathTerm

    LEFT_PARENTHESIS  shift, and go to state 170
    IDENTIFIER        shift, and go to state 171
    DIGIT             shift, and go to state 69

    intMathTerm     go to state 202
    intMathFactor   go to state 77
    intMathPrimary  go to state 78


State 132

   63 intMathExpression: intMathExpression MINUS . intMathTerm

    LEFT_PARENTHESIS  shift, and go to state 170
    IDENTIFIER        shift, and go to state 171
    DIGIT             shift, and go to state 69

    intMathTerm     go to state 203
    intMathFactor   go to state 77
    intMathPrimary  go to state 78


State 133

   94 logicalPrimary: intMathExpression GREATER . intMathExpression

    LEFT_PARENTHESIS  shift, and go to state 170
    IDENTIFIER        shift, and go to state 171
    DIGIT             shift, and go to state 69

    intMathExpression  go to state 204
    intMathTerm        go to state 76
    intMathFactor      go to state 77
    intMathPrimary     go to state 78


State 134

   95 logicalPrimary: intMathExpression LESS . intMathExpression

    LEFT_PARENTHESIS  shift, and go to state 170
    IDENTIFIER        shift, and go to state 171
    DIGIT             shift, and go to state 69

    intMathExpression  go to state 205
    intMathTerm        go to state 76
    intMathFactor      go to state 77
    intMathPrimary     go to state 78


State 135

   96 logicalPrimary: intMathExpression GREATER_EQUAL . intMathExpression

    LEFT_PARENTHESIS  shift, and go to state 170
    IDENTIFIER        shift, and go to state 171
    DIGIT             shift, and go to state 69

    intMathExpression  go to state 206
    intMathTerm        go to state 76
    intMathFactor      go to state 77
    intMathPrimary     go to state 78


State 136

   97 logicalPrimary: intMathExpression LESS_EQUAL . intMathExpression

    LEFT_PARENTHESIS  shift, and go to state 170
    IDENTIFIER        shift, and go to state 171
    DIGIT             shift, and go to state 69

    intMathExpression  go to state 207
    intMathTerm        go to state 76
    intMathFactor      go to state 77
    intMathPrimary     go to state 78


State 137

   98 logicalPrimary: intMathExpression EQUAL . intMathExpression

    LEFT_PARENTHESIS  shift, and go to state 170
    IDENTIFIER        shift, and go to state 171
    DIGIT             shift, and go to state 69

    intMathExpression  go to state 208
    intMathTerm        go to state 76
    intMathFactor      go to state 77
    intMathPrimary     go to state 78


State 138

   99 logicalPrimary: intMathExpression NOT_EQUAL . intMathExpression

    LEFT_PARENTHESIS  shift, and go to state 170
    IDENTIFIER        shift, and go to state 171
    DIGIT             shift, and go to state 69

    intMathExpression  go to state 209
    intMathTerm        go to state 76
    intMathFactor      go to state 77
    intMathPrimary     go to state 78


State 139

   65 intMathTerm: intMathTerm MULTIPLY . intMathFactor

    LEFT_PARENTHESIS  shift, and go to state 170
    IDENTIFIER        shift, and go to state 171
    DIGIT             shift, and go to state 69

    intMathFactor   go to state 210
    intMathPrimary  go to state 78


State 140

   66 intMathTerm: intMathTerm DIVIDE . intMathFactor

    LEFT_PARENTHESIS  shift, and go to state 170
    IDENTIFIER        shift, and go to state 171
    DIGIT             shift, and go to state 69

    intMathFactor   go to state 211
    intMathPrimary  go to state 78


State 141

   67 intMathTerm: intMathTerm MODULO . intMathFactor

    LEFT_PARENTHESIS  shift, and go to state 170
    IDENTIFIER        shift, and go to state 171
    DIGIT             shift, and go to state 69

    intMathFactor   go to state 212
    intMathPrimary  go to state 78


State 142

   75 floatMathExpression: floatMathExpression PLUS . floatMathTerm

    LEFT_PARENTHESIS  shift, and go to state 174
    IDENTIFIER        shift, and go to state 175
    FLOAT_LITERAL     shift, and go to state 70

    floatMathTerm    go to state 213
    floatMathFactor  go to state 81


State 143

   76 floatMathExpression: floatMathExpression MINUS . floatMathTerm

    LEFT_PARENTHESIS  shift, and go to state 174
    IDENTIFIER        shift, and go to state 175
    FLOAT_LITERAL     shift, and go to state 70

    floatMathTerm    go to state 214
    floatMathFactor  go to state 81


State 144

  100 logicalPrimary: floatMathExpression GREATER . floatMathExpression

    LEFT_PARENTHESIS  shift, and go to state 174
    IDENTIFIER        shift, and go to state 175
    FLOAT_LITERAL     shift, and go to state 70

    floatMathExpression  go to state 215
    floatMathTerm        go to state 80
    floatMathFactor      go to state 81


State 145

  101 logicalPrimary: floatMathExpression LESS . floatMathExpression

    LEFT_PARENTHESIS  shift, and go to state 174
    IDENTIFIER        shift, and go to state 175
    FLOAT_LITERAL     shift, and go to state 70

    floatMathExpression  go to state 216
    floatMathTerm        go to state 80
    floatMathFactor      go to state 81


State 146

  102 logicalPrimary: floatMathExpression GREATER_EQUAL . floatMathExpression

    LEFT_PARENTHESIS  shift, and go to state 174
    IDENTIFIER        shift, and go to state 175
    FLOAT_LITERAL     shift, and go to state 70

    floatMathExpression  go to state 217
    floatMathTerm        go to state 80
    floatMathFactor      go to state 81


State 147

  103 logicalPrimary: floatMathExpression LESS_EQUAL . floatMathExpression

    LEFT_PARENTHESIS  shift, and go to state 174
    IDENTIFIER        shift, and go to state 175
    FLOAT_LITERAL     shift, and go to state 70

    floatMathExpression  go to state 218
    floatMathTerm        go to state 80
    floatMathFactor      go to state 81


State 148

  104 logicalPrimary: floatMathExpression EQUAL . floatMathExpression

    LEFT_PARENTHESIS  shift, and go to state 174
    IDENTIFIER        shift, and go to state 175
    FLOAT_LITERAL     shift, and go to state 70

    floatMathExpression  go to state 219
    floatMathTerm        go to state 80
    floatMathFactor      go to state 81


State 149

  105 logicalPrimary: floatMathExpression NOT_EQUAL . floatMathExpression

    LEFT_PARENTHESIS  shift, and go to state 174
    IDENTIFIER        shift, and go to state 175
    FLOAT_LITERAL     shift, and go to state 70

    floatMathExpression  go to state 220
    floatMathTerm        go to state 80
    floatMathFactor      go to state 81


State 150

   78 floatMathTerm: floatMathTerm MULTIPLY . floatMathFactor

    LEFT_PARENTHESIS  shift, and go to state 174
    IDENTIFIER        shift, and go to state 175
    FLOAT_LITERAL     shift, and go to state 70

    floatMathFactor  go to state 221


State 151

   79 floatMathTerm: floatMathTerm DIVIDE . floatMathFactor

    LEFT_PARENTHESIS  shift, and go to state 174
    IDENTIFIER        shift, and go to state 175
    FLOAT_LITERAL     shift, and go to state 70

    floatMathFactor  go to state 222


State 152

   86 stringExpression: stringExpression PLUS . stringExpression

    LEFT_PARENTHESIS  shift, and go to state 177
    IDENTIFIER        shift, and go to state 178
    STRING_LITERAL    shift, and go to state 71

    stringExpression  go to state 223


State 153

   89 logicalExpression: logicalExpression OR . logicalTerm

    NOT               shift, and go to state 66
    LEFT_PARENTHESIS  shift, and go to state 113
    IDENTIFIER        shift, and go to state 114
    DIGIT             shift, and go to state 69
    FLOAT_LITERAL     shift, and go to state 70
    BOOL_LITERAL      shift, and go to state 72

    intMathExpression    go to state 115
    intMathTerm          go to state 76
    intMathFactor        go to state 77
    intMathPrimary       go to state 78
    floatMathExpression  go to state 116
    floatMathTerm        go to state 80
    floatMathFactor      go to state 81
    logicalTerm          go to state 224
    logicalFactor        go to state 85
    logicalPrimary       go to state 86


State 154

   91 logicalTerm: logicalTerm AND . logicalFactor

    NOT               shift, and go to state 66
    LEFT_PARENTHESIS  shift, and go to state 113
    IDENTIFIER        shift, and go to state 114
    DIGIT             shift, and go to state 69
    FLOAT_LITERAL     shift, and go to state 70
    BOOL_LITERAL      shift, and go to state 72

    intMathExpression    go to state 115
    intMathTerm          go to state 76
    intMathFactor        go to state 77
    intMathPrimary       go to state 78
    floatMathExpression  go to state 116
    floatMathTerm        go to state 80
    floatMathFactor      go to state 81
    logicalFactor        go to state 225
    logicalPrimary       go to state 86


State 155

  156 returnStatement: RETURN argument ';' .

    $default  reduce using rule 156 (returnStatement)


State 156

  122 repeatStatement: REPEAT LEFT_CURLY_BRACE $@7 . blockStatements RIGHT_CURLY_BRACE UNTIL LEFT_PARENTHESIS logicalExpression $@8 RIGHT_PARENTHESIS

    INT         shift, and go to state 1
    CHAR        shift, and go to state 2
    FLOAT       shift, and go to state 3
    STRING      shift, and go to state 4
    CONST       shift, and go to state 5
    BOOL        shift, and go to state 6
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    CONTINUE    shift, and go to state 9
    BREAK       shift, and go to state 10
    WHILE       shift, and go to state 11
    FOR         shift, and go to state 12
    RETURN      shift, and go to state 13
    REPEAT      shift, and go to state 14
    ENUM        shift, and go to state 15
    PRINT       shift, and go to state 18
    COMMENT     shift, and go to state 19
    IDENTIFIER  shift, and go to state 20

    blockStatements                           go to state 226
    blockStatement                            go to state 24
    variableDeclarationStatement              go to state 25
    assignVariableDeclaration                 go to state 26
    noSemiColumnAssignVariableDeclaration     go to state 27
    nonAssignVariableDeclaration              go to state 28
    noSemiColumnNonAssignVariableDeclaration  go to state 29
    constDeclarationStatement                 go to state 30
    noSemiColumnConstDeclaration              go to state 31
    assignmentStatement                       go to state 32
    incStatement                              go to state 33
    decStatement                              go to state 34
    ifStatement                               go to state 35
    whileStatement                            go to state 36
    repeatStatement                           go to state 37
    forStatement                              go to state 38
    switchStatement                           go to state 39
    enumStatement                             go to state 40
    returnStatement                           go to state 42
    continueBreakStatement                    go to state 43
    printStatement                            go to state 44
    functionCallStatement                     go to state 45
    comment                                   go to state 46


State 157

  147 enumStatement: ENUM IDENTIFIER LEFT_CURLY_BRACE . $@13 enumIdentifiers RIGHT_CURLY_BRACE

    $default  reduce using rule 146 ($@13)

    $@13  go to state 227


State 158

  150 functionStatement: FUNCTION IDENTIFIER $@14 . LEFT_PARENTHESIS $@15 parameter RIGHT_PARENTHESIS LEFT_CURLY_BRACE blockStatements RIGHT_CURLY_BRACE

    LEFT_PARENTHESIS  shift, and go to state 228


State 159

  174 main: MAIN $@17 LEFT_PARENTHESIS . RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@18 blockStatements RIGHT_CURLY_BRACE

    RIGHT_PARENTHESIS  shift, and go to state 229


State 160

  165 printStatement: PRINT LEFT_PARENTHESIS RIGHT_PARENTHESIS . ';'

    ';'  shift, and go to state 230


State 161

  164 printStatement: PRINT LEFT_PARENTHESIS argument . RIGHT_PARENTHESIS ';'

    RIGHT_PARENTHESIS  shift, and go to state 231


State 162

   60 incStatement: IDENTIFIER INCREMENT ';' .

    $default  reduce using rule 60 (incStatement)


State 163

   61 decStatement: IDENTIFIER DECREMENT ';' .

    $default  reduce using rule 61 (decStatement)


State 164

   59 assignmentStatement: IDENTIFIER ASSIGN CHAR_LITERAL . ';'

    ';'  shift, and go to state 232


State 165

   55 assignmentStatement: IDENTIFIER ASSIGN intMathExpression . ';'
   62 intMathExpression: intMathExpression . PLUS intMathTerm
   63                  | intMathExpression . MINUS intMathTerm
   94 logicalPrimary: intMathExpression . GREATER intMathExpression
   95               | intMathExpression . LESS intMathExpression
   96               | intMathExpression . GREATER_EQUAL intMathExpression
   97               | intMathExpression . LESS_EQUAL intMathExpression
   98               | intMathExpression . EQUAL intMathExpression
   99               | intMathExpression . NOT_EQUAL intMathExpression

    PLUS           shift, and go to state 131
    MINUS          shift, and go to state 132
    GREATER        shift, and go to state 133
    LESS           shift, and go to state 134
    GREATER_EQUAL  shift, and go to state 135
    LESS_EQUAL     shift, and go to state 136
    EQUAL          shift, and go to state 137
    NOT_EQUAL      shift, and go to state 138
    ';'            shift, and go to state 233


State 166

   56 assignmentStatement: IDENTIFIER ASSIGN floatMathExpression . ';'
   75 floatMathExpression: floatMathExpression . PLUS floatMathTerm
   76                    | floatMathExpression . MINUS floatMathTerm
  100 logicalPrimary: floatMathExpression . GREATER floatMathExpression
  101               | floatMathExpression . LESS floatMathExpression
  102               | floatMathExpression . GREATER_EQUAL floatMathExpression
  103               | floatMathExpression . LESS_EQUAL floatMathExpression
  104               | floatMathExpression . EQUAL floatMathExpression
  105               | floatMathExpression . NOT_EQUAL floatMathExpression

    PLUS           shift, and go to state 142
    MINUS          shift, and go to state 143
    GREATER        shift, and go to state 144
    LESS           shift, and go to state 145
    GREATER_EQUAL  shift, and go to state 146
    LESS_EQUAL     shift, and go to state 147
    EQUAL          shift, and go to state 148
    NOT_EQUAL      shift, and go to state 149
    ';'            shift, and go to state 234


State 167

   57 assignmentStatement: IDENTIFIER ASSIGN stringExpression . ';'
   86 stringExpression: stringExpression . PLUS stringExpression

    PLUS  shift, and go to state 152
    ';'   shift, and go to state 235


State 168

   58 assignmentStatement: IDENTIFIER ASSIGN logicalExpression . ';'
   89 logicalExpression: logicalExpression . OR logicalTerm

    OR   shift, and go to state 153
    ';'  shift, and go to state 236


State 169

  167 functionCallStatement: IDENTIFIER $@16 LEFT_PARENTHESIS . argument RIGHT_PARENTHESIS ';'

    NOT               shift, and go to state 66
    LEFT_PARENTHESIS  shift, and go to state 67
    IDENTIFIER        shift, and go to state 68
    DIGIT             shift, and go to state 69
    FLOAT_LITERAL     shift, and go to state 70
    STRING_LITERAL    shift, and go to state 71
    BOOL_LITERAL      shift, and go to state 72

    $default  reduce using rule 170 (argument)

    expression           go to state 74
    intMathExpression    go to state 75
    intMathTerm          go to state 76
    intMathFactor        go to state 77
    intMathPrimary       go to state 78
    floatMathExpression  go to state 79
    floatMathTerm        go to state 80
    floatMathFactor      go to state 81
    stringExpression     go to state 82
    logicalExpression    go to state 83
    logicalTerm          go to state 84
    logicalFactor        go to state 85
    logicalPrimary       go to state 86
    argument             go to state 237


State 170

   74 intMathPrimary: LEFT_PARENTHESIS . intMathExpression RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 170
    IDENTIFIER        shift, and go to state 171
    DIGIT             shift, and go to state 69

    intMathExpression  go to state 238
    intMathTerm        go to state 76
    intMathFactor      go to state 77
    intMathPrimary     go to state 78


State 171

   70 intMathFactor: IDENTIFIER . INCREMENT
   71              | IDENTIFIER . DECREMENT
   72 intMathPrimary: IDENTIFIER .

    INCREMENT  shift, and go to state 128
    DECREMENT  shift, and go to state 129

    $default  reduce using rule 72 (intMathPrimary)


State 172

   39 noSemiColumnAssignVariableDeclaration: INT IDENTIFIER ASSIGN intMathExpression .
   62 intMathExpression: intMathExpression . PLUS intMathTerm
   63                  | intMathExpression . MINUS intMathTerm

    PLUS   shift, and go to state 131
    MINUS  shift, and go to state 132

    $default  reduce using rule 39 (noSemiColumnAssignVariableDeclaration)


State 173

   38 noSemiColumnAssignVariableDeclaration: CHAR IDENTIFIER ASSIGN CHAR_LITERAL .

    $default  reduce using rule 38 (noSemiColumnAssignVariableDeclaration)


State 174

   83 floatMathFactor: LEFT_PARENTHESIS . floatMathExpression RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 174
    IDENTIFIER        shift, and go to state 175
    FLOAT_LITERAL     shift, and go to state 70

    floatMathExpression  go to state 239
    floatMathTerm        go to state 80
    floatMathFactor      go to state 81


State 175

   81 floatMathFactor: IDENTIFIER .

    $default  reduce using rule 81 (floatMathFactor)


State 176

   40 noSemiColumnAssignVariableDeclaration: FLOAT IDENTIFIER ASSIGN floatMathExpression .
   75 floatMathExpression: floatMathExpression . PLUS floatMathTerm
   76                    | floatMathExpression . MINUS floatMathTerm

    PLUS   shift, and go to state 142
    MINUS  shift, and go to state 143

    $default  reduce using rule 40 (noSemiColumnAssignVariableDeclaration)


State 177

   87 stringExpression: LEFT_PARENTHESIS . stringExpression RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 177
    IDENTIFIER        shift, and go to state 178
    STRING_LITERAL    shift, and go to state 71

    stringExpression  go to state 126


State 178

   85 stringExpression: IDENTIFIER .

    $default  reduce using rule 85 (stringExpression)


State 179

   41 noSemiColumnAssignVariableDeclaration: STRING IDENTIFIER ASSIGN stringExpression .
   86 stringExpression: stringExpression . PLUS stringExpression

    PLUS  shift, and go to state 152

    $default  reduce using rule 41 (noSemiColumnAssignVariableDeclaration)


State 180

   51 noSemiColumnConstDeclaration: CONST INT IDENTIFIER ASSIGN . intMathExpression

    LEFT_PARENTHESIS  shift, and go to state 170
    IDENTIFIER        shift, and go to state 171
    DIGIT             shift, and go to state 69

    intMathExpression  go to state 240
    intMathTerm        go to state 76
    intMathFactor      go to state 77
    intMathPrimary     go to state 78


State 181

   50 noSemiColumnConstDeclaration: CONST CHAR IDENTIFIER ASSIGN . CHAR_LITERAL

    CHAR_LITERAL  shift, and go to state 241


State 182

   52 noSemiColumnConstDeclaration: CONST FLOAT IDENTIFIER ASSIGN . floatMathExpression

    LEFT_PARENTHESIS  shift, and go to state 174
    IDENTIFIER        shift, and go to state 175
    FLOAT_LITERAL     shift, and go to state 70

    floatMathExpression  go to state 242
    floatMathTerm        go to state 80
    floatMathFactor      go to state 81


State 183

   53 noSemiColumnConstDeclaration: CONST STRING IDENTIFIER ASSIGN . stringExpression

    LEFT_PARENTHESIS  shift, and go to state 177
    IDENTIFIER        shift, and go to state 178
    STRING_LITERAL    shift, and go to state 71

    stringExpression  go to state 243


State 184

   54 noSemiColumnConstDeclaration: CONST BOOL IDENTIFIER ASSIGN . logicalExpression

    NOT               shift, and go to state 66
    LEFT_PARENTHESIS  shift, and go to state 113
    IDENTIFIER        shift, and go to state 114
    DIGIT             shift, and go to state 69
    FLOAT_LITERAL     shift, and go to state 70
    BOOL_LITERAL      shift, and go to state 72

    intMathExpression    go to state 115
    intMathTerm          go to state 76
    intMathFactor        go to state 77
    intMathPrimary       go to state 78
    floatMathExpression  go to state 116
    floatMathTerm        go to state 80
    floatMathFactor      go to state 81
    logicalExpression    go to state 244
    logicalTerm          go to state 84
    logicalFactor        go to state 85
    logicalPrimary       go to state 86


State 185

   42 noSemiColumnAssignVariableDeclaration: BOOL IDENTIFIER ASSIGN logicalExpression .
   89 logicalExpression: logicalExpression . OR logicalTerm

    OR  shift, and go to state 153

    $default  reduce using rule 42 (noSemiColumnAssignVariableDeclaration)


State 186

  112 ifStatement: IF LEFT_PARENTHESIS logicalExpression $@1 . RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@2 blockStatements RIGHT_CURLY_BRACE $@3 elsePart

    RIGHT_PARENTHESIS  shift, and go to state 245


State 187

  138 switchStatement: SWITCH LEFT_PARENTHESIS IDENTIFIER $@10 . RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@11 caseList RIGHT_CURLY_BRACE

    RIGHT_PARENTHESIS  shift, and go to state 246


State 188

  119 whileStatement: WHILE LEFT_PARENTHESIS logicalExpression $@5 . RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@6 blockStatements RIGHT_CURLY_BRACE

    RIGHT_PARENTHESIS  shift, and go to state 247


State 189

   39 noSemiColumnAssignVariableDeclaration: INT . IDENTIFIER ASSIGN intMathExpression

    IDENTIFIER  shift, and go to state 248


State 190

   38 noSemiColumnAssignVariableDeclaration: CHAR . IDENTIFIER ASSIGN CHAR_LITERAL

    IDENTIFIER  shift, and go to state 249


State 191

   40 noSemiColumnAssignVariableDeclaration: FLOAT . IDENTIFIER ASSIGN floatMathExpression

    IDENTIFIER  shift, and go to state 250


State 192

   41 noSemiColumnAssignVariableDeclaration: STRING . IDENTIFIER ASSIGN stringExpression

    IDENTIFIER  shift, and go to state 251


State 193

   42 noSemiColumnAssignVariableDeclaration: BOOL . IDENTIFIER ASSIGN logicalExpression

    IDENTIFIER  shift, and go to state 252


State 194

  129 forDeclaration: IDENTIFIER . ASSIGN intMathExpression ';'
  130               | IDENTIFIER . ASSIGN floatMathExpression ';'
  131               | IDENTIFIER . ASSIGN stringExpression ';'
  132               | IDENTIFIER . ASSIGN BOOL_LITERAL ';'

    ASSIGN  shift, and go to state 253


State 195

  133 forDeclaration: assignVariableDeclaration .

    $default  reduce using rule 133 (forDeclaration)


State 196

  135 forStatement: FOR LEFT_PARENTHESIS $@9 forDeclaration . logicalExpression ';' forAssignment RIGHT_PARENTHESIS LEFT_CURLY_BRACE blockStatements RIGHT_CURLY_BRACE

    NOT               shift, and go to state 66
    LEFT_PARENTHESIS  shift, and go to state 113
    IDENTIFIER        shift, and go to state 114
    DIGIT             shift, and go to state 69
    FLOAT_LITERAL     shift, and go to state 70
    BOOL_LITERAL      shift, and go to state 72

    intMathExpression    go to state 115
    intMathTerm          go to state 76
    intMathFactor        go to state 77
    intMathPrimary       go to state 78
    floatMathExpression  go to state 116
    floatMathTerm        go to state 80
    floatMathFactor      go to state 81
    logicalExpression    go to state 254
    logicalTerm          go to state 84
    logicalFactor        go to state 85
    logicalPrimary       go to state 86


State 197

   74 intMathPrimary: LEFT_PARENTHESIS intMathExpression RIGHT_PARENTHESIS .

    $default  reduce using rule 74 (intMathPrimary)


State 198

   83 floatMathFactor: LEFT_PARENTHESIS floatMathExpression RIGHT_PARENTHESIS .

    $default  reduce using rule 83 (floatMathFactor)


State 199

   87 stringExpression: LEFT_PARENTHESIS stringExpression RIGHT_PARENTHESIS .

    $default  reduce using rule 87 (stringExpression)


State 200

  106 logicalPrimary: LEFT_PARENTHESIS logicalExpression RIGHT_PARENTHESIS .

    $default  reduce using rule 106 (logicalPrimary)


State 201

  168 argument: expression ',' argument .

    $default  reduce using rule 168 (argument)


State 202

   62 intMathExpression: intMathExpression PLUS intMathTerm .
   65 intMathTerm: intMathTerm . MULTIPLY intMathFactor
   66            | intMathTerm . DIVIDE intMathFactor
   67            | intMathTerm . MODULO intMathFactor

    MULTIPLY  shift, and go to state 139
    DIVIDE    shift, and go to state 140
    MODULO    shift, and go to state 141

    $default  reduce using rule 62 (intMathExpression)


State 203

   63 intMathExpression: intMathExpression MINUS intMathTerm .
   65 intMathTerm: intMathTerm . MULTIPLY intMathFactor
   66            | intMathTerm . DIVIDE intMathFactor
   67            | intMathTerm . MODULO intMathFactor

    MULTIPLY  shift, and go to state 139
    DIVIDE    shift, and go to state 140
    MODULO    shift, and go to state 141

    $default  reduce using rule 63 (intMathExpression)


State 204

   62 intMathExpression: intMathExpression . PLUS intMathTerm
   63                  | intMathExpression . MINUS intMathTerm
   94 logicalPrimary: intMathExpression GREATER intMathExpression .

    PLUS   shift, and go to state 131
    MINUS  shift, and go to state 132

    $default  reduce using rule 94 (logicalPrimary)


State 205

   62 intMathExpression: intMathExpression . PLUS intMathTerm
   63                  | intMathExpression . MINUS intMathTerm
   95 logicalPrimary: intMathExpression LESS intMathExpression .

    PLUS   shift, and go to state 131
    MINUS  shift, and go to state 132

    $default  reduce using rule 95 (logicalPrimary)


State 206

   62 intMathExpression: intMathExpression . PLUS intMathTerm
   63                  | intMathExpression . MINUS intMathTerm
   96 logicalPrimary: intMathExpression GREATER_EQUAL intMathExpression .

    PLUS   shift, and go to state 131
    MINUS  shift, and go to state 132

    $default  reduce using rule 96 (logicalPrimary)


State 207

   62 intMathExpression: intMathExpression . PLUS intMathTerm
   63                  | intMathExpression . MINUS intMathTerm
   97 logicalPrimary: intMathExpression LESS_EQUAL intMathExpression .

    PLUS   shift, and go to state 131
    MINUS  shift, and go to state 132

    $default  reduce using rule 97 (logicalPrimary)


State 208

   62 intMathExpression: intMathExpression . PLUS intMathTerm
   63                  | intMathExpression . MINUS intMathTerm
   98 logicalPrimary: intMathExpression EQUAL intMathExpression .

    PLUS   shift, and go to state 131
    MINUS  shift, and go to state 132

    $default  reduce using rule 98 (logicalPrimary)


State 209

   62 intMathExpression: intMathExpression . PLUS intMathTerm
   63                  | intMathExpression . MINUS intMathTerm
   99 logicalPrimary: intMathExpression NOT_EQUAL intMathExpression .

    PLUS   shift, and go to state 131
    MINUS  shift, and go to state 132

    $default  reduce using rule 99 (logicalPrimary)


State 210

   65 intMathTerm: intMathTerm MULTIPLY intMathFactor .

    $default  reduce using rule 65 (intMathTerm)


State 211

   66 intMathTerm: intMathTerm DIVIDE intMathFactor .

    $default  reduce using rule 66 (intMathTerm)


State 212

   67 intMathTerm: intMathTerm MODULO intMathFactor .

    $default  reduce using rule 67 (intMathTerm)


State 213

   75 floatMathExpression: floatMathExpression PLUS floatMathTerm .
   78 floatMathTerm: floatMathTerm . MULTIPLY floatMathFactor
   79              | floatMathTerm . DIVIDE floatMathFactor

    MULTIPLY  shift, and go to state 150
    DIVIDE    shift, and go to state 151

    $default  reduce using rule 75 (floatMathExpression)


State 214

   76 floatMathExpression: floatMathExpression MINUS floatMathTerm .
   78 floatMathTerm: floatMathTerm . MULTIPLY floatMathFactor
   79              | floatMathTerm . DIVIDE floatMathFactor

    MULTIPLY  shift, and go to state 150
    DIVIDE    shift, and go to state 151

    $default  reduce using rule 76 (floatMathExpression)


State 215

   75 floatMathExpression: floatMathExpression . PLUS floatMathTerm
   76                    | floatMathExpression . MINUS floatMathTerm
  100 logicalPrimary: floatMathExpression GREATER floatMathExpression .

    PLUS   shift, and go to state 142
    MINUS  shift, and go to state 143

    $default  reduce using rule 100 (logicalPrimary)


State 216

   75 floatMathExpression: floatMathExpression . PLUS floatMathTerm
   76                    | floatMathExpression . MINUS floatMathTerm
  101 logicalPrimary: floatMathExpression LESS floatMathExpression .

    PLUS   shift, and go to state 142
    MINUS  shift, and go to state 143

    $default  reduce using rule 101 (logicalPrimary)


State 217

   75 floatMathExpression: floatMathExpression . PLUS floatMathTerm
   76                    | floatMathExpression . MINUS floatMathTerm
  102 logicalPrimary: floatMathExpression GREATER_EQUAL floatMathExpression .

    PLUS   shift, and go to state 142
    MINUS  shift, and go to state 143

    $default  reduce using rule 102 (logicalPrimary)


State 218

   75 floatMathExpression: floatMathExpression . PLUS floatMathTerm
   76                    | floatMathExpression . MINUS floatMathTerm
  103 logicalPrimary: floatMathExpression LESS_EQUAL floatMathExpression .

    PLUS   shift, and go to state 142
    MINUS  shift, and go to state 143

    $default  reduce using rule 103 (logicalPrimary)


State 219

   75 floatMathExpression: floatMathExpression . PLUS floatMathTerm
   76                    | floatMathExpression . MINUS floatMathTerm
  104 logicalPrimary: floatMathExpression EQUAL floatMathExpression .

    PLUS   shift, and go to state 142
    MINUS  shift, and go to state 143

    $default  reduce using rule 104 (logicalPrimary)


State 220

   75 floatMathExpression: floatMathExpression . PLUS floatMathTerm
   76                    | floatMathExpression . MINUS floatMathTerm
  105 logicalPrimary: floatMathExpression NOT_EQUAL floatMathExpression .

    PLUS   shift, and go to state 142
    MINUS  shift, and go to state 143

    $default  reduce using rule 105 (logicalPrimary)


State 221

   78 floatMathTerm: floatMathTerm MULTIPLY floatMathFactor .

    $default  reduce using rule 78 (floatMathTerm)


State 222

   79 floatMathTerm: floatMathTerm DIVIDE floatMathFactor .

    $default  reduce using rule 79 (floatMathTerm)


State 223

   86 stringExpression: stringExpression . PLUS stringExpression
   86                 | stringExpression PLUS stringExpression .

    PLUS  shift, and go to state 152

    PLUS      [reduce using rule 86 (stringExpression)]
    $default  reduce using rule 86 (stringExpression)


State 224

   89 logicalExpression: logicalExpression OR logicalTerm .
   91 logicalTerm: logicalTerm . AND logicalFactor

    AND  shift, and go to state 154

    $default  reduce using rule 89 (logicalExpression)


State 225

   91 logicalTerm: logicalTerm AND logicalFactor .

    $default  reduce using rule 91 (logicalTerm)


State 226

    7 blockStatements: blockStatements . blockStatement
  122 repeatStatement: REPEAT LEFT_CURLY_BRACE $@7 blockStatements . RIGHT_CURLY_BRACE UNTIL LEFT_PARENTHESIS logicalExpression $@8 RIGHT_PARENTHESIS

    INT                shift, and go to state 1
    CHAR               shift, and go to state 2
    FLOAT              shift, and go to state 3
    STRING             shift, and go to state 4
    CONST              shift, and go to state 5
    BOOL               shift, and go to state 6
    IF                 shift, and go to state 7
    SWITCH             shift, and go to state 8
    CONTINUE           shift, and go to state 9
    BREAK              shift, and go to state 10
    WHILE              shift, and go to state 11
    FOR                shift, and go to state 12
    RETURN             shift, and go to state 13
    REPEAT             shift, and go to state 14
    RIGHT_CURLY_BRACE  shift, and go to state 255
    ENUM               shift, and go to state 15
    PRINT              shift, and go to state 18
    COMMENT            shift, and go to state 19
    IDENTIFIER         shift, and go to state 20

    blockStatement                            go to state 99
    variableDeclarationStatement              go to state 25
    assignVariableDeclaration                 go to state 26
    noSemiColumnAssignVariableDeclaration     go to state 27
    nonAssignVariableDeclaration              go to state 28
    noSemiColumnNonAssignVariableDeclaration  go to state 29
    constDeclarationStatement                 go to state 30
    noSemiColumnConstDeclaration              go to state 31
    assignmentStatement                       go to state 32
    incStatement                              go to state 33
    decStatement                              go to state 34
    ifStatement                               go to state 35
    whileStatement                            go to state 36
    repeatStatement                           go to state 37
    forStatement                              go to state 38
    switchStatement                           go to state 39
    enumStatement                             go to state 40
    returnStatement                           go to state 42
    continueBreakStatement                    go to state 43
    printStatement                            go to state 44
    functionCallStatement                     go to state 45
    comment                                   go to state 46


State 227

  147 enumStatement: ENUM IDENTIFIER LEFT_CURLY_BRACE $@13 . enumIdentifiers RIGHT_CURLY_BRACE

    IDENTIFIER  shift, and go to state 256

    enumIdentifiers  go to state 257


State 228

  150 functionStatement: FUNCTION IDENTIFIER $@14 LEFT_PARENTHESIS . $@15 parameter RIGHT_PARENTHESIS LEFT_CURLY_BRACE blockStatements RIGHT_CURLY_BRACE

    $default  reduce using rule 149 ($@15)

    $@15  go to state 258


State 229

  174 main: MAIN $@17 LEFT_PARENTHESIS RIGHT_PARENTHESIS . LEFT_CURLY_BRACE $@18 blockStatements RIGHT_CURLY_BRACE

    LEFT_CURLY_BRACE  shift, and go to state 259


State 230

  165 printStatement: PRINT LEFT_PARENTHESIS RIGHT_PARENTHESIS ';' .

    $default  reduce using rule 165 (printStatement)


State 231

  164 printStatement: PRINT LEFT_PARENTHESIS argument RIGHT_PARENTHESIS . ';'

    ';'  shift, and go to state 260


State 232

   59 assignmentStatement: IDENTIFIER ASSIGN CHAR_LITERAL ';' .

    $default  reduce using rule 59 (assignmentStatement)


State 233

   55 assignmentStatement: IDENTIFIER ASSIGN intMathExpression ';' .

    $default  reduce using rule 55 (assignmentStatement)


State 234

   56 assignmentStatement: IDENTIFIER ASSIGN floatMathExpression ';' .

    $default  reduce using rule 56 (assignmentStatement)


State 235

   57 assignmentStatement: IDENTIFIER ASSIGN stringExpression ';' .

    $default  reduce using rule 57 (assignmentStatement)


State 236

   58 assignmentStatement: IDENTIFIER ASSIGN logicalExpression ';' .

    $default  reduce using rule 58 (assignmentStatement)


State 237

  167 functionCallStatement: IDENTIFIER $@16 LEFT_PARENTHESIS argument . RIGHT_PARENTHESIS ';'

    RIGHT_PARENTHESIS  shift, and go to state 261


State 238

   62 intMathExpression: intMathExpression . PLUS intMathTerm
   63                  | intMathExpression . MINUS intMathTerm
   74 intMathPrimary: LEFT_PARENTHESIS intMathExpression . RIGHT_PARENTHESIS

    PLUS               shift, and go to state 131
    MINUS              shift, and go to state 132
    RIGHT_PARENTHESIS  shift, and go to state 197


State 239

   75 floatMathExpression: floatMathExpression . PLUS floatMathTerm
   76                    | floatMathExpression . MINUS floatMathTerm
   83 floatMathFactor: LEFT_PARENTHESIS floatMathExpression . RIGHT_PARENTHESIS

    PLUS               shift, and go to state 142
    MINUS              shift, and go to state 143
    RIGHT_PARENTHESIS  shift, and go to state 198


State 240

   51 noSemiColumnConstDeclaration: CONST INT IDENTIFIER ASSIGN intMathExpression .
   62 intMathExpression: intMathExpression . PLUS intMathTerm
   63                  | intMathExpression . MINUS intMathTerm

    PLUS   shift, and go to state 131
    MINUS  shift, and go to state 132

    $default  reduce using rule 51 (noSemiColumnConstDeclaration)


State 241

   50 noSemiColumnConstDeclaration: CONST CHAR IDENTIFIER ASSIGN CHAR_LITERAL .

    $default  reduce using rule 50 (noSemiColumnConstDeclaration)


State 242

   52 noSemiColumnConstDeclaration: CONST FLOAT IDENTIFIER ASSIGN floatMathExpression .
   75 floatMathExpression: floatMathExpression . PLUS floatMathTerm
   76                    | floatMathExpression . MINUS floatMathTerm

    PLUS   shift, and go to state 142
    MINUS  shift, and go to state 143

    $default  reduce using rule 52 (noSemiColumnConstDeclaration)


State 243

   53 noSemiColumnConstDeclaration: CONST STRING IDENTIFIER ASSIGN stringExpression .
   86 stringExpression: stringExpression . PLUS stringExpression

    PLUS  shift, and go to state 152

    $default  reduce using rule 53 (noSemiColumnConstDeclaration)


State 244

   54 noSemiColumnConstDeclaration: CONST BOOL IDENTIFIER ASSIGN logicalExpression .
   89 logicalExpression: logicalExpression . OR logicalTerm

    OR  shift, and go to state 153

    $default  reduce using rule 54 (noSemiColumnConstDeclaration)


State 245

  112 ifStatement: IF LEFT_PARENTHESIS logicalExpression $@1 RIGHT_PARENTHESIS . LEFT_CURLY_BRACE $@2 blockStatements RIGHT_CURLY_BRACE $@3 elsePart

    LEFT_CURLY_BRACE  shift, and go to state 262


State 246

  138 switchStatement: SWITCH LEFT_PARENTHESIS IDENTIFIER $@10 RIGHT_PARENTHESIS . LEFT_CURLY_BRACE $@11 caseList RIGHT_CURLY_BRACE

    LEFT_CURLY_BRACE  shift, and go to state 263


State 247

  119 whileStatement: WHILE LEFT_PARENTHESIS logicalExpression $@5 RIGHT_PARENTHESIS . LEFT_CURLY_BRACE $@6 blockStatements RIGHT_CURLY_BRACE

    LEFT_CURLY_BRACE  shift, and go to state 264


State 248

   39 noSemiColumnAssignVariableDeclaration: INT IDENTIFIER . ASSIGN intMathExpression

    ASSIGN  shift, and go to state 103


State 249

   38 noSemiColumnAssignVariableDeclaration: CHAR IDENTIFIER . ASSIGN CHAR_LITERAL

    ASSIGN  shift, and go to state 104


State 250

   40 noSemiColumnAssignVariableDeclaration: FLOAT IDENTIFIER . ASSIGN floatMathExpression

    ASSIGN  shift, and go to state 105


State 251

   41 noSemiColumnAssignVariableDeclaration: STRING IDENTIFIER . ASSIGN stringExpression

    ASSIGN  shift, and go to state 106


State 252

   42 noSemiColumnAssignVariableDeclaration: BOOL IDENTIFIER . ASSIGN logicalExpression

    ASSIGN  shift, and go to state 112


State 253

  129 forDeclaration: IDENTIFIER ASSIGN . intMathExpression ';'
  130               | IDENTIFIER ASSIGN . floatMathExpression ';'
  131               | IDENTIFIER ASSIGN . stringExpression ';'
  132               | IDENTIFIER ASSIGN . BOOL_LITERAL ';'

    LEFT_PARENTHESIS  shift, and go to state 265
    IDENTIFIER        shift, and go to state 266
    DIGIT             shift, and go to state 69
    FLOAT_LITERAL     shift, and go to state 70
    STRING_LITERAL    shift, and go to state 71
    BOOL_LITERAL      shift, and go to state 267

    intMathExpression    go to state 268
    intMathTerm          go to state 76
    intMathFactor        go to state 77
    intMathPrimary       go to state 78
    floatMathExpression  go to state 269
    floatMathTerm        go to state 80
    floatMathFactor      go to state 81
    stringExpression     go to state 270


State 254

   89 logicalExpression: logicalExpression . OR logicalTerm
  135 forStatement: FOR LEFT_PARENTHESIS $@9 forDeclaration logicalExpression . ';' forAssignment RIGHT_PARENTHESIS LEFT_CURLY_BRACE blockStatements RIGHT_CURLY_BRACE

    OR   shift, and go to state 153
    ';'  shift, and go to state 271


State 255

  122 repeatStatement: REPEAT LEFT_CURLY_BRACE $@7 blockStatements RIGHT_CURLY_BRACE . UNTIL LEFT_PARENTHESIS logicalExpression $@8 RIGHT_PARENTHESIS

    UNTIL  shift, and go to state 272


State 256

  144 enumIdentifiers: IDENTIFIER . ',' enumIdentifiers
  145                | IDENTIFIER .

    ','  shift, and go to state 273

    $default  reduce using rule 145 (enumIdentifiers)


State 257

  147 enumStatement: ENUM IDENTIFIER LEFT_CURLY_BRACE $@13 enumIdentifiers . RIGHT_CURLY_BRACE

    RIGHT_CURLY_BRACE  shift, and go to state 274


State 258

  150 functionStatement: FUNCTION IDENTIFIER $@14 LEFT_PARENTHESIS $@15 . parameter RIGHT_PARENTHESIS LEFT_CURLY_BRACE blockStatements RIGHT_CURLY_BRACE

    INT     shift, and go to state 1
    CHAR    shift, and go to state 2
    FLOAT   shift, and go to state 3
    STRING  shift, and go to state 4
    CONST   shift, and go to state 5
    BOOL    shift, and go to state 6

    $default  reduce using rule 155 (parameter)

    noSemiColumnVariableDeclarationStatement  go to state 275
    noSemiColumnAssignVariableDeclaration     go to state 276
    noSemiColumnNonAssignVariableDeclaration  go to state 277
    noSemiColumnConstDeclaration              go to state 278
    parameter                                 go to state 279


State 259

  174 main: MAIN $@17 LEFT_PARENTHESIS RIGHT_PARENTHESIS LEFT_CURLY_BRACE . $@18 blockStatements RIGHT_CURLY_BRACE

    $default  reduce using rule 173 ($@18)

    $@18  go to state 280


State 260

  164 printStatement: PRINT LEFT_PARENTHESIS argument RIGHT_PARENTHESIS ';' .

    $default  reduce using rule 164 (printStatement)


State 261

  167 functionCallStatement: IDENTIFIER $@16 LEFT_PARENTHESIS argument RIGHT_PARENTHESIS . ';'

    ';'  shift, and go to state 281


State 262

  112 ifStatement: IF LEFT_PARENTHESIS logicalExpression $@1 RIGHT_PARENTHESIS LEFT_CURLY_BRACE . $@2 blockStatements RIGHT_CURLY_BRACE $@3 elsePart

    $default  reduce using rule 110 ($@2)

    $@2  go to state 282


State 263

  138 switchStatement: SWITCH LEFT_PARENTHESIS IDENTIFIER $@10 RIGHT_PARENTHESIS LEFT_CURLY_BRACE . $@11 caseList RIGHT_CURLY_BRACE

    $default  reduce using rule 137 ($@11)

    $@11  go to state 283


State 264

  119 whileStatement: WHILE LEFT_PARENTHESIS logicalExpression $@5 RIGHT_PARENTHESIS LEFT_CURLY_BRACE . $@6 blockStatements RIGHT_CURLY_BRACE

    $default  reduce using rule 118 ($@6)

    $@6  go to state 284


State 265

   74 intMathPrimary: LEFT_PARENTHESIS . intMathExpression RIGHT_PARENTHESIS
   83 floatMathFactor: LEFT_PARENTHESIS . floatMathExpression RIGHT_PARENTHESIS
   87 stringExpression: LEFT_PARENTHESIS . stringExpression RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 265
    IDENTIFIER        shift, and go to state 266
    DIGIT             shift, and go to state 69
    FLOAT_LITERAL     shift, and go to state 70
    STRING_LITERAL    shift, and go to state 71

    intMathExpression    go to state 238
    intMathTerm          go to state 76
    intMathFactor        go to state 77
    intMathPrimary       go to state 78
    floatMathExpression  go to state 239
    floatMathTerm        go to state 80
    floatMathFactor      go to state 81
    stringExpression     go to state 126


State 266

   70 intMathFactor: IDENTIFIER . INCREMENT
   71              | IDENTIFIER . DECREMENT
   72 intMathPrimary: IDENTIFIER .
   81 floatMathFactor: IDENTIFIER .
   85 stringExpression: IDENTIFIER .

    INCREMENT  shift, and go to state 128
    DECREMENT  shift, and go to state 129

    PLUS               reduce using rule 72 (intMathPrimary)
    PLUS               [reduce using rule 81 (floatMathFactor)]
    PLUS               [reduce using rule 85 (stringExpression)]
    MINUS              reduce using rule 72 (intMathPrimary)
    MINUS              [reduce using rule 81 (floatMathFactor)]
    MULTIPLY           reduce using rule 72 (intMathPrimary)
    MULTIPLY           [reduce using rule 81 (floatMathFactor)]
    DIVIDE             reduce using rule 72 (intMathPrimary)
    DIVIDE             [reduce using rule 81 (floatMathFactor)]
    RIGHT_PARENTHESIS  reduce using rule 72 (intMathPrimary)
    RIGHT_PARENTHESIS  [reduce using rule 81 (floatMathFactor)]
    RIGHT_PARENTHESIS  [reduce using rule 85 (stringExpression)]
    ';'                reduce using rule 72 (intMathPrimary)
    ';'                [reduce using rule 81 (floatMathFactor)]
    ';'                [reduce using rule 85 (stringExpression)]
    $default           reduce using rule 72 (intMathPrimary)


State 267

  132 forDeclaration: IDENTIFIER ASSIGN BOOL_LITERAL . ';'

    ';'  shift, and go to state 285


State 268

   62 intMathExpression: intMathExpression . PLUS intMathTerm
   63                  | intMathExpression . MINUS intMathTerm
  129 forDeclaration: IDENTIFIER ASSIGN intMathExpression . ';'

    PLUS   shift, and go to state 131
    MINUS  shift, and go to state 132
    ';'    shift, and go to state 286


State 269

   75 floatMathExpression: floatMathExpression . PLUS floatMathTerm
   76                    | floatMathExpression . MINUS floatMathTerm
  130 forDeclaration: IDENTIFIER ASSIGN floatMathExpression . ';'

    PLUS   shift, and go to state 142
    MINUS  shift, and go to state 143
    ';'    shift, and go to state 287


State 270

   86 stringExpression: stringExpression . PLUS stringExpression
  131 forDeclaration: IDENTIFIER ASSIGN stringExpression . ';'

    PLUS  shift, and go to state 152
    ';'   shift, and go to state 288


State 271

  135 forStatement: FOR LEFT_PARENTHESIS $@9 forDeclaration logicalExpression ';' . forAssignment RIGHT_PARENTHESIS LEFT_CURLY_BRACE blockStatements RIGHT_CURLY_BRACE

    IDENTIFIER  shift, and go to state 289

    forAssignment  go to state 290


State 272

  122 repeatStatement: REPEAT LEFT_CURLY_BRACE $@7 blockStatements RIGHT_CURLY_BRACE UNTIL . LEFT_PARENTHESIS logicalExpression $@8 RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 291


State 273

  144 enumIdentifiers: IDENTIFIER ',' . enumIdentifiers

    IDENTIFIER  shift, and go to state 256

    enumIdentifiers  go to state 292


State 274

  147 enumStatement: ENUM IDENTIFIER LEFT_CURLY_BRACE $@13 enumIdentifiers RIGHT_CURLY_BRACE .

    $default  reduce using rule 147 (enumStatement)


State 275

  151 parameter: noSemiColumnVariableDeclarationStatement . ',' parameter
  152          | noSemiColumnVariableDeclarationStatement .

    ','  shift, and go to state 293

    $default  reduce using rule 152 (parameter)


State 276

   35 noSemiColumnVariableDeclarationStatement: noSemiColumnAssignVariableDeclaration .

    $default  reduce using rule 35 (noSemiColumnVariableDeclarationStatement)


State 277

   36 noSemiColumnVariableDeclarationStatement: noSemiColumnNonAssignVariableDeclaration .

    $default  reduce using rule 36 (noSemiColumnVariableDeclarationStatement)


State 278

  153 parameter: noSemiColumnConstDeclaration . ',' parameter
  154          | noSemiColumnConstDeclaration .

    ','  shift, and go to state 294

    $default  reduce using rule 154 (parameter)


State 279

  150 functionStatement: FUNCTION IDENTIFIER $@14 LEFT_PARENTHESIS $@15 parameter . RIGHT_PARENTHESIS LEFT_CURLY_BRACE blockStatements RIGHT_CURLY_BRACE

    RIGHT_PARENTHESIS  shift, and go to state 295


State 280

  174 main: MAIN $@17 LEFT_PARENTHESIS RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@18 . blockStatements RIGHT_CURLY_BRACE

    INT         shift, and go to state 1
    CHAR        shift, and go to state 2
    FLOAT       shift, and go to state 3
    STRING      shift, and go to state 4
    CONST       shift, and go to state 5
    BOOL        shift, and go to state 6
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    CONTINUE    shift, and go to state 9
    BREAK       shift, and go to state 10
    WHILE       shift, and go to state 11
    FOR         shift, and go to state 12
    RETURN      shift, and go to state 13
    REPEAT      shift, and go to state 14
    ENUM        shift, and go to state 15
    PRINT       shift, and go to state 18
    COMMENT     shift, and go to state 19
    IDENTIFIER  shift, and go to state 20

    blockStatements                           go to state 296
    blockStatement                            go to state 24
    variableDeclarationStatement              go to state 25
    assignVariableDeclaration                 go to state 26
    noSemiColumnAssignVariableDeclaration     go to state 27
    nonAssignVariableDeclaration              go to state 28
    noSemiColumnNonAssignVariableDeclaration  go to state 29
    constDeclarationStatement                 go to state 30
    noSemiColumnConstDeclaration              go to state 31
    assignmentStatement                       go to state 32
    incStatement                              go to state 33
    decStatement                              go to state 34
    ifStatement                               go to state 35
    whileStatement                            go to state 36
    repeatStatement                           go to state 37
    forStatement                              go to state 38
    switchStatement                           go to state 39
    enumStatement                             go to state 40
    returnStatement                           go to state 42
    continueBreakStatement                    go to state 43
    printStatement                            go to state 44
    functionCallStatement                     go to state 45
    comment                                   go to state 46


State 281

  167 functionCallStatement: IDENTIFIER $@16 LEFT_PARENTHESIS argument RIGHT_PARENTHESIS ';' .

    $default  reduce using rule 167 (functionCallStatement)


State 282

  112 ifStatement: IF LEFT_PARENTHESIS logicalExpression $@1 RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@2 . blockStatements RIGHT_CURLY_BRACE $@3 elsePart

    INT         shift, and go to state 1
    CHAR        shift, and go to state 2
    FLOAT       shift, and go to state 3
    STRING      shift, and go to state 4
    CONST       shift, and go to state 5
    BOOL        shift, and go to state 6
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    CONTINUE    shift, and go to state 9
    BREAK       shift, and go to state 10
    WHILE       shift, and go to state 11
    FOR         shift, and go to state 12
    RETURN      shift, and go to state 13
    REPEAT      shift, and go to state 14
    ENUM        shift, and go to state 15
    PRINT       shift, and go to state 18
    COMMENT     shift, and go to state 19
    IDENTIFIER  shift, and go to state 20

    blockStatements                           go to state 297
    blockStatement                            go to state 24
    variableDeclarationStatement              go to state 25
    assignVariableDeclaration                 go to state 26
    noSemiColumnAssignVariableDeclaration     go to state 27
    nonAssignVariableDeclaration              go to state 28
    noSemiColumnNonAssignVariableDeclaration  go to state 29
    constDeclarationStatement                 go to state 30
    noSemiColumnConstDeclaration              go to state 31
    assignmentStatement                       go to state 32
    incStatement                              go to state 33
    decStatement                              go to state 34
    ifStatement                               go to state 35
    whileStatement                            go to state 36
    repeatStatement                           go to state 37
    forStatement                              go to state 38
    switchStatement                           go to state 39
    enumStatement                             go to state 40
    returnStatement                           go to state 42
    continueBreakStatement                    go to state 43
    printStatement                            go to state 44
    functionCallStatement                     go to state 45
    comment                                   go to state 46


State 283

  138 switchStatement: SWITCH LEFT_PARENTHESIS IDENTIFIER $@10 RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@11 . caseList RIGHT_CURLY_BRACE

    CASE     shift, and go to state 298
    DEFAULT  shift, and go to state 299

    $default  reduce using rule 141 (caseList)

    caseList       go to state 300
    caseStatement  go to state 301


State 284

  119 whileStatement: WHILE LEFT_PARENTHESIS logicalExpression $@5 RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@6 . blockStatements RIGHT_CURLY_BRACE

    INT         shift, and go to state 1
    CHAR        shift, and go to state 2
    FLOAT       shift, and go to state 3
    STRING      shift, and go to state 4
    CONST       shift, and go to state 5
    BOOL        shift, and go to state 6
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    CONTINUE    shift, and go to state 9
    BREAK       shift, and go to state 10
    WHILE       shift, and go to state 11
    FOR         shift, and go to state 12
    RETURN      shift, and go to state 13
    REPEAT      shift, and go to state 14
    ENUM        shift, and go to state 15
    PRINT       shift, and go to state 18
    COMMENT     shift, and go to state 19
    IDENTIFIER  shift, and go to state 20

    blockStatements                           go to state 302
    blockStatement                            go to state 24
    variableDeclarationStatement              go to state 25
    assignVariableDeclaration                 go to state 26
    noSemiColumnAssignVariableDeclaration     go to state 27
    nonAssignVariableDeclaration              go to state 28
    noSemiColumnNonAssignVariableDeclaration  go to state 29
    constDeclarationStatement                 go to state 30
    noSemiColumnConstDeclaration              go to state 31
    assignmentStatement                       go to state 32
    incStatement                              go to state 33
    decStatement                              go to state 34
    ifStatement                               go to state 35
    whileStatement                            go to state 36
    repeatStatement                           go to state 37
    forStatement                              go to state 38
    switchStatement                           go to state 39
    enumStatement                             go to state 40
    returnStatement                           go to state 42
    continueBreakStatement                    go to state 43
    printStatement                            go to state 44
    functionCallStatement                     go to state 45
    comment                                   go to state 46


State 285

  132 forDeclaration: IDENTIFIER ASSIGN BOOL_LITERAL ';' .

    $default  reduce using rule 132 (forDeclaration)


State 286

  129 forDeclaration: IDENTIFIER ASSIGN intMathExpression ';' .

    $default  reduce using rule 129 (forDeclaration)


State 287

  130 forDeclaration: IDENTIFIER ASSIGN floatMathExpression ';' .

    $default  reduce using rule 130 (forDeclaration)


State 288

  131 forDeclaration: IDENTIFIER ASSIGN stringExpression ';' .

    $default  reduce using rule 131 (forDeclaration)


State 289

  123 forAssignment: IDENTIFIER . ASSIGN intMathExpression
  124              | IDENTIFIER . ASSIGN floatMathExpression
  125              | IDENTIFIER . ASSIGN stringExpression
  126              | IDENTIFIER . ASSIGN BOOL_LITERAL
  127              | IDENTIFIER . INCREMENT
  128              | IDENTIFIER . DECREMENT

    INCREMENT  shift, and go to state 303
    DECREMENT  shift, and go to state 304
    ASSIGN     shift, and go to state 305


State 290

  135 forStatement: FOR LEFT_PARENTHESIS $@9 forDeclaration logicalExpression ';' forAssignment . RIGHT_PARENTHESIS LEFT_CURLY_BRACE blockStatements RIGHT_CURLY_BRACE

    RIGHT_PARENTHESIS  shift, and go to state 306


State 291

  122 repeatStatement: REPEAT LEFT_CURLY_BRACE $@7 blockStatements RIGHT_CURLY_BRACE UNTIL LEFT_PARENTHESIS . logicalExpression $@8 RIGHT_PARENTHESIS

    NOT               shift, and go to state 66
    LEFT_PARENTHESIS  shift, and go to state 113
    IDENTIFIER        shift, and go to state 114
    DIGIT             shift, and go to state 69
    FLOAT_LITERAL     shift, and go to state 70
    BOOL_LITERAL      shift, and go to state 72

    intMathExpression    go to state 115
    intMathTerm          go to state 76
    intMathFactor        go to state 77
    intMathPrimary       go to state 78
    floatMathExpression  go to state 116
    floatMathTerm        go to state 80
    floatMathFactor      go to state 81
    logicalExpression    go to state 307
    logicalTerm          go to state 84
    logicalFactor        go to state 85
    logicalPrimary       go to state 86


State 292

  144 enumIdentifiers: IDENTIFIER ',' enumIdentifiers .

    $default  reduce using rule 144 (enumIdentifiers)


State 293

  151 parameter: noSemiColumnVariableDeclarationStatement ',' . parameter

    INT     shift, and go to state 1
    CHAR    shift, and go to state 2
    FLOAT   shift, and go to state 3
    STRING  shift, and go to state 4
    CONST   shift, and go to state 5
    BOOL    shift, and go to state 6

    $default  reduce using rule 155 (parameter)

    noSemiColumnVariableDeclarationStatement  go to state 275
    noSemiColumnAssignVariableDeclaration     go to state 276
    noSemiColumnNonAssignVariableDeclaration  go to state 277
    noSemiColumnConstDeclaration              go to state 278
    parameter                                 go to state 308


State 294

  153 parameter: noSemiColumnConstDeclaration ',' . parameter

    INT     shift, and go to state 1
    CHAR    shift, and go to state 2
    FLOAT   shift, and go to state 3
    STRING  shift, and go to state 4
    CONST   shift, and go to state 5
    BOOL    shift, and go to state 6

    $default  reduce using rule 155 (parameter)

    noSemiColumnVariableDeclarationStatement  go to state 275
    noSemiColumnAssignVariableDeclaration     go to state 276
    noSemiColumnNonAssignVariableDeclaration  go to state 277
    noSemiColumnConstDeclaration              go to state 278
    parameter                                 go to state 309


State 295

  150 functionStatement: FUNCTION IDENTIFIER $@14 LEFT_PARENTHESIS $@15 parameter RIGHT_PARENTHESIS . LEFT_CURLY_BRACE blockStatements RIGHT_CURLY_BRACE

    LEFT_CURLY_BRACE  shift, and go to state 310


State 296

    7 blockStatements: blockStatements . blockStatement
  174 main: MAIN $@17 LEFT_PARENTHESIS RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@18 blockStatements . RIGHT_CURLY_BRACE

    INT                shift, and go to state 1
    CHAR               shift, and go to state 2
    FLOAT              shift, and go to state 3
    STRING             shift, and go to state 4
    CONST              shift, and go to state 5
    BOOL               shift, and go to state 6
    IF                 shift, and go to state 7
    SWITCH             shift, and go to state 8
    CONTINUE           shift, and go to state 9
    BREAK              shift, and go to state 10
    WHILE              shift, and go to state 11
    FOR                shift, and go to state 12
    RETURN             shift, and go to state 13
    REPEAT             shift, and go to state 14
    RIGHT_CURLY_BRACE  shift, and go to state 311
    ENUM               shift, and go to state 15
    PRINT              shift, and go to state 18
    COMMENT            shift, and go to state 19
    IDENTIFIER         shift, and go to state 20

    blockStatement                            go to state 99
    variableDeclarationStatement              go to state 25
    assignVariableDeclaration                 go to state 26
    noSemiColumnAssignVariableDeclaration     go to state 27
    nonAssignVariableDeclaration              go to state 28
    noSemiColumnNonAssignVariableDeclaration  go to state 29
    constDeclarationStatement                 go to state 30
    noSemiColumnConstDeclaration              go to state 31
    assignmentStatement                       go to state 32
    incStatement                              go to state 33
    decStatement                              go to state 34
    ifStatement                               go to state 35
    whileStatement                            go to state 36
    repeatStatement                           go to state 37
    forStatement                              go to state 38
    switchStatement                           go to state 39
    enumStatement                             go to state 40
    returnStatement                           go to state 42
    continueBreakStatement                    go to state 43
    printStatement                            go to state 44
    functionCallStatement                     go to state 45
    comment                                   go to state 46


State 297

    7 blockStatements: blockStatements . blockStatement
  112 ifStatement: IF LEFT_PARENTHESIS logicalExpression $@1 RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@2 blockStatements . RIGHT_CURLY_BRACE $@3 elsePart

    INT                shift, and go to state 1
    CHAR               shift, and go to state 2
    FLOAT              shift, and go to state 3
    STRING             shift, and go to state 4
    CONST              shift, and go to state 5
    BOOL               shift, and go to state 6
    IF                 shift, and go to state 7
    SWITCH             shift, and go to state 8
    CONTINUE           shift, and go to state 9
    BREAK              shift, and go to state 10
    WHILE              shift, and go to state 11
    FOR                shift, and go to state 12
    RETURN             shift, and go to state 13
    REPEAT             shift, and go to state 14
    RIGHT_CURLY_BRACE  shift, and go to state 312
    ENUM               shift, and go to state 15
    PRINT              shift, and go to state 18
    COMMENT            shift, and go to state 19
    IDENTIFIER         shift, and go to state 20

    blockStatement                            go to state 99
    variableDeclarationStatement              go to state 25
    assignVariableDeclaration                 go to state 26
    noSemiColumnAssignVariableDeclaration     go to state 27
    nonAssignVariableDeclaration              go to state 28
    noSemiColumnNonAssignVariableDeclaration  go to state 29
    constDeclarationStatement                 go to state 30
    noSemiColumnConstDeclaration              go to state 31
    assignmentStatement                       go to state 32
    incStatement                              go to state 33
    decStatement                              go to state 34
    ifStatement                               go to state 35
    whileStatement                            go to state 36
    repeatStatement                           go to state 37
    forStatement                              go to state 38
    switchStatement                           go to state 39
    enumStatement                             go to state 40
    returnStatement                           go to state 42
    continueBreakStatement                    go to state 43
    printStatement                            go to state 44
    functionCallStatement                     go to state 45
    comment                                   go to state 46


State 298

  143 caseStatement: CASE . values $@12 ':' blockStatements BREAK ';'

    DIGIT           shift, and go to state 313
    FLOAT_LITERAL   shift, and go to state 314
    STRING_LITERAL  shift, and go to state 315
    CHAR_LITERAL    shift, and go to state 316
    BOOL_LITERAL    shift, and go to state 317

    values  go to state 318


State 299

  140 caseList: DEFAULT . ':' blockStatements BREAK ';'

    ':'  shift, and go to state 319


State 300

  138 switchStatement: SWITCH LEFT_PARENTHESIS IDENTIFIER $@10 RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@11 caseList . RIGHT_CURLY_BRACE

    RIGHT_CURLY_BRACE  shift, and go to state 320


State 301

  139 caseList: caseStatement . caseList

    CASE     shift, and go to state 298
    DEFAULT  shift, and go to state 299

    $default  reduce using rule 141 (caseList)

    caseList       go to state 321
    caseStatement  go to state 301


State 302

    7 blockStatements: blockStatements . blockStatement
  119 whileStatement: WHILE LEFT_PARENTHESIS logicalExpression $@5 RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@6 blockStatements . RIGHT_CURLY_BRACE

    INT                shift, and go to state 1
    CHAR               shift, and go to state 2
    FLOAT              shift, and go to state 3
    STRING             shift, and go to state 4
    CONST              shift, and go to state 5
    BOOL               shift, and go to state 6
    IF                 shift, and go to state 7
    SWITCH             shift, and go to state 8
    CONTINUE           shift, and go to state 9
    BREAK              shift, and go to state 10
    WHILE              shift, and go to state 11
    FOR                shift, and go to state 12
    RETURN             shift, and go to state 13
    REPEAT             shift, and go to state 14
    RIGHT_CURLY_BRACE  shift, and go to state 322
    ENUM               shift, and go to state 15
    PRINT              shift, and go to state 18
    COMMENT            shift, and go to state 19
    IDENTIFIER         shift, and go to state 20

    blockStatement                            go to state 99
    variableDeclarationStatement              go to state 25
    assignVariableDeclaration                 go to state 26
    noSemiColumnAssignVariableDeclaration     go to state 27
    nonAssignVariableDeclaration              go to state 28
    noSemiColumnNonAssignVariableDeclaration  go to state 29
    constDeclarationStatement                 go to state 30
    noSemiColumnConstDeclaration              go to state 31
    assignmentStatement                       go to state 32
    incStatement                              go to state 33
    decStatement                              go to state 34
    ifStatement                               go to state 35
    whileStatement                            go to state 36
    repeatStatement                           go to state 37
    forStatement                              go to state 38
    switchStatement                           go to state 39
    enumStatement                             go to state 40
    returnStatement                           go to state 42
    continueBreakStatement                    go to state 43
    printStatement                            go to state 44
    functionCallStatement                     go to state 45
    comment                                   go to state 46


State 303

  127 forAssignment: IDENTIFIER INCREMENT .

    $default  reduce using rule 127 (forAssignment)


State 304

  128 forAssignment: IDENTIFIER DECREMENT .

    $default  reduce using rule 128 (forAssignment)


State 305

  123 forAssignment: IDENTIFIER ASSIGN . intMathExpression
  124              | IDENTIFIER ASSIGN . floatMathExpression
  125              | IDENTIFIER ASSIGN . stringExpression
  126              | IDENTIFIER ASSIGN . BOOL_LITERAL

    LEFT_PARENTHESIS  shift, and go to state 265
    IDENTIFIER        shift, and go to state 266
    DIGIT             shift, and go to state 69
    FLOAT_LITERAL     shift, and go to state 70
    STRING_LITERAL    shift, and go to state 71
    BOOL_LITERAL      shift, and go to state 323

    intMathExpression    go to state 324
    intMathTerm          go to state 76
    intMathFactor        go to state 77
    intMathPrimary       go to state 78
    floatMathExpression  go to state 325
    floatMathTerm        go to state 80
    floatMathFactor      go to state 81
    stringExpression     go to state 326


State 306

  135 forStatement: FOR LEFT_PARENTHESIS $@9 forDeclaration logicalExpression ';' forAssignment RIGHT_PARENTHESIS . LEFT_CURLY_BRACE blockStatements RIGHT_CURLY_BRACE

    LEFT_CURLY_BRACE  shift, and go to state 327


State 307

   89 logicalExpression: logicalExpression . OR logicalTerm
  122 repeatStatement: REPEAT LEFT_CURLY_BRACE $@7 blockStatements RIGHT_CURLY_BRACE UNTIL LEFT_PARENTHESIS logicalExpression . $@8 RIGHT_PARENTHESIS

    OR  shift, and go to state 153

    $default  reduce using rule 121 ($@8)

    $@8  go to state 328


State 308

  151 parameter: noSemiColumnVariableDeclarationStatement ',' parameter .

    $default  reduce using rule 151 (parameter)


State 309

  153 parameter: noSemiColumnConstDeclaration ',' parameter .

    $default  reduce using rule 153 (parameter)


State 310

  150 functionStatement: FUNCTION IDENTIFIER $@14 LEFT_PARENTHESIS $@15 parameter RIGHT_PARENTHESIS LEFT_CURLY_BRACE . blockStatements RIGHT_CURLY_BRACE

    INT         shift, and go to state 1
    CHAR        shift, and go to state 2
    FLOAT       shift, and go to state 3
    STRING      shift, and go to state 4
    CONST       shift, and go to state 5
    BOOL        shift, and go to state 6
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    CONTINUE    shift, and go to state 9
    BREAK       shift, and go to state 10
    WHILE       shift, and go to state 11
    FOR         shift, and go to state 12
    RETURN      shift, and go to state 13
    REPEAT      shift, and go to state 14
    ENUM        shift, and go to state 15
    PRINT       shift, and go to state 18
    COMMENT     shift, and go to state 19
    IDENTIFIER  shift, and go to state 20

    blockStatements                           go to state 329
    blockStatement                            go to state 24
    variableDeclarationStatement              go to state 25
    assignVariableDeclaration                 go to state 26
    noSemiColumnAssignVariableDeclaration     go to state 27
    nonAssignVariableDeclaration              go to state 28
    noSemiColumnNonAssignVariableDeclaration  go to state 29
    constDeclarationStatement                 go to state 30
    noSemiColumnConstDeclaration              go to state 31
    assignmentStatement                       go to state 32
    incStatement                              go to state 33
    decStatement                              go to state 34
    ifStatement                               go to state 35
    whileStatement                            go to state 36
    repeatStatement                           go to state 37
    forStatement                              go to state 38
    switchStatement                           go to state 39
    enumStatement                             go to state 40
    returnStatement                           go to state 42
    continueBreakStatement                    go to state 43
    printStatement                            go to state 44
    functionCallStatement                     go to state 45
    comment                                   go to state 46


State 311

  174 main: MAIN $@17 LEFT_PARENTHESIS RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@18 blockStatements RIGHT_CURLY_BRACE .

    $default  reduce using rule 174 (main)


State 312

  112 ifStatement: IF LEFT_PARENTHESIS logicalExpression $@1 RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@2 blockStatements RIGHT_CURLY_BRACE . $@3 elsePart

    $default  reduce using rule 111 ($@3)

    $@3  go to state 330


State 313

   24 values: DIGIT .

    $default  reduce using rule 24 (values)


State 314

   25 values: FLOAT_LITERAL .

    $default  reduce using rule 25 (values)


State 315

   26 values: STRING_LITERAL .

    $default  reduce using rule 26 (values)


State 316

   27 values: CHAR_LITERAL .

    $default  reduce using rule 27 (values)


State 317

   28 values: BOOL_LITERAL .

    $default  reduce using rule 28 (values)


State 318

  143 caseStatement: CASE values . $@12 ':' blockStatements BREAK ';'

    $default  reduce using rule 142 ($@12)

    $@12  go to state 331


State 319

  140 caseList: DEFAULT ':' . blockStatements BREAK ';'

    INT         shift, and go to state 1
    CHAR        shift, and go to state 2
    FLOAT       shift, and go to state 3
    STRING      shift, and go to state 4
    CONST       shift, and go to state 5
    BOOL        shift, and go to state 6
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    CONTINUE    shift, and go to state 9
    BREAK       shift, and go to state 10
    WHILE       shift, and go to state 11
    FOR         shift, and go to state 12
    RETURN      shift, and go to state 13
    REPEAT      shift, and go to state 14
    ENUM        shift, and go to state 15
    PRINT       shift, and go to state 18
    COMMENT     shift, and go to state 19
    IDENTIFIER  shift, and go to state 20

    blockStatements                           go to state 332
    blockStatement                            go to state 24
    variableDeclarationStatement              go to state 25
    assignVariableDeclaration                 go to state 26
    noSemiColumnAssignVariableDeclaration     go to state 27
    nonAssignVariableDeclaration              go to state 28
    noSemiColumnNonAssignVariableDeclaration  go to state 29
    constDeclarationStatement                 go to state 30
    noSemiColumnConstDeclaration              go to state 31
    assignmentStatement                       go to state 32
    incStatement                              go to state 33
    decStatement                              go to state 34
    ifStatement                               go to state 35
    whileStatement                            go to state 36
    repeatStatement                           go to state 37
    forStatement                              go to state 38
    switchStatement                           go to state 39
    enumStatement                             go to state 40
    returnStatement                           go to state 42
    continueBreakStatement                    go to state 43
    printStatement                            go to state 44
    functionCallStatement                     go to state 45
    comment                                   go to state 46


State 320

  138 switchStatement: SWITCH LEFT_PARENTHESIS IDENTIFIER $@10 RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@11 caseList RIGHT_CURLY_BRACE .

    $default  reduce using rule 138 (switchStatement)


State 321

  139 caseList: caseStatement caseList .

    $default  reduce using rule 139 (caseList)


State 322

  119 whileStatement: WHILE LEFT_PARENTHESIS logicalExpression $@5 RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@6 blockStatements RIGHT_CURLY_BRACE .

    $default  reduce using rule 119 (whileStatement)


State 323

  126 forAssignment: IDENTIFIER ASSIGN BOOL_LITERAL .

    $default  reduce using rule 126 (forAssignment)


State 324

   62 intMathExpression: intMathExpression . PLUS intMathTerm
   63                  | intMathExpression . MINUS intMathTerm
  123 forAssignment: IDENTIFIER ASSIGN intMathExpression .

    PLUS   shift, and go to state 131
    MINUS  shift, and go to state 132

    $default  reduce using rule 123 (forAssignment)


State 325

   75 floatMathExpression: floatMathExpression . PLUS floatMathTerm
   76                    | floatMathExpression . MINUS floatMathTerm
  124 forAssignment: IDENTIFIER ASSIGN floatMathExpression .

    PLUS   shift, and go to state 142
    MINUS  shift, and go to state 143

    $default  reduce using rule 124 (forAssignment)


State 326

   86 stringExpression: stringExpression . PLUS stringExpression
  125 forAssignment: IDENTIFIER ASSIGN stringExpression .

    PLUS  shift, and go to state 152

    $default  reduce using rule 125 (forAssignment)


State 327

  135 forStatement: FOR LEFT_PARENTHESIS $@9 forDeclaration logicalExpression ';' forAssignment RIGHT_PARENTHESIS LEFT_CURLY_BRACE . blockStatements RIGHT_CURLY_BRACE

    INT         shift, and go to state 1
    CHAR        shift, and go to state 2
    FLOAT       shift, and go to state 3
    STRING      shift, and go to state 4
    CONST       shift, and go to state 5
    BOOL        shift, and go to state 6
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    CONTINUE    shift, and go to state 9
    BREAK       shift, and go to state 10
    WHILE       shift, and go to state 11
    FOR         shift, and go to state 12
    RETURN      shift, and go to state 13
    REPEAT      shift, and go to state 14
    ENUM        shift, and go to state 15
    PRINT       shift, and go to state 18
    COMMENT     shift, and go to state 19
    IDENTIFIER  shift, and go to state 20

    blockStatements                           go to state 333
    blockStatement                            go to state 24
    variableDeclarationStatement              go to state 25
    assignVariableDeclaration                 go to state 26
    noSemiColumnAssignVariableDeclaration     go to state 27
    nonAssignVariableDeclaration              go to state 28
    noSemiColumnNonAssignVariableDeclaration  go to state 29
    constDeclarationStatement                 go to state 30
    noSemiColumnConstDeclaration              go to state 31
    assignmentStatement                       go to state 32
    incStatement                              go to state 33
    decStatement                              go to state 34
    ifStatement                               go to state 35
    whileStatement                            go to state 36
    repeatStatement                           go to state 37
    forStatement                              go to state 38
    switchStatement                           go to state 39
    enumStatement                             go to state 40
    returnStatement                           go to state 42
    continueBreakStatement                    go to state 43
    printStatement                            go to state 44
    functionCallStatement                     go to state 45
    comment                                   go to state 46


State 328

  122 repeatStatement: REPEAT LEFT_CURLY_BRACE $@7 blockStatements RIGHT_CURLY_BRACE UNTIL LEFT_PARENTHESIS logicalExpression $@8 . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 334


State 329

    7 blockStatements: blockStatements . blockStatement
  150 functionStatement: FUNCTION IDENTIFIER $@14 LEFT_PARENTHESIS $@15 parameter RIGHT_PARENTHESIS LEFT_CURLY_BRACE blockStatements . RIGHT_CURLY_BRACE

    INT                shift, and go to state 1
    CHAR               shift, and go to state 2
    FLOAT              shift, and go to state 3
    STRING             shift, and go to state 4
    CONST              shift, and go to state 5
    BOOL               shift, and go to state 6
    IF                 shift, and go to state 7
    SWITCH             shift, and go to state 8
    CONTINUE           shift, and go to state 9
    BREAK              shift, and go to state 10
    WHILE              shift, and go to state 11
    FOR                shift, and go to state 12
    RETURN             shift, and go to state 13
    REPEAT             shift, and go to state 14
    RIGHT_CURLY_BRACE  shift, and go to state 335
    ENUM               shift, and go to state 15
    PRINT              shift, and go to state 18
    COMMENT            shift, and go to state 19
    IDENTIFIER         shift, and go to state 20

    blockStatement                            go to state 99
    variableDeclarationStatement              go to state 25
    assignVariableDeclaration                 go to state 26
    noSemiColumnAssignVariableDeclaration     go to state 27
    nonAssignVariableDeclaration              go to state 28
    noSemiColumnNonAssignVariableDeclaration  go to state 29
    constDeclarationStatement                 go to state 30
    noSemiColumnConstDeclaration              go to state 31
    assignmentStatement                       go to state 32
    incStatement                              go to state 33
    decStatement                              go to state 34
    ifStatement                               go to state 35
    whileStatement                            go to state 36
    repeatStatement                           go to state 37
    forStatement                              go to state 38
    switchStatement                           go to state 39
    enumStatement                             go to state 40
    returnStatement                           go to state 42
    continueBreakStatement                    go to state 43
    printStatement                            go to state 44
    functionCallStatement                     go to state 45
    comment                                   go to state 46


State 330

  112 ifStatement: IF LEFT_PARENTHESIS logicalExpression $@1 RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@2 blockStatements RIGHT_CURLY_BRACE $@3 . elsePart

    ELSE  shift, and go to state 336

    $default  reduce using rule 116 (elsePart)

    elsePart  go to state 337


State 331

  143 caseStatement: CASE values $@12 . ':' blockStatements BREAK ';'

    ':'  shift, and go to state 338


State 332

    7 blockStatements: blockStatements . blockStatement
  140 caseList: DEFAULT ':' blockStatements . BREAK ';'

    INT         shift, and go to state 1
    CHAR        shift, and go to state 2
    FLOAT       shift, and go to state 3
    STRING      shift, and go to state 4
    CONST       shift, and go to state 5
    BOOL        shift, and go to state 6
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    CONTINUE    shift, and go to state 9
    BREAK       shift, and go to state 339
    WHILE       shift, and go to state 11
    FOR         shift, and go to state 12
    RETURN      shift, and go to state 13
    REPEAT      shift, and go to state 14
    ENUM        shift, and go to state 15
    PRINT       shift, and go to state 18
    COMMENT     shift, and go to state 19
    IDENTIFIER  shift, and go to state 20

    blockStatement                            go to state 99
    variableDeclarationStatement              go to state 25
    assignVariableDeclaration                 go to state 26
    noSemiColumnAssignVariableDeclaration     go to state 27
    nonAssignVariableDeclaration              go to state 28
    noSemiColumnNonAssignVariableDeclaration  go to state 29
    constDeclarationStatement                 go to state 30
    noSemiColumnConstDeclaration              go to state 31
    assignmentStatement                       go to state 32
    incStatement                              go to state 33
    decStatement                              go to state 34
    ifStatement                               go to state 35
    whileStatement                            go to state 36
    repeatStatement                           go to state 37
    forStatement                              go to state 38
    switchStatement                           go to state 39
    enumStatement                             go to state 40
    returnStatement                           go to state 42
    continueBreakStatement                    go to state 43
    printStatement                            go to state 44
    functionCallStatement                     go to state 45
    comment                                   go to state 46


State 333

    7 blockStatements: blockStatements . blockStatement
  135 forStatement: FOR LEFT_PARENTHESIS $@9 forDeclaration logicalExpression ';' forAssignment RIGHT_PARENTHESIS LEFT_CURLY_BRACE blockStatements . RIGHT_CURLY_BRACE

    INT                shift, and go to state 1
    CHAR               shift, and go to state 2
    FLOAT              shift, and go to state 3
    STRING             shift, and go to state 4
    CONST              shift, and go to state 5
    BOOL               shift, and go to state 6
    IF                 shift, and go to state 7
    SWITCH             shift, and go to state 8
    CONTINUE           shift, and go to state 9
    BREAK              shift, and go to state 10
    WHILE              shift, and go to state 11
    FOR                shift, and go to state 12
    RETURN             shift, and go to state 13
    REPEAT             shift, and go to state 14
    RIGHT_CURLY_BRACE  shift, and go to state 340
    ENUM               shift, and go to state 15
    PRINT              shift, and go to state 18
    COMMENT            shift, and go to state 19
    IDENTIFIER         shift, and go to state 20

    blockStatement                            go to state 99
    variableDeclarationStatement              go to state 25
    assignVariableDeclaration                 go to state 26
    noSemiColumnAssignVariableDeclaration     go to state 27
    nonAssignVariableDeclaration              go to state 28
    noSemiColumnNonAssignVariableDeclaration  go to state 29
    constDeclarationStatement                 go to state 30
    noSemiColumnConstDeclaration              go to state 31
    assignmentStatement                       go to state 32
    incStatement                              go to state 33
    decStatement                              go to state 34
    ifStatement                               go to state 35
    whileStatement                            go to state 36
    repeatStatement                           go to state 37
    forStatement                              go to state 38
    switchStatement                           go to state 39
    enumStatement                             go to state 40
    returnStatement                           go to state 42
    continueBreakStatement                    go to state 43
    printStatement                            go to state 44
    functionCallStatement                     go to state 45
    comment                                   go to state 46


State 334

  122 repeatStatement: REPEAT LEFT_CURLY_BRACE $@7 blockStatements RIGHT_CURLY_BRACE UNTIL LEFT_PARENTHESIS logicalExpression $@8 RIGHT_PARENTHESIS .

    $default  reduce using rule 122 (repeatStatement)


State 335

  150 functionStatement: FUNCTION IDENTIFIER $@14 LEFT_PARENTHESIS $@15 parameter RIGHT_PARENTHESIS LEFT_CURLY_BRACE blockStatements RIGHT_CURLY_BRACE .

    $default  reduce using rule 150 (functionStatement)


State 336

  113 elsePart: ELSE . ifStatement
  115         | ELSE . LEFT_CURLY_BRACE $@4 blockStatements RIGHT_CURLY_BRACE

    IF                shift, and go to state 7
    LEFT_CURLY_BRACE  shift, and go to state 341

    ifStatement  go to state 342


State 337

  112 ifStatement: IF LEFT_PARENTHESIS logicalExpression $@1 RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@2 blockStatements RIGHT_CURLY_BRACE $@3 elsePart .

    $default  reduce using rule 112 (ifStatement)


State 338

  143 caseStatement: CASE values $@12 ':' . blockStatements BREAK ';'

    INT         shift, and go to state 1
    CHAR        shift, and go to state 2
    FLOAT       shift, and go to state 3
    STRING      shift, and go to state 4
    CONST       shift, and go to state 5
    BOOL        shift, and go to state 6
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    CONTINUE    shift, and go to state 9
    BREAK       shift, and go to state 10
    WHILE       shift, and go to state 11
    FOR         shift, and go to state 12
    RETURN      shift, and go to state 13
    REPEAT      shift, and go to state 14
    ENUM        shift, and go to state 15
    PRINT       shift, and go to state 18
    COMMENT     shift, and go to state 19
    IDENTIFIER  shift, and go to state 20

    blockStatements                           go to state 343
    blockStatement                            go to state 24
    variableDeclarationStatement              go to state 25
    assignVariableDeclaration                 go to state 26
    noSemiColumnAssignVariableDeclaration     go to state 27
    nonAssignVariableDeclaration              go to state 28
    noSemiColumnNonAssignVariableDeclaration  go to state 29
    constDeclarationStatement                 go to state 30
    noSemiColumnConstDeclaration              go to state 31
    assignmentStatement                       go to state 32
    incStatement                              go to state 33
    decStatement                              go to state 34
    ifStatement                               go to state 35
    whileStatement                            go to state 36
    repeatStatement                           go to state 37
    forStatement                              go to state 38
    switchStatement                           go to state 39
    enumStatement                             go to state 40
    returnStatement                           go to state 42
    continueBreakStatement                    go to state 43
    printStatement                            go to state 44
    functionCallStatement                     go to state 45
    comment                                   go to state 46


State 339

  140 caseList: DEFAULT ':' blockStatements BREAK . ';'
  158 continueBreakStatement: BREAK . ';'
  159                       | BREAK . IDENTIFIER ';'
  160                       | BREAK .

    IDENTIFIER  shift, and go to state 62
    ';'         shift, and go to state 344

    IDENTIFIER  [reduce using rule 160 (continueBreakStatement)]
    $default    reduce using rule 160 (continueBreakStatement)


State 340

  135 forStatement: FOR LEFT_PARENTHESIS $@9 forDeclaration logicalExpression ';' forAssignment RIGHT_PARENTHESIS LEFT_CURLY_BRACE blockStatements RIGHT_CURLY_BRACE .

    $default  reduce using rule 135 (forStatement)


State 341

  115 elsePart: ELSE LEFT_CURLY_BRACE . $@4 blockStatements RIGHT_CURLY_BRACE

    $default  reduce using rule 114 ($@4)

    $@4  go to state 345


State 342

  113 elsePart: ELSE ifStatement .

    $default  reduce using rule 113 (elsePart)


State 343

    7 blockStatements: blockStatements . blockStatement
  143 caseStatement: CASE values $@12 ':' blockStatements . BREAK ';'

    INT         shift, and go to state 1
    CHAR        shift, and go to state 2
    FLOAT       shift, and go to state 3
    STRING      shift, and go to state 4
    CONST       shift, and go to state 5
    BOOL        shift, and go to state 6
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    CONTINUE    shift, and go to state 9
    BREAK       shift, and go to state 346
    WHILE       shift, and go to state 11
    FOR         shift, and go to state 12
    RETURN      shift, and go to state 13
    REPEAT      shift, and go to state 14
    ENUM        shift, and go to state 15
    PRINT       shift, and go to state 18
    COMMENT     shift, and go to state 19
    IDENTIFIER  shift, and go to state 20

    blockStatement                            go to state 99
    variableDeclarationStatement              go to state 25
    assignVariableDeclaration                 go to state 26
    noSemiColumnAssignVariableDeclaration     go to state 27
    nonAssignVariableDeclaration              go to state 28
    noSemiColumnNonAssignVariableDeclaration  go to state 29
    constDeclarationStatement                 go to state 30
    noSemiColumnConstDeclaration              go to state 31
    assignmentStatement                       go to state 32
    incStatement                              go to state 33
    decStatement                              go to state 34
    ifStatement                               go to state 35
    whileStatement                            go to state 36
    repeatStatement                           go to state 37
    forStatement                              go to state 38
    switchStatement                           go to state 39
    enumStatement                             go to state 40
    returnStatement                           go to state 42
    continueBreakStatement                    go to state 43
    printStatement                            go to state 44
    functionCallStatement                     go to state 45
    comment                                   go to state 46


State 344

  140 caseList: DEFAULT ':' blockStatements BREAK ';' .
  158 continueBreakStatement: BREAK ';' .

    RIGHT_CURLY_BRACE  reduce using rule 140 (caseList)
    $default           reduce using rule 158 (continueBreakStatement)


State 345

  115 elsePart: ELSE LEFT_CURLY_BRACE $@4 . blockStatements RIGHT_CURLY_BRACE

    INT         shift, and go to state 1
    CHAR        shift, and go to state 2
    FLOAT       shift, and go to state 3
    STRING      shift, and go to state 4
    CONST       shift, and go to state 5
    BOOL        shift, and go to state 6
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    CONTINUE    shift, and go to state 9
    BREAK       shift, and go to state 10
    WHILE       shift, and go to state 11
    FOR         shift, and go to state 12
    RETURN      shift, and go to state 13
    REPEAT      shift, and go to state 14
    ENUM        shift, and go to state 15
    PRINT       shift, and go to state 18
    COMMENT     shift, and go to state 19
    IDENTIFIER  shift, and go to state 20

    blockStatements                           go to state 347
    blockStatement                            go to state 24
    variableDeclarationStatement              go to state 25
    assignVariableDeclaration                 go to state 26
    noSemiColumnAssignVariableDeclaration     go to state 27
    nonAssignVariableDeclaration              go to state 28
    noSemiColumnNonAssignVariableDeclaration  go to state 29
    constDeclarationStatement                 go to state 30
    noSemiColumnConstDeclaration              go to state 31
    assignmentStatement                       go to state 32
    incStatement                              go to state 33
    decStatement                              go to state 34
    ifStatement                               go to state 35
    whileStatement                            go to state 36
    repeatStatement                           go to state 37
    forStatement                              go to state 38
    switchStatement                           go to state 39
    enumStatement                             go to state 40
    returnStatement                           go to state 42
    continueBreakStatement                    go to state 43
    printStatement                            go to state 44
    functionCallStatement                     go to state 45
    comment                                   go to state 46


State 346

  143 caseStatement: CASE values $@12 ':' blockStatements BREAK . ';'
  158 continueBreakStatement: BREAK . ';'
  159                       | BREAK . IDENTIFIER ';'
  160                       | BREAK .

    IDENTIFIER  shift, and go to state 62
    ';'         shift, and go to state 348

    IDENTIFIER  [reduce using rule 160 (continueBreakStatement)]
    $default    reduce using rule 160 (continueBreakStatement)


State 347

    7 blockStatements: blockStatements . blockStatement
  115 elsePart: ELSE LEFT_CURLY_BRACE $@4 blockStatements . RIGHT_CURLY_BRACE

    INT                shift, and go to state 1
    CHAR               shift, and go to state 2
    FLOAT              shift, and go to state 3
    STRING             shift, and go to state 4
    CONST              shift, and go to state 5
    BOOL               shift, and go to state 6
    IF                 shift, and go to state 7
    SWITCH             shift, and go to state 8
    CONTINUE           shift, and go to state 9
    BREAK              shift, and go to state 10
    WHILE              shift, and go to state 11
    FOR                shift, and go to state 12
    RETURN             shift, and go to state 13
    REPEAT             shift, and go to state 14
    RIGHT_CURLY_BRACE  shift, and go to state 349
    ENUM               shift, and go to state 15
    PRINT              shift, and go to state 18
    COMMENT            shift, and go to state 19
    IDENTIFIER         shift, and go to state 20

    blockStatement                            go to state 99
    variableDeclarationStatement              go to state 25
    assignVariableDeclaration                 go to state 26
    noSemiColumnAssignVariableDeclaration     go to state 27
    nonAssignVariableDeclaration              go to state 28
    noSemiColumnNonAssignVariableDeclaration  go to state 29
    constDeclarationStatement                 go to state 30
    noSemiColumnConstDeclaration              go to state 31
    assignmentStatement                       go to state 32
    incStatement                              go to state 33
    decStatement                              go to state 34
    ifStatement                               go to state 35
    whileStatement                            go to state 36
    repeatStatement                           go to state 37
    forStatement                              go to state 38
    switchStatement                           go to state 39
    enumStatement                             go to state 40
    returnStatement                           go to state 42
    continueBreakStatement                    go to state 43
    printStatement                            go to state 44
    functionCallStatement                     go to state 45
    comment                                   go to state 46


State 348

  143 caseStatement: CASE values $@12 ':' blockStatements BREAK ';' .
  158 continueBreakStatement: BREAK ';' .

    CASE               reduce using rule 143 (caseStatement)
    DEFAULT            reduce using rule 143 (caseStatement)
    RIGHT_CURLY_BRACE  reduce using rule 143 (caseStatement)
    $default           reduce using rule 158 (continueBreakStatement)


State 349

  115 elsePart: ELSE LEFT_CURLY_BRACE $@4 blockStatements RIGHT_CURLY_BRACE .

    $default  reduce using rule 115 (elsePart)
