Terminals unused in grammar

    VOID
    THEN
    DO
    LEFT_SQUARE_BRACKET
    RIGHT_SQUARE_BRACKET
    SCAN


Rules useless in parser due to conflicts

  109 $@3: %empty


State 7 conflicts: 1 reduce/reduce
State 9 conflicts: 1 shift/reduce
State 10 conflicts: 1 shift/reduce
State 23 conflicts: 18 shift/reduce
State 69 conflicts: 20 reduce/reduce
State 117 conflicts: 12 reduce/reduce
State 122 conflicts: 2 shift/reduce
State 224 conflicts: 1 shift/reduce
State 225 conflicts: 2 shift/reduce
State 226 conflicts: 2 shift/reduce
State 274 conflicts: 9 reduce/reduce
State 336 conflicts: 1 shift/reduce
State 339 conflicts: 1 shift/reduce
State 343 conflicts: 1 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: statement
    2        | program statement

    3 statement: blockStatements
    4          | functionStatement
    5          | main

    6 blockStatements: blockStatement
    7                | blockStatements blockStatement

    8 blockStatement: variableDeclarationStatement
    9               | constDeclarationStatement
   10               | assignmentStatement
   11               | incStatement
   12               | decStatement
   13               | ifStatement
   14               | switchStatement
   15               | whileStatement
   16               | forStatement
   17               | repeatStatement
   18               | enumStatement
   19               | returnStatement
   20               | printStatement
   21               | continueBreakStatement
   22               | functionCallStatement
   23               | comment

   24 values: DIGIT
   25       | FLOAT_LITERAL
   26       | STRING_LITERAL
   27       | CHAR_LITERAL
   28       | BOOL_LITERAL

   29 expression: intMathExpression
   30           | floatMathExpression
   31           | stringExpression
   32           | logicalExpression

   33 variableDeclarationStatement: assignVariableDeclaration
   34                             | nonAssignVariableDeclaration

   35 noSemiColumnVariableDeclarationStatement: noSemiColumnAssignVariableDeclaration
   36                                         | noSemiColumnNonAssignVariableDeclaration

   37 assignVariableDeclaration: noSemiColumnAssignVariableDeclaration ';'

   38 noSemiColumnAssignVariableDeclaration: CHAR IDENTIFIER ASSIGN CHAR_LITERAL
   39                                      | INT IDENTIFIER ASSIGN intMathExpression
   40                                      | FLOAT IDENTIFIER ASSIGN floatMathExpression
   41                                      | STRING IDENTIFIER ASSIGN stringExpression
   42                                      | BOOL IDENTIFIER ASSIGN logicalExpression

   43 nonAssignVariableDeclaration: noSemiColumnNonAssignVariableDeclaration ';'

   44 noSemiColumnNonAssignVariableDeclaration: INT IDENTIFIER
   45                                         | CHAR IDENTIFIER
   46                                         | FLOAT IDENTIFIER
   47                                         | STRING IDENTIFIER
   48                                         | BOOL IDENTIFIER

   49 constDeclarationStatement: noSemiColumnConstDeclaration ';'

   50 noSemiColumnConstDeclaration: CONST CHAR IDENTIFIER ASSIGN CHAR_LITERAL
   51                             | CONST INT IDENTIFIER ASSIGN intMathExpression
   52                             | CONST FLOAT IDENTIFIER ASSIGN floatMathExpression
   53                             | CONST STRING IDENTIFIER ASSIGN stringExpression
   54                             | CONST BOOL IDENTIFIER ASSIGN logicalExpression

   55 assignmentStatement: IDENTIFIER ASSIGN intMathExpression ';'
   56                    | IDENTIFIER ASSIGN floatMathExpression ';'
   57                    | IDENTIFIER ASSIGN stringExpression ';'
   58                    | IDENTIFIER ASSIGN logicalExpression ';'
   59                    | IDENTIFIER ASSIGN CHAR_LITERAL ';'

   60 incStatement: IDENTIFIER INCREMENT ';'

   61 decStatement: IDENTIFIER DECREMENT ';'

   62 intMathExpression: intMathExpression PLUS intMathTerm
   63                  | intMathExpression MINUS intMathTerm
   64                  | intMathTerm

   65 intMathTerm: intMathTerm MULTIPLY intMathFactor
   66            | intMathTerm DIVIDE intMathFactor
   67            | intMathTerm MODULO intMathFactor
   68            | intMathFactor

   69 intMathFactor: intMathPrimary
   70              | IDENTIFIER INCREMENT
   71              | IDENTIFIER DECREMENT

   72 intMathPrimary: IDENTIFIER
   73               | DIGIT
   74               | LEFT_PARENTHESIS intMathExpression RIGHT_PARENTHESIS

   75 floatMathExpression: floatMathExpression PLUS floatMathTerm
   76                    | floatMathExpression MINUS floatMathTerm
   77                    | floatMathTerm

   78 floatMathTerm: floatMathTerm MULTIPLY floatMathFactor
   79              | floatMathTerm DIVIDE floatMathFactor
   80              | floatMathFactor

   81 floatMathFactor: IDENTIFIER
   82                | FLOAT_LITERAL
   83                | LEFT_PARENTHESIS floatMathExpression RIGHT_PARENTHESIS

   84 stringExpression: STRING_LITERAL
   85                 | IDENTIFIER
   86                 | stringExpression PLUS stringExpression
   87                 | LEFT_PARENTHESIS stringExpression RIGHT_PARENTHESIS

   88 logicalExpression: IDENTIFIER
   89                  | BOOL_LITERAL
   90                  | intMathExpression GREATER intMathExpression
   91                  | intMathExpression LESS intMathExpression
   92                  | intMathExpression GREATER_EQUAL intMathExpression
   93                  | intMathExpression LESS_EQUAL intMathExpression
   94                  | intMathExpression EQUAL intMathExpression
   95                  | intMathExpression NOT_EQUAL intMathExpression
   96                  | floatMathExpression GREATER floatMathExpression
   97                  | floatMathExpression LESS floatMathExpression
   98                  | floatMathExpression GREATER_EQUAL floatMathExpression
   99                  | floatMathExpression LESS_EQUAL floatMathExpression
  100                  | floatMathExpression EQUAL floatMathExpression
  101                  | floatMathExpression NOT_EQUAL floatMathExpression
  102                  | LEFT_PARENTHESIS logicalExpression RIGHT_PARENTHESIS
  103                  | logicalExpression AND logicalExpression
  104                  | logicalExpression OR logicalExpression
  105                  | NOT logicalExpression

  106 $@1: %empty

  107 $@2: %empty

  108 ifStatement: IF $@1 LEFT_PARENTHESIS logicalExpression RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@2 blockStatements RIGHT_CURLY_BRACE

  109 $@3: %empty

  110 $@4: %empty

  111 $@5: %empty

  112 $@6: %empty

  113 $@7: %empty

  114 ifStatement: IF $@3 LEFT_PARENTHESIS logicalExpression RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@4 blockStatements RIGHT_CURLY_BRACE $@5 ELSE $@6 LEFT_CURLY_BRACE $@7 blockStatements RIGHT_CURLY_BRACE

  115 $@8: %empty

  116 whileStatement: WHILE LEFT_PARENTHESIS logicalExpression RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@8 blockStatements RIGHT_CURLY_BRACE

  117 $@9: %empty

  118 repeatStatement: REPEAT LEFT_CURLY_BRACE $@9 blockStatements RIGHT_CURLY_BRACE UNTIL LEFT_PARENTHESIS logicalExpression RIGHT_PARENTHESIS

  119 forAssignment: IDENTIFIER ASSIGN intMathExpression
  120              | IDENTIFIER ASSIGN floatMathExpression
  121              | IDENTIFIER ASSIGN stringExpression
  122              | IDENTIFIER ASSIGN BOOL_LITERAL
  123              | IDENTIFIER INCREMENT
  124              | IDENTIFIER DECREMENT

  125 forDeclaration: IDENTIFIER ASSIGN intMathExpression ';'
  126               | IDENTIFIER ASSIGN floatMathExpression ';'
  127               | IDENTIFIER ASSIGN stringExpression ';'
  128               | IDENTIFIER ASSIGN BOOL_LITERAL ';'
  129               | assignVariableDeclaration

  130 $@10: %empty

  131 forStatement: FOR LEFT_PARENTHESIS $@10 forDeclaration logicalExpression ';' forAssignment RIGHT_PARENTHESIS LEFT_CURLY_BRACE blockStatements RIGHT_CURLY_BRACE

  132 $@11: %empty

  133 switchStatement: SWITCH LEFT_PARENTHESIS IDENTIFIER RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@11 caseStatement RIGHT_CURLY_BRACE

  134 caseStatement: CASE values ':' blockStatements BREAK ';' caseStatement
  135              | CASE values ':' blockStatements BREAK ';'
  136              | DEFAULT ':' blockStatements BREAK ';'
  137              | %empty

  138 enumIdentifiers: IDENTIFIER ',' enumIdentifiers
  139                | IDENTIFIER

  140 $@12: %empty

  141 enumStatement: ENUM IDENTIFIER LEFT_CURLY_BRACE $@12 enumIdentifiers RIGHT_CURLY_BRACE

  142 $@13: %empty

  143 functionStatement: FUNCTION IDENTIFIER LEFT_PARENTHESIS $@13 parameter RIGHT_PARENTHESIS LEFT_CURLY_BRACE blockStatements RIGHT_CURLY_BRACE

  144 parameter: noSemiColumnVariableDeclarationStatement ',' parameter
  145          | noSemiColumnVariableDeclarationStatement
  146          | noSemiColumnConstDeclaration ',' parameter
  147          | noSemiColumnConstDeclaration
  148          | %empty

  149 returnStatement: RETURN argument ';'
  150                | RETURN ';'

  151 continueBreakStatement: BREAK ';'
  152                       | BREAK IDENTIFIER ';'
  153                       | BREAK
  154                       | CONTINUE ';'
  155                       | CONTINUE IDENTIFIER ';'
  156                       | CONTINUE

  157 printStatement: PRINT LEFT_PARENTHESIS argument RIGHT_PARENTHESIS ';'
  158               | PRINT LEFT_PARENTHESIS RIGHT_PARENTHESIS ';'

  159 functionCallStatement: IDENTIFIER LEFT_PARENTHESIS argument RIGHT_PARENTHESIS ';'
  160                      | IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS ';'

  161 argument: expression ',' argument
  162         | expression

  163 comment: COMMENT

  164 $@14: %empty

  165 $@15: %empty

  166 main: MAIN $@14 LEFT_PARENTHESIS RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@15 blockStatements RIGHT_CURLY_BRACE


Terminals, with rules where they appear

    $end (0) 0
    ',' (44) 138 144 146 161
    ':' (58) 134 135 136
    ';' (59) 37 43 49 55 56 57 58 59 60 61 125 126 127 128 131 134 135 136 149 150 151 152 154 155 157 158 159 160
    error (256)
    INT (258) 39 44 51
    CHAR (259) 38 45 50
    FLOAT (260) 40 46 52
    STRING (261) 41 47 53
    CONST (262) 50 51 52 53 54
    BOOL (263) 42 48 54
    VOID (264)
    PLUS (265) 62 75 86
    MINUS (266) 63 76
    MULTIPLY (267) 65 78
    DIVIDE (268) 66 79
    MODULO (269) 67
    INCREMENT (270) 60 70 123
    DECREMENT (271) 61 71 124
    GREATER (272) 90 96
    LESS (273) 91 97
    GREATER_EQUAL (274) 92 98
    LESS_EQUAL (275) 93 99
    EQUAL (276) 94 100
    NOT_EQUAL (277) 95 101
    AND (278) 103
    OR (279) 104
    NOT (280) 105
    ASSIGN (281) 38 39 40 41 42 50 51 52 53 54 55 56 57 58 59 119 120 121 122 125 126 127 128
    IF (282) 108 114
    ELSE (283) 114
    SWITCH (284) 133
    CASE (285) 134 135
    DEFAULT (286) 136
    CONTINUE (287) 154 155 156
    BREAK (288) 134 135 136 151 152 153
    THEN (289)
    WHILE (290) 116
    DO (291)
    FOR (292) 131
    RETURN (293) 149 150
    REPEAT (294) 118
    UNTIL (295) 118
    LEFT_CURLY_BRACE (296) 108 114 116 118 131 133 141 143 166
    RIGHT_CURLY_BRACE (297) 108 114 116 118 131 133 141 143 166
    LEFT_PARENTHESIS (298) 74 83 87 102 108 114 116 118 131 133 143 157 158 159 160 166
    RIGHT_PARENTHESIS (299) 74 83 87 102 108 114 116 118 131 133 143 157 158 159 160 166
    LEFT_SQUARE_BRACKET (300)
    RIGHT_SQUARE_BRACKET (301)
    ENUM (302) 141
    FUNCTION (303) 143
    MAIN (304) 166
    PRINT (305) 157 158
    SCAN (306)
    COMMENT (307) 163
    IDENTIFIER <sVal> (308) 38 39 40 41 42 44 45 46 47 48 50 51 52 53 54 55 56 57 58 59 60 61 70 71 72 81 85 88 119 120 121 122 123 124 125 126 127 128 133 138 139 141 143 152 155 159 160
    DIGIT <iVal> (309) 24 73
    FLOAT_LITERAL <fVal> (310) 25 82
    STRING_LITERAL <sVal> (311) 26 84
    CHAR_LITERAL <cVal> (312) 27 38 50 59
    BOOL_LITERAL <bVal> (313) 28 89 122 128


Nonterminals, with rules where they appear

    $accept (62)
        on left: 0
    program (63)
        on left: 1 2
        on right: 0 2
    statement (64)
        on left: 3 4 5
        on right: 1 2
    blockStatements (65)
        on left: 6 7
        on right: 3 7 108 114 116 118 131 134 135 136 143 166
    blockStatement (66)
        on left: 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
        on right: 6 7
    values (67)
        on left: 24 25 26 27 28
        on right: 134 135
    expression (68)
        on left: 29 30 31 32
        on right: 161 162
    variableDeclarationStatement (69)
        on left: 33 34
        on right: 8
    noSemiColumnVariableDeclarationStatement (70)
        on left: 35 36
        on right: 144 145
    assignVariableDeclaration (71)
        on left: 37
        on right: 33 129
    noSemiColumnAssignVariableDeclaration (72)
        on left: 38 39 40 41 42
        on right: 35 37
    nonAssignVariableDeclaration (73)
        on left: 43
        on right: 34
    noSemiColumnNonAssignVariableDeclaration (74)
        on left: 44 45 46 47 48
        on right: 36 43
    constDeclarationStatement (75)
        on left: 49
        on right: 9
    noSemiColumnConstDeclaration (76)
        on left: 50 51 52 53 54
        on right: 49 146 147
    assignmentStatement (77)
        on left: 55 56 57 58 59
        on right: 10
    incStatement (78)
        on left: 60
        on right: 11
    decStatement (79)
        on left: 61
        on right: 12
    intMathExpression <iVal> (80)
        on left: 62 63 64
        on right: 29 39 51 55 62 63 74 90 91 92 93 94 95 119 125
    intMathTerm <iVal> (81)
        on left: 65 66 67 68
        on right: 62 63 64 65 66 67
    intMathFactor <iVal> (82)
        on left: 69 70 71
        on right: 65 66 67 68
    intMathPrimary <iVal> (83)
        on left: 72 73 74
        on right: 69
    floatMathExpression <fVal> (84)
        on left: 75 76 77
        on right: 30 40 52 56 75 76 83 96 97 98 99 100 101 120 126
    floatMathTerm <fVal> (85)
        on left: 78 79 80
        on right: 75 76 77 78 79
    floatMathFactor <fVal> (86)
        on left: 81 82 83
        on right: 78 79 80
    stringExpression <sVal> (87)
        on left: 84 85 86 87
        on right: 31 41 53 57 86 87 121 127
    logicalExpression <bVal> (88)
        on left: 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105
        on right: 32 42 54 58 102 103 104 105 108 114 116 118 131
    ifStatement (89)
        on left: 108 114
        on right: 13
    $@1 (90)
        on left: 106
        on right: 108
    $@2 (91)
        on left: 107
        on right: 108
    $@3 (92)
        on left: 109
        on right: 114
    $@4 (93)
        on left: 110
        on right: 114
    $@5 (94)
        on left: 111
        on right: 114
    $@6 (95)
        on left: 112
        on right: 114
    $@7 (96)
        on left: 113
        on right: 114
    whileStatement (97)
        on left: 116
        on right: 15
    $@8 (98)
        on left: 115
        on right: 116
    repeatStatement (99)
        on left: 118
        on right: 17
    $@9 (100)
        on left: 117
        on right: 118
    forAssignment (101)
        on left: 119 120 121 122 123 124
        on right: 131
    forDeclaration (102)
        on left: 125 126 127 128 129
        on right: 131
    forStatement (103)
        on left: 131
        on right: 16
    $@10 (104)
        on left: 130
        on right: 131
    switchStatement (105)
        on left: 133
        on right: 14
    $@11 (106)
        on left: 132
        on right: 133
    caseStatement (107)
        on left: 134 135 136 137
        on right: 133 134
    enumIdentifiers (108)
        on left: 138 139
        on right: 138 141
    enumStatement (109)
        on left: 141
        on right: 18
    $@12 (110)
        on left: 140
        on right: 141
    functionStatement (111)
        on left: 143
        on right: 4
    $@13 (112)
        on left: 142
        on right: 143
    parameter (113)
        on left: 144 145 146 147 148
        on right: 143 144 146
    returnStatement (114)
        on left: 149 150
        on right: 19
    continueBreakStatement (115)
        on left: 151 152 153 154 155 156
        on right: 21
    printStatement (116)
        on left: 157 158
        on right: 20
    functionCallStatement (117)
        on left: 159 160
        on right: 22
    argument (118)
        on left: 161 162
        on right: 149 157 159 161
    comment (119)
        on left: 163
        on right: 23
    main (120)
        on left: 166
        on right: 5
    $@14 (121)
        on left: 164
        on right: 166
    $@15 (122)
        on left: 165
        on right: 166


State 0

    0 $accept: . program $end

    INT         shift, and go to state 1
    CHAR        shift, and go to state 2
    FLOAT       shift, and go to state 3
    STRING      shift, and go to state 4
    CONST       shift, and go to state 5
    BOOL        shift, and go to state 6
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    CONTINUE    shift, and go to state 9
    BREAK       shift, and go to state 10
    WHILE       shift, and go to state 11
    FOR         shift, and go to state 12
    RETURN      shift, and go to state 13
    REPEAT      shift, and go to state 14
    ENUM        shift, and go to state 15
    FUNCTION    shift, and go to state 16
    MAIN        shift, and go to state 17
    PRINT       shift, and go to state 18
    COMMENT     shift, and go to state 19
    IDENTIFIER  shift, and go to state 20

    program                                   go to state 21
    statement                                 go to state 22
    blockStatements                           go to state 23
    blockStatement                            go to state 24
    variableDeclarationStatement              go to state 25
    assignVariableDeclaration                 go to state 26
    noSemiColumnAssignVariableDeclaration     go to state 27
    nonAssignVariableDeclaration              go to state 28
    noSemiColumnNonAssignVariableDeclaration  go to state 29
    constDeclarationStatement                 go to state 30
    noSemiColumnConstDeclaration              go to state 31
    assignmentStatement                       go to state 32
    incStatement                              go to state 33
    decStatement                              go to state 34
    ifStatement                               go to state 35
    whileStatement                            go to state 36
    repeatStatement                           go to state 37
    forStatement                              go to state 38
    switchStatement                           go to state 39
    enumStatement                             go to state 40
    functionStatement                         go to state 41
    returnStatement                           go to state 42
    continueBreakStatement                    go to state 43
    printStatement                            go to state 44
    functionCallStatement                     go to state 45
    comment                                   go to state 46
    main                                      go to state 47


State 1

   39 noSemiColumnAssignVariableDeclaration: INT . IDENTIFIER ASSIGN intMathExpression
   44 noSemiColumnNonAssignVariableDeclaration: INT . IDENTIFIER

    IDENTIFIER  shift, and go to state 48


State 2

   38 noSemiColumnAssignVariableDeclaration: CHAR . IDENTIFIER ASSIGN CHAR_LITERAL
   45 noSemiColumnNonAssignVariableDeclaration: CHAR . IDENTIFIER

    IDENTIFIER  shift, and go to state 49


State 3

   40 noSemiColumnAssignVariableDeclaration: FLOAT . IDENTIFIER ASSIGN floatMathExpression
   46 noSemiColumnNonAssignVariableDeclaration: FLOAT . IDENTIFIER

    IDENTIFIER  shift, and go to state 50


State 4

   41 noSemiColumnAssignVariableDeclaration: STRING . IDENTIFIER ASSIGN stringExpression
   47 noSemiColumnNonAssignVariableDeclaration: STRING . IDENTIFIER

    IDENTIFIER  shift, and go to state 51


State 5

   50 noSemiColumnConstDeclaration: CONST . CHAR IDENTIFIER ASSIGN CHAR_LITERAL
   51                             | CONST . INT IDENTIFIER ASSIGN intMathExpression
   52                             | CONST . FLOAT IDENTIFIER ASSIGN floatMathExpression
   53                             | CONST . STRING IDENTIFIER ASSIGN stringExpression
   54                             | CONST . BOOL IDENTIFIER ASSIGN logicalExpression

    INT     shift, and go to state 52
    CHAR    shift, and go to state 53
    FLOAT   shift, and go to state 54
    STRING  shift, and go to state 55
    BOOL    shift, and go to state 56


State 6

   42 noSemiColumnAssignVariableDeclaration: BOOL . IDENTIFIER ASSIGN logicalExpression
   48 noSemiColumnNonAssignVariableDeclaration: BOOL . IDENTIFIER

    IDENTIFIER  shift, and go to state 57


State 7

  108 ifStatement: IF . $@1 LEFT_PARENTHESIS logicalExpression RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@2 blockStatements RIGHT_CURLY_BRACE
  114            | IF . $@3 LEFT_PARENTHESIS logicalExpression RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@4 blockStatements RIGHT_CURLY_BRACE $@5 ELSE $@6 LEFT_CURLY_BRACE $@7 blockStatements RIGHT_CURLY_BRACE

    LEFT_PARENTHESIS  reduce using rule 106 ($@1)
    LEFT_PARENTHESIS  [reduce using rule 109 ($@3)]
    $default          reduce using rule 106 ($@1)

    $@1  go to state 58
    $@3  go to state 59


State 8

  133 switchStatement: SWITCH . LEFT_PARENTHESIS IDENTIFIER RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@11 caseStatement RIGHT_CURLY_BRACE

    LEFT_PARENTHESIS  shift, and go to state 60


State 9

  154 continueBreakStatement: CONTINUE . ';'
  155                       | CONTINUE . IDENTIFIER ';'
  156                       | CONTINUE .

    IDENTIFIER  shift, and go to state 61
    ';'         shift, and go to state 62

    IDENTIFIER  [reduce using rule 156 (continueBreakStatement)]
    $default    reduce using rule 156 (continueBreakStatement)


State 10

  151 continueBreakStatement: BREAK . ';'
  152                       | BREAK . IDENTIFIER ';'
  153                       | BREAK .

    IDENTIFIER  shift, and go to state 63
    ';'         shift, and go to state 64

    IDENTIFIER  [reduce using rule 153 (continueBreakStatement)]
    $default    reduce using rule 153 (continueBreakStatement)


State 11

  116 whileStatement: WHILE . LEFT_PARENTHESIS logicalExpression RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@8 blockStatements RIGHT_CURLY_BRACE

    LEFT_PARENTHESIS  shift, and go to state 65


State 12

  131 forStatement: FOR . LEFT_PARENTHESIS $@10 forDeclaration logicalExpression ';' forAssignment RIGHT_PARENTHESIS LEFT_CURLY_BRACE blockStatements RIGHT_CURLY_BRACE

    LEFT_PARENTHESIS  shift, and go to state 66


State 13

  149 returnStatement: RETURN . argument ';'
  150                | RETURN . ';'

    NOT               shift, and go to state 67
    LEFT_PARENTHESIS  shift, and go to state 68
    IDENTIFIER        shift, and go to state 69
    DIGIT             shift, and go to state 70
    FLOAT_LITERAL     shift, and go to state 71
    STRING_LITERAL    shift, and go to state 72
    BOOL_LITERAL      shift, and go to state 73
    ';'               shift, and go to state 74

    expression           go to state 75
    intMathExpression    go to state 76
    intMathTerm          go to state 77
    intMathFactor        go to state 78
    intMathPrimary       go to state 79
    floatMathExpression  go to state 80
    floatMathTerm        go to state 81
    floatMathFactor      go to state 82
    stringExpression     go to state 83
    logicalExpression    go to state 84
    argument             go to state 85


State 14

  118 repeatStatement: REPEAT . LEFT_CURLY_BRACE $@9 blockStatements RIGHT_CURLY_BRACE UNTIL LEFT_PARENTHESIS logicalExpression RIGHT_PARENTHESIS

    LEFT_CURLY_BRACE  shift, and go to state 86


State 15

  141 enumStatement: ENUM . IDENTIFIER LEFT_CURLY_BRACE $@12 enumIdentifiers RIGHT_CURLY_BRACE

    IDENTIFIER  shift, and go to state 87


State 16

  143 functionStatement: FUNCTION . IDENTIFIER LEFT_PARENTHESIS $@13 parameter RIGHT_PARENTHESIS LEFT_CURLY_BRACE blockStatements RIGHT_CURLY_BRACE

    IDENTIFIER  shift, and go to state 88


State 17

  166 main: MAIN . $@14 LEFT_PARENTHESIS RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@15 blockStatements RIGHT_CURLY_BRACE

    $default  reduce using rule 164 ($@14)

    $@14  go to state 89


State 18

  157 printStatement: PRINT . LEFT_PARENTHESIS argument RIGHT_PARENTHESIS ';'
  158               | PRINT . LEFT_PARENTHESIS RIGHT_PARENTHESIS ';'

    LEFT_PARENTHESIS  shift, and go to state 90


State 19

  163 comment: COMMENT .

    $default  reduce using rule 163 (comment)


State 20

   55 assignmentStatement: IDENTIFIER . ASSIGN intMathExpression ';'
   56                    | IDENTIFIER . ASSIGN floatMathExpression ';'
   57                    | IDENTIFIER . ASSIGN stringExpression ';'
   58                    | IDENTIFIER . ASSIGN logicalExpression ';'
   59                    | IDENTIFIER . ASSIGN CHAR_LITERAL ';'
   60 incStatement: IDENTIFIER . INCREMENT ';'
   61 decStatement: IDENTIFIER . DECREMENT ';'
  159 functionCallStatement: IDENTIFIER . LEFT_PARENTHESIS argument RIGHT_PARENTHESIS ';'
  160                      | IDENTIFIER . LEFT_PARENTHESIS RIGHT_PARENTHESIS ';'

    INCREMENT         shift, and go to state 91
    DECREMENT         shift, and go to state 92
    ASSIGN            shift, and go to state 93
    LEFT_PARENTHESIS  shift, and go to state 94


State 21

    0 $accept: program . $end
    2 program: program . statement

    $end        shift, and go to state 95
    INT         shift, and go to state 1
    CHAR        shift, and go to state 2
    FLOAT       shift, and go to state 3
    STRING      shift, and go to state 4
    CONST       shift, and go to state 5
    BOOL        shift, and go to state 6
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    CONTINUE    shift, and go to state 9
    BREAK       shift, and go to state 10
    WHILE       shift, and go to state 11
    FOR         shift, and go to state 12
    RETURN      shift, and go to state 13
    REPEAT      shift, and go to state 14
    ENUM        shift, and go to state 15
    FUNCTION    shift, and go to state 16
    MAIN        shift, and go to state 17
    PRINT       shift, and go to state 18
    COMMENT     shift, and go to state 19
    IDENTIFIER  shift, and go to state 20

    statement                                 go to state 96
    blockStatements                           go to state 23
    blockStatement                            go to state 24
    variableDeclarationStatement              go to state 25
    assignVariableDeclaration                 go to state 26
    noSemiColumnAssignVariableDeclaration     go to state 27
    nonAssignVariableDeclaration              go to state 28
    noSemiColumnNonAssignVariableDeclaration  go to state 29
    constDeclarationStatement                 go to state 30
    noSemiColumnConstDeclaration              go to state 31
    assignmentStatement                       go to state 32
    incStatement                              go to state 33
    decStatement                              go to state 34
    ifStatement                               go to state 35
    whileStatement                            go to state 36
    repeatStatement                           go to state 37
    forStatement                              go to state 38
    switchStatement                           go to state 39
    enumStatement                             go to state 40
    functionStatement                         go to state 41
    returnStatement                           go to state 42
    continueBreakStatement                    go to state 43
    printStatement                            go to state 44
    functionCallStatement                     go to state 45
    comment                                   go to state 46
    main                                      go to state 47


State 22

    1 program: statement .

    $default  reduce using rule 1 (program)


State 23

    3 statement: blockStatements .
    7 blockStatements: blockStatements . blockStatement

    INT         shift, and go to state 1
    CHAR        shift, and go to state 2
    FLOAT       shift, and go to state 3
    STRING      shift, and go to state 4
    CONST       shift, and go to state 5
    BOOL        shift, and go to state 6
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    CONTINUE    shift, and go to state 9
    BREAK       shift, and go to state 10
    WHILE       shift, and go to state 11
    FOR         shift, and go to state 12
    RETURN      shift, and go to state 13
    REPEAT      shift, and go to state 14
    ENUM        shift, and go to state 15
    PRINT       shift, and go to state 18
    COMMENT     shift, and go to state 19
    IDENTIFIER  shift, and go to state 20

    INT         [reduce using rule 3 (statement)]
    CHAR        [reduce using rule 3 (statement)]
    FLOAT       [reduce using rule 3 (statement)]
    STRING      [reduce using rule 3 (statement)]
    CONST       [reduce using rule 3 (statement)]
    BOOL        [reduce using rule 3 (statement)]
    IF          [reduce using rule 3 (statement)]
    SWITCH      [reduce using rule 3 (statement)]
    CONTINUE    [reduce using rule 3 (statement)]
    BREAK       [reduce using rule 3 (statement)]
    WHILE       [reduce using rule 3 (statement)]
    FOR         [reduce using rule 3 (statement)]
    RETURN      [reduce using rule 3 (statement)]
    REPEAT      [reduce using rule 3 (statement)]
    ENUM        [reduce using rule 3 (statement)]
    PRINT       [reduce using rule 3 (statement)]
    COMMENT     [reduce using rule 3 (statement)]
    IDENTIFIER  [reduce using rule 3 (statement)]
    $default    reduce using rule 3 (statement)

    blockStatement                            go to state 97
    variableDeclarationStatement              go to state 25
    assignVariableDeclaration                 go to state 26
    noSemiColumnAssignVariableDeclaration     go to state 27
    nonAssignVariableDeclaration              go to state 28
    noSemiColumnNonAssignVariableDeclaration  go to state 29
    constDeclarationStatement                 go to state 30
    noSemiColumnConstDeclaration              go to state 31
    assignmentStatement                       go to state 32
    incStatement                              go to state 33
    decStatement                              go to state 34
    ifStatement                               go to state 35
    whileStatement                            go to state 36
    repeatStatement                           go to state 37
    forStatement                              go to state 38
    switchStatement                           go to state 39
    enumStatement                             go to state 40
    returnStatement                           go to state 42
    continueBreakStatement                    go to state 43
    printStatement                            go to state 44
    functionCallStatement                     go to state 45
    comment                                   go to state 46


State 24

    6 blockStatements: blockStatement .

    $default  reduce using rule 6 (blockStatements)


State 25

    8 blockStatement: variableDeclarationStatement .

    $default  reduce using rule 8 (blockStatement)


State 26

   33 variableDeclarationStatement: assignVariableDeclaration .

    $default  reduce using rule 33 (variableDeclarationStatement)


State 27

   37 assignVariableDeclaration: noSemiColumnAssignVariableDeclaration . ';'

    ';'  shift, and go to state 98


State 28

   34 variableDeclarationStatement: nonAssignVariableDeclaration .

    $default  reduce using rule 34 (variableDeclarationStatement)


State 29

   43 nonAssignVariableDeclaration: noSemiColumnNonAssignVariableDeclaration . ';'

    ';'  shift, and go to state 99


State 30

    9 blockStatement: constDeclarationStatement .

    $default  reduce using rule 9 (blockStatement)


State 31

   49 constDeclarationStatement: noSemiColumnConstDeclaration . ';'

    ';'  shift, and go to state 100


State 32

   10 blockStatement: assignmentStatement .

    $default  reduce using rule 10 (blockStatement)


State 33

   11 blockStatement: incStatement .

    $default  reduce using rule 11 (blockStatement)


State 34

   12 blockStatement: decStatement .

    $default  reduce using rule 12 (blockStatement)


State 35

   13 blockStatement: ifStatement .

    $default  reduce using rule 13 (blockStatement)


State 36

   15 blockStatement: whileStatement .

    $default  reduce using rule 15 (blockStatement)


State 37

   17 blockStatement: repeatStatement .

    $default  reduce using rule 17 (blockStatement)


State 38

   16 blockStatement: forStatement .

    $default  reduce using rule 16 (blockStatement)


State 39

   14 blockStatement: switchStatement .

    $default  reduce using rule 14 (blockStatement)


State 40

   18 blockStatement: enumStatement .

    $default  reduce using rule 18 (blockStatement)


State 41

    4 statement: functionStatement .

    $default  reduce using rule 4 (statement)


State 42

   19 blockStatement: returnStatement .

    $default  reduce using rule 19 (blockStatement)


State 43

   21 blockStatement: continueBreakStatement .

    $default  reduce using rule 21 (blockStatement)


State 44

   20 blockStatement: printStatement .

    $default  reduce using rule 20 (blockStatement)


State 45

   22 blockStatement: functionCallStatement .

    $default  reduce using rule 22 (blockStatement)


State 46

   23 blockStatement: comment .

    $default  reduce using rule 23 (blockStatement)


State 47

    5 statement: main .

    $default  reduce using rule 5 (statement)


State 48

   39 noSemiColumnAssignVariableDeclaration: INT IDENTIFIER . ASSIGN intMathExpression
   44 noSemiColumnNonAssignVariableDeclaration: INT IDENTIFIER .

    ASSIGN  shift, and go to state 101

    $default  reduce using rule 44 (noSemiColumnNonAssignVariableDeclaration)


State 49

   38 noSemiColumnAssignVariableDeclaration: CHAR IDENTIFIER . ASSIGN CHAR_LITERAL
   45 noSemiColumnNonAssignVariableDeclaration: CHAR IDENTIFIER .

    ASSIGN  shift, and go to state 102

    $default  reduce using rule 45 (noSemiColumnNonAssignVariableDeclaration)


State 50

   40 noSemiColumnAssignVariableDeclaration: FLOAT IDENTIFIER . ASSIGN floatMathExpression
   46 noSemiColumnNonAssignVariableDeclaration: FLOAT IDENTIFIER .

    ASSIGN  shift, and go to state 103

    $default  reduce using rule 46 (noSemiColumnNonAssignVariableDeclaration)


State 51

   41 noSemiColumnAssignVariableDeclaration: STRING IDENTIFIER . ASSIGN stringExpression
   47 noSemiColumnNonAssignVariableDeclaration: STRING IDENTIFIER .

    ASSIGN  shift, and go to state 104

    $default  reduce using rule 47 (noSemiColumnNonAssignVariableDeclaration)


State 52

   51 noSemiColumnConstDeclaration: CONST INT . IDENTIFIER ASSIGN intMathExpression

    IDENTIFIER  shift, and go to state 105


State 53

   50 noSemiColumnConstDeclaration: CONST CHAR . IDENTIFIER ASSIGN CHAR_LITERAL

    IDENTIFIER  shift, and go to state 106


State 54

   52 noSemiColumnConstDeclaration: CONST FLOAT . IDENTIFIER ASSIGN floatMathExpression

    IDENTIFIER  shift, and go to state 107


State 55

   53 noSemiColumnConstDeclaration: CONST STRING . IDENTIFIER ASSIGN stringExpression

    IDENTIFIER  shift, and go to state 108


State 56

   54 noSemiColumnConstDeclaration: CONST BOOL . IDENTIFIER ASSIGN logicalExpression

    IDENTIFIER  shift, and go to state 109


State 57

   42 noSemiColumnAssignVariableDeclaration: BOOL IDENTIFIER . ASSIGN logicalExpression
   48 noSemiColumnNonAssignVariableDeclaration: BOOL IDENTIFIER .

    ASSIGN  shift, and go to state 110

    $default  reduce using rule 48 (noSemiColumnNonAssignVariableDeclaration)


State 58

  108 ifStatement: IF $@1 . LEFT_PARENTHESIS logicalExpression RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@2 blockStatements RIGHT_CURLY_BRACE

    LEFT_PARENTHESIS  shift, and go to state 111


State 59

  114 ifStatement: IF $@3 . LEFT_PARENTHESIS logicalExpression RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@4 blockStatements RIGHT_CURLY_BRACE $@5 ELSE $@6 LEFT_CURLY_BRACE $@7 blockStatements RIGHT_CURLY_BRACE

    LEFT_PARENTHESIS  shift, and go to state 112


State 60

  133 switchStatement: SWITCH LEFT_PARENTHESIS . IDENTIFIER RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@11 caseStatement RIGHT_CURLY_BRACE

    IDENTIFIER  shift, and go to state 113


State 61

  155 continueBreakStatement: CONTINUE IDENTIFIER . ';'

    ';'  shift, and go to state 114


State 62

  154 continueBreakStatement: CONTINUE ';' .

    $default  reduce using rule 154 (continueBreakStatement)


State 63

  152 continueBreakStatement: BREAK IDENTIFIER . ';'

    ';'  shift, and go to state 115


State 64

  151 continueBreakStatement: BREAK ';' .

    $default  reduce using rule 151 (continueBreakStatement)


State 65

  116 whileStatement: WHILE LEFT_PARENTHESIS . logicalExpression RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@8 blockStatements RIGHT_CURLY_BRACE

    NOT               shift, and go to state 67
    LEFT_PARENTHESIS  shift, and go to state 116
    IDENTIFIER        shift, and go to state 117
    DIGIT             shift, and go to state 70
    FLOAT_LITERAL     shift, and go to state 71
    BOOL_LITERAL      shift, and go to state 73

    intMathExpression    go to state 118
    intMathTerm          go to state 77
    intMathFactor        go to state 78
    intMathPrimary       go to state 79
    floatMathExpression  go to state 119
    floatMathTerm        go to state 81
    floatMathFactor      go to state 82
    logicalExpression    go to state 120


State 66

  131 forStatement: FOR LEFT_PARENTHESIS . $@10 forDeclaration logicalExpression ';' forAssignment RIGHT_PARENTHESIS LEFT_CURLY_BRACE blockStatements RIGHT_CURLY_BRACE

    $default  reduce using rule 130 ($@10)

    $@10  go to state 121


State 67

  105 logicalExpression: NOT . logicalExpression

    NOT               shift, and go to state 67
    LEFT_PARENTHESIS  shift, and go to state 116
    IDENTIFIER        shift, and go to state 117
    DIGIT             shift, and go to state 70
    FLOAT_LITERAL     shift, and go to state 71
    BOOL_LITERAL      shift, and go to state 73

    intMathExpression    go to state 118
    intMathTerm          go to state 77
    intMathFactor        go to state 78
    intMathPrimary       go to state 79
    floatMathExpression  go to state 119
    floatMathTerm        go to state 81
    floatMathFactor      go to state 82
    logicalExpression    go to state 122


State 68

   74 intMathPrimary: LEFT_PARENTHESIS . intMathExpression RIGHT_PARENTHESIS
   83 floatMathFactor: LEFT_PARENTHESIS . floatMathExpression RIGHT_PARENTHESIS
   87 stringExpression: LEFT_PARENTHESIS . stringExpression RIGHT_PARENTHESIS
  102 logicalExpression: LEFT_PARENTHESIS . logicalExpression RIGHT_PARENTHESIS

    NOT               shift, and go to state 67
    LEFT_PARENTHESIS  shift, and go to state 68
    IDENTIFIER        shift, and go to state 69
    DIGIT             shift, and go to state 70
    FLOAT_LITERAL     shift, and go to state 71
    STRING_LITERAL    shift, and go to state 72
    BOOL_LITERAL      shift, and go to state 73

    intMathExpression    go to state 123
    intMathTerm          go to state 77
    intMathFactor        go to state 78
    intMathPrimary       go to state 79
    floatMathExpression  go to state 124
    floatMathTerm        go to state 81
    floatMathFactor      go to state 82
    stringExpression     go to state 125
    logicalExpression    go to state 126


State 69

   70 intMathFactor: IDENTIFIER . INCREMENT
   71              | IDENTIFIER . DECREMENT
   72 intMathPrimary: IDENTIFIER .
   81 floatMathFactor: IDENTIFIER .
   85 stringExpression: IDENTIFIER .
   88 logicalExpression: IDENTIFIER .

    INCREMENT  shift, and go to state 127
    DECREMENT  shift, and go to state 128

    PLUS               reduce using rule 72 (intMathPrimary)
    PLUS               [reduce using rule 81 (floatMathFactor)]
    PLUS               [reduce using rule 85 (stringExpression)]
    MINUS              reduce using rule 72 (intMathPrimary)
    MINUS              [reduce using rule 81 (floatMathFactor)]
    MULTIPLY           reduce using rule 72 (intMathPrimary)
    MULTIPLY           [reduce using rule 81 (floatMathFactor)]
    DIVIDE             reduce using rule 72 (intMathPrimary)
    DIVIDE             [reduce using rule 81 (floatMathFactor)]
    GREATER            reduce using rule 72 (intMathPrimary)
    GREATER            [reduce using rule 81 (floatMathFactor)]
    LESS               reduce using rule 72 (intMathPrimary)
    LESS               [reduce using rule 81 (floatMathFactor)]
    GREATER_EQUAL      reduce using rule 72 (intMathPrimary)
    GREATER_EQUAL      [reduce using rule 81 (floatMathFactor)]
    LESS_EQUAL         reduce using rule 72 (intMathPrimary)
    LESS_EQUAL         [reduce using rule 81 (floatMathFactor)]
    EQUAL              reduce using rule 72 (intMathPrimary)
    EQUAL              [reduce using rule 81 (floatMathFactor)]
    NOT_EQUAL          reduce using rule 72 (intMathPrimary)
    NOT_EQUAL          [reduce using rule 81 (floatMathFactor)]
    AND                reduce using rule 88 (logicalExpression)
    OR                 reduce using rule 88 (logicalExpression)
    RIGHT_PARENTHESIS  reduce using rule 72 (intMathPrimary)
    RIGHT_PARENTHESIS  [reduce using rule 81 (floatMathFactor)]
    RIGHT_PARENTHESIS  [reduce using rule 85 (stringExpression)]
    RIGHT_PARENTHESIS  [reduce using rule 88 (logicalExpression)]
    ';'                reduce using rule 72 (intMathPrimary)
    ';'                [reduce using rule 81 (floatMathFactor)]
    ';'                [reduce using rule 85 (stringExpression)]
    ';'                [reduce using rule 88 (logicalExpression)]
    ','                reduce using rule 72 (intMathPrimary)
    ','                [reduce using rule 81 (floatMathFactor)]
    ','                [reduce using rule 85 (stringExpression)]
    ','                [reduce using rule 88 (logicalExpression)]
    $default           reduce using rule 72 (intMathPrimary)


State 70

   73 intMathPrimary: DIGIT .

    $default  reduce using rule 73 (intMathPrimary)


State 71

   82 floatMathFactor: FLOAT_LITERAL .

    $default  reduce using rule 82 (floatMathFactor)


State 72

   84 stringExpression: STRING_LITERAL .

    $default  reduce using rule 84 (stringExpression)


State 73

   89 logicalExpression: BOOL_LITERAL .

    $default  reduce using rule 89 (logicalExpression)


State 74

  150 returnStatement: RETURN ';' .

    $default  reduce using rule 150 (returnStatement)


State 75

  161 argument: expression . ',' argument
  162         | expression .

    ','  shift, and go to state 129

    $default  reduce using rule 162 (argument)


State 76

   29 expression: intMathExpression .
   62 intMathExpression: intMathExpression . PLUS intMathTerm
   63                  | intMathExpression . MINUS intMathTerm
   90 logicalExpression: intMathExpression . GREATER intMathExpression
   91                  | intMathExpression . LESS intMathExpression
   92                  | intMathExpression . GREATER_EQUAL intMathExpression
   93                  | intMathExpression . LESS_EQUAL intMathExpression
   94                  | intMathExpression . EQUAL intMathExpression
   95                  | intMathExpression . NOT_EQUAL intMathExpression

    PLUS           shift, and go to state 130
    MINUS          shift, and go to state 131
    GREATER        shift, and go to state 132
    LESS           shift, and go to state 133
    GREATER_EQUAL  shift, and go to state 134
    LESS_EQUAL     shift, and go to state 135
    EQUAL          shift, and go to state 136
    NOT_EQUAL      shift, and go to state 137

    $default  reduce using rule 29 (expression)


State 77

   64 intMathExpression: intMathTerm .
   65 intMathTerm: intMathTerm . MULTIPLY intMathFactor
   66            | intMathTerm . DIVIDE intMathFactor
   67            | intMathTerm . MODULO intMathFactor

    MULTIPLY  shift, and go to state 138
    DIVIDE    shift, and go to state 139
    MODULO    shift, and go to state 140

    $default  reduce using rule 64 (intMathExpression)


State 78

   68 intMathTerm: intMathFactor .

    $default  reduce using rule 68 (intMathTerm)


State 79

   69 intMathFactor: intMathPrimary .

    $default  reduce using rule 69 (intMathFactor)


State 80

   30 expression: floatMathExpression .
   75 floatMathExpression: floatMathExpression . PLUS floatMathTerm
   76                    | floatMathExpression . MINUS floatMathTerm
   96 logicalExpression: floatMathExpression . GREATER floatMathExpression
   97                  | floatMathExpression . LESS floatMathExpression
   98                  | floatMathExpression . GREATER_EQUAL floatMathExpression
   99                  | floatMathExpression . LESS_EQUAL floatMathExpression
  100                  | floatMathExpression . EQUAL floatMathExpression
  101                  | floatMathExpression . NOT_EQUAL floatMathExpression

    PLUS           shift, and go to state 141
    MINUS          shift, and go to state 142
    GREATER        shift, and go to state 143
    LESS           shift, and go to state 144
    GREATER_EQUAL  shift, and go to state 145
    LESS_EQUAL     shift, and go to state 146
    EQUAL          shift, and go to state 147
    NOT_EQUAL      shift, and go to state 148

    $default  reduce using rule 30 (expression)


State 81

   77 floatMathExpression: floatMathTerm .
   78 floatMathTerm: floatMathTerm . MULTIPLY floatMathFactor
   79              | floatMathTerm . DIVIDE floatMathFactor

    MULTIPLY  shift, and go to state 149
    DIVIDE    shift, and go to state 150

    $default  reduce using rule 77 (floatMathExpression)


State 82

   80 floatMathTerm: floatMathFactor .

    $default  reduce using rule 80 (floatMathTerm)


State 83

   31 expression: stringExpression .
   86 stringExpression: stringExpression . PLUS stringExpression

    PLUS  shift, and go to state 151

    $default  reduce using rule 31 (expression)


State 84

   32 expression: logicalExpression .
  103 logicalExpression: logicalExpression . AND logicalExpression
  104                  | logicalExpression . OR logicalExpression

    AND  shift, and go to state 152
    OR   shift, and go to state 153

    $default  reduce using rule 32 (expression)


State 85

  149 returnStatement: RETURN argument . ';'

    ';'  shift, and go to state 154


State 86

  118 repeatStatement: REPEAT LEFT_CURLY_BRACE . $@9 blockStatements RIGHT_CURLY_BRACE UNTIL LEFT_PARENTHESIS logicalExpression RIGHT_PARENTHESIS

    $default  reduce using rule 117 ($@9)

    $@9  go to state 155


State 87

  141 enumStatement: ENUM IDENTIFIER . LEFT_CURLY_BRACE $@12 enumIdentifiers RIGHT_CURLY_BRACE

    LEFT_CURLY_BRACE  shift, and go to state 156


State 88

  143 functionStatement: FUNCTION IDENTIFIER . LEFT_PARENTHESIS $@13 parameter RIGHT_PARENTHESIS LEFT_CURLY_BRACE blockStatements RIGHT_CURLY_BRACE

    LEFT_PARENTHESIS  shift, and go to state 157


State 89

  166 main: MAIN $@14 . LEFT_PARENTHESIS RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@15 blockStatements RIGHT_CURLY_BRACE

    LEFT_PARENTHESIS  shift, and go to state 158


State 90

  157 printStatement: PRINT LEFT_PARENTHESIS . argument RIGHT_PARENTHESIS ';'
  158               | PRINT LEFT_PARENTHESIS . RIGHT_PARENTHESIS ';'

    NOT                shift, and go to state 67
    LEFT_PARENTHESIS   shift, and go to state 68
    RIGHT_PARENTHESIS  shift, and go to state 159
    IDENTIFIER         shift, and go to state 69
    DIGIT              shift, and go to state 70
    FLOAT_LITERAL      shift, and go to state 71
    STRING_LITERAL     shift, and go to state 72
    BOOL_LITERAL       shift, and go to state 73

    expression           go to state 75
    intMathExpression    go to state 76
    intMathTerm          go to state 77
    intMathFactor        go to state 78
    intMathPrimary       go to state 79
    floatMathExpression  go to state 80
    floatMathTerm        go to state 81
    floatMathFactor      go to state 82
    stringExpression     go to state 83
    logicalExpression    go to state 84
    argument             go to state 160


State 91

   60 incStatement: IDENTIFIER INCREMENT . ';'

    ';'  shift, and go to state 161


State 92

   61 decStatement: IDENTIFIER DECREMENT . ';'

    ';'  shift, and go to state 162


State 93

   55 assignmentStatement: IDENTIFIER ASSIGN . intMathExpression ';'
   56                    | IDENTIFIER ASSIGN . floatMathExpression ';'
   57                    | IDENTIFIER ASSIGN . stringExpression ';'
   58                    | IDENTIFIER ASSIGN . logicalExpression ';'
   59                    | IDENTIFIER ASSIGN . CHAR_LITERAL ';'

    NOT               shift, and go to state 67
    LEFT_PARENTHESIS  shift, and go to state 68
    IDENTIFIER        shift, and go to state 69
    DIGIT             shift, and go to state 70
    FLOAT_LITERAL     shift, and go to state 71
    STRING_LITERAL    shift, and go to state 72
    CHAR_LITERAL      shift, and go to state 163
    BOOL_LITERAL      shift, and go to state 73

    intMathExpression    go to state 164
    intMathTerm          go to state 77
    intMathFactor        go to state 78
    intMathPrimary       go to state 79
    floatMathExpression  go to state 165
    floatMathTerm        go to state 81
    floatMathFactor      go to state 82
    stringExpression     go to state 166
    logicalExpression    go to state 167


State 94

  159 functionCallStatement: IDENTIFIER LEFT_PARENTHESIS . argument RIGHT_PARENTHESIS ';'
  160                      | IDENTIFIER LEFT_PARENTHESIS . RIGHT_PARENTHESIS ';'

    NOT                shift, and go to state 67
    LEFT_PARENTHESIS   shift, and go to state 68
    RIGHT_PARENTHESIS  shift, and go to state 168
    IDENTIFIER         shift, and go to state 69
    DIGIT              shift, and go to state 70
    FLOAT_LITERAL      shift, and go to state 71
    STRING_LITERAL     shift, and go to state 72
    BOOL_LITERAL       shift, and go to state 73

    expression           go to state 75
    intMathExpression    go to state 76
    intMathTerm          go to state 77
    intMathFactor        go to state 78
    intMathPrimary       go to state 79
    floatMathExpression  go to state 80
    floatMathTerm        go to state 81
    floatMathFactor      go to state 82
    stringExpression     go to state 83
    logicalExpression    go to state 84
    argument             go to state 169


State 95

    0 $accept: program $end .

    $default  accept


State 96

    2 program: program statement .

    $default  reduce using rule 2 (program)


State 97

    7 blockStatements: blockStatements blockStatement .

    $default  reduce using rule 7 (blockStatements)


State 98

   37 assignVariableDeclaration: noSemiColumnAssignVariableDeclaration ';' .

    $default  reduce using rule 37 (assignVariableDeclaration)


State 99

   43 nonAssignVariableDeclaration: noSemiColumnNonAssignVariableDeclaration ';' .

    $default  reduce using rule 43 (nonAssignVariableDeclaration)


State 100

   49 constDeclarationStatement: noSemiColumnConstDeclaration ';' .

    $default  reduce using rule 49 (constDeclarationStatement)


State 101

   39 noSemiColumnAssignVariableDeclaration: INT IDENTIFIER ASSIGN . intMathExpression

    LEFT_PARENTHESIS  shift, and go to state 170
    IDENTIFIER        shift, and go to state 171
    DIGIT             shift, and go to state 70

    intMathExpression  go to state 172
    intMathTerm        go to state 77
    intMathFactor      go to state 78
    intMathPrimary     go to state 79


State 102

   38 noSemiColumnAssignVariableDeclaration: CHAR IDENTIFIER ASSIGN . CHAR_LITERAL

    CHAR_LITERAL  shift, and go to state 173


State 103

   40 noSemiColumnAssignVariableDeclaration: FLOAT IDENTIFIER ASSIGN . floatMathExpression

    LEFT_PARENTHESIS  shift, and go to state 174
    IDENTIFIER        shift, and go to state 175
    FLOAT_LITERAL     shift, and go to state 71

    floatMathExpression  go to state 176
    floatMathTerm        go to state 81
    floatMathFactor      go to state 82


State 104

   41 noSemiColumnAssignVariableDeclaration: STRING IDENTIFIER ASSIGN . stringExpression

    LEFT_PARENTHESIS  shift, and go to state 177
    IDENTIFIER        shift, and go to state 178
    STRING_LITERAL    shift, and go to state 72

    stringExpression  go to state 179


State 105

   51 noSemiColumnConstDeclaration: CONST INT IDENTIFIER . ASSIGN intMathExpression

    ASSIGN  shift, and go to state 180


State 106

   50 noSemiColumnConstDeclaration: CONST CHAR IDENTIFIER . ASSIGN CHAR_LITERAL

    ASSIGN  shift, and go to state 181


State 107

   52 noSemiColumnConstDeclaration: CONST FLOAT IDENTIFIER . ASSIGN floatMathExpression

    ASSIGN  shift, and go to state 182


State 108

   53 noSemiColumnConstDeclaration: CONST STRING IDENTIFIER . ASSIGN stringExpression

    ASSIGN  shift, and go to state 183


State 109

   54 noSemiColumnConstDeclaration: CONST BOOL IDENTIFIER . ASSIGN logicalExpression

    ASSIGN  shift, and go to state 184


State 110

   42 noSemiColumnAssignVariableDeclaration: BOOL IDENTIFIER ASSIGN . logicalExpression

    NOT               shift, and go to state 67
    LEFT_PARENTHESIS  shift, and go to state 116
    IDENTIFIER        shift, and go to state 117
    DIGIT             shift, and go to state 70
    FLOAT_LITERAL     shift, and go to state 71
    BOOL_LITERAL      shift, and go to state 73

    intMathExpression    go to state 118
    intMathTerm          go to state 77
    intMathFactor        go to state 78
    intMathPrimary       go to state 79
    floatMathExpression  go to state 119
    floatMathTerm        go to state 81
    floatMathFactor      go to state 82
    logicalExpression    go to state 185


State 111

  108 ifStatement: IF $@1 LEFT_PARENTHESIS . logicalExpression RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@2 blockStatements RIGHT_CURLY_BRACE

    NOT               shift, and go to state 67
    LEFT_PARENTHESIS  shift, and go to state 116
    IDENTIFIER        shift, and go to state 117
    DIGIT             shift, and go to state 70
    FLOAT_LITERAL     shift, and go to state 71
    BOOL_LITERAL      shift, and go to state 73

    intMathExpression    go to state 118
    intMathTerm          go to state 77
    intMathFactor        go to state 78
    intMathPrimary       go to state 79
    floatMathExpression  go to state 119
    floatMathTerm        go to state 81
    floatMathFactor      go to state 82
    logicalExpression    go to state 186


State 112

  114 ifStatement: IF $@3 LEFT_PARENTHESIS . logicalExpression RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@4 blockStatements RIGHT_CURLY_BRACE $@5 ELSE $@6 LEFT_CURLY_BRACE $@7 blockStatements RIGHT_CURLY_BRACE

    NOT               shift, and go to state 67
    LEFT_PARENTHESIS  shift, and go to state 116
    IDENTIFIER        shift, and go to state 117
    DIGIT             shift, and go to state 70
    FLOAT_LITERAL     shift, and go to state 71
    BOOL_LITERAL      shift, and go to state 73

    intMathExpression    go to state 118
    intMathTerm          go to state 77
    intMathFactor        go to state 78
    intMathPrimary       go to state 79
    floatMathExpression  go to state 119
    floatMathTerm        go to state 81
    floatMathFactor      go to state 82
    logicalExpression    go to state 187


State 113

  133 switchStatement: SWITCH LEFT_PARENTHESIS IDENTIFIER . RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@11 caseStatement RIGHT_CURLY_BRACE

    RIGHT_PARENTHESIS  shift, and go to state 188


State 114

  155 continueBreakStatement: CONTINUE IDENTIFIER ';' .

    $default  reduce using rule 155 (continueBreakStatement)


State 115

  152 continueBreakStatement: BREAK IDENTIFIER ';' .

    $default  reduce using rule 152 (continueBreakStatement)


State 116

   74 intMathPrimary: LEFT_PARENTHESIS . intMathExpression RIGHT_PARENTHESIS
   83 floatMathFactor: LEFT_PARENTHESIS . floatMathExpression RIGHT_PARENTHESIS
  102 logicalExpression: LEFT_PARENTHESIS . logicalExpression RIGHT_PARENTHESIS

    NOT               shift, and go to state 67
    LEFT_PARENTHESIS  shift, and go to state 116
    IDENTIFIER        shift, and go to state 117
    DIGIT             shift, and go to state 70
    FLOAT_LITERAL     shift, and go to state 71
    BOOL_LITERAL      shift, and go to state 73

    intMathExpression    go to state 123
    intMathTerm          go to state 77
    intMathFactor        go to state 78
    intMathPrimary       go to state 79
    floatMathExpression  go to state 124
    floatMathTerm        go to state 81
    floatMathFactor      go to state 82
    logicalExpression    go to state 126


State 117

   70 intMathFactor: IDENTIFIER . INCREMENT
   71              | IDENTIFIER . DECREMENT
   72 intMathPrimary: IDENTIFIER .
   81 floatMathFactor: IDENTIFIER .
   88 logicalExpression: IDENTIFIER .

    INCREMENT  shift, and go to state 127
    DECREMENT  shift, and go to state 128

    PLUS               reduce using rule 72 (intMathPrimary)
    PLUS               [reduce using rule 81 (floatMathFactor)]
    MINUS              reduce using rule 72 (intMathPrimary)
    MINUS              [reduce using rule 81 (floatMathFactor)]
    MULTIPLY           reduce using rule 72 (intMathPrimary)
    MULTIPLY           [reduce using rule 81 (floatMathFactor)]
    DIVIDE             reduce using rule 72 (intMathPrimary)
    DIVIDE             [reduce using rule 81 (floatMathFactor)]
    GREATER            reduce using rule 72 (intMathPrimary)
    GREATER            [reduce using rule 81 (floatMathFactor)]
    LESS               reduce using rule 72 (intMathPrimary)
    LESS               [reduce using rule 81 (floatMathFactor)]
    GREATER_EQUAL      reduce using rule 72 (intMathPrimary)
    GREATER_EQUAL      [reduce using rule 81 (floatMathFactor)]
    LESS_EQUAL         reduce using rule 72 (intMathPrimary)
    LESS_EQUAL         [reduce using rule 81 (floatMathFactor)]
    EQUAL              reduce using rule 72 (intMathPrimary)
    EQUAL              [reduce using rule 81 (floatMathFactor)]
    NOT_EQUAL          reduce using rule 72 (intMathPrimary)
    NOT_EQUAL          [reduce using rule 81 (floatMathFactor)]
    AND                reduce using rule 88 (logicalExpression)
    OR                 reduce using rule 88 (logicalExpression)
    RIGHT_PARENTHESIS  reduce using rule 72 (intMathPrimary)
    RIGHT_PARENTHESIS  [reduce using rule 81 (floatMathFactor)]
    RIGHT_PARENTHESIS  [reduce using rule 88 (logicalExpression)]
    ';'                reduce using rule 88 (logicalExpression)
    ','                reduce using rule 88 (logicalExpression)
    $default           reduce using rule 72 (intMathPrimary)


State 118

   62 intMathExpression: intMathExpression . PLUS intMathTerm
   63                  | intMathExpression . MINUS intMathTerm
   90 logicalExpression: intMathExpression . GREATER intMathExpression
   91                  | intMathExpression . LESS intMathExpression
   92                  | intMathExpression . GREATER_EQUAL intMathExpression
   93                  | intMathExpression . LESS_EQUAL intMathExpression
   94                  | intMathExpression . EQUAL intMathExpression
   95                  | intMathExpression . NOT_EQUAL intMathExpression

    PLUS           shift, and go to state 130
    MINUS          shift, and go to state 131
    GREATER        shift, and go to state 132
    LESS           shift, and go to state 133
    GREATER_EQUAL  shift, and go to state 134
    LESS_EQUAL     shift, and go to state 135
    EQUAL          shift, and go to state 136
    NOT_EQUAL      shift, and go to state 137


State 119

   75 floatMathExpression: floatMathExpression . PLUS floatMathTerm
   76                    | floatMathExpression . MINUS floatMathTerm
   96 logicalExpression: floatMathExpression . GREATER floatMathExpression
   97                  | floatMathExpression . LESS floatMathExpression
   98                  | floatMathExpression . GREATER_EQUAL floatMathExpression
   99                  | floatMathExpression . LESS_EQUAL floatMathExpression
  100                  | floatMathExpression . EQUAL floatMathExpression
  101                  | floatMathExpression . NOT_EQUAL floatMathExpression

    PLUS           shift, and go to state 141
    MINUS          shift, and go to state 142
    GREATER        shift, and go to state 143
    LESS           shift, and go to state 144
    GREATER_EQUAL  shift, and go to state 145
    LESS_EQUAL     shift, and go to state 146
    EQUAL          shift, and go to state 147
    NOT_EQUAL      shift, and go to state 148


State 120

  103 logicalExpression: logicalExpression . AND logicalExpression
  104                  | logicalExpression . OR logicalExpression
  116 whileStatement: WHILE LEFT_PARENTHESIS logicalExpression . RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@8 blockStatements RIGHT_CURLY_BRACE

    AND                shift, and go to state 152
    OR                 shift, and go to state 153
    RIGHT_PARENTHESIS  shift, and go to state 189


State 121

  131 forStatement: FOR LEFT_PARENTHESIS $@10 . forDeclaration logicalExpression ';' forAssignment RIGHT_PARENTHESIS LEFT_CURLY_BRACE blockStatements RIGHT_CURLY_BRACE

    INT         shift, and go to state 190
    CHAR        shift, and go to state 191
    FLOAT       shift, and go to state 192
    STRING      shift, and go to state 193
    BOOL        shift, and go to state 194
    IDENTIFIER  shift, and go to state 195

    assignVariableDeclaration              go to state 196
    noSemiColumnAssignVariableDeclaration  go to state 27
    forDeclaration                         go to state 197


State 122

  103 logicalExpression: logicalExpression . AND logicalExpression
  104                  | logicalExpression . OR logicalExpression
  105                  | NOT logicalExpression .

    AND  shift, and go to state 152
    OR   shift, and go to state 153

    AND       [reduce using rule 105 (logicalExpression)]
    OR        [reduce using rule 105 (logicalExpression)]
    $default  reduce using rule 105 (logicalExpression)


State 123

   62 intMathExpression: intMathExpression . PLUS intMathTerm
   63                  | intMathExpression . MINUS intMathTerm
   74 intMathPrimary: LEFT_PARENTHESIS intMathExpression . RIGHT_PARENTHESIS
   90 logicalExpression: intMathExpression . GREATER intMathExpression
   91                  | intMathExpression . LESS intMathExpression
   92                  | intMathExpression . GREATER_EQUAL intMathExpression
   93                  | intMathExpression . LESS_EQUAL intMathExpression
   94                  | intMathExpression . EQUAL intMathExpression
   95                  | intMathExpression . NOT_EQUAL intMathExpression

    PLUS               shift, and go to state 130
    MINUS              shift, and go to state 131
    GREATER            shift, and go to state 132
    LESS               shift, and go to state 133
    GREATER_EQUAL      shift, and go to state 134
    LESS_EQUAL         shift, and go to state 135
    EQUAL              shift, and go to state 136
    NOT_EQUAL          shift, and go to state 137
    RIGHT_PARENTHESIS  shift, and go to state 198


State 124

   75 floatMathExpression: floatMathExpression . PLUS floatMathTerm
   76                    | floatMathExpression . MINUS floatMathTerm
   83 floatMathFactor: LEFT_PARENTHESIS floatMathExpression . RIGHT_PARENTHESIS
   96 logicalExpression: floatMathExpression . GREATER floatMathExpression
   97                  | floatMathExpression . LESS floatMathExpression
   98                  | floatMathExpression . GREATER_EQUAL floatMathExpression
   99                  | floatMathExpression . LESS_EQUAL floatMathExpression
  100                  | floatMathExpression . EQUAL floatMathExpression
  101                  | floatMathExpression . NOT_EQUAL floatMathExpression

    PLUS               shift, and go to state 141
    MINUS              shift, and go to state 142
    GREATER            shift, and go to state 143
    LESS               shift, and go to state 144
    GREATER_EQUAL      shift, and go to state 145
    LESS_EQUAL         shift, and go to state 146
    EQUAL              shift, and go to state 147
    NOT_EQUAL          shift, and go to state 148
    RIGHT_PARENTHESIS  shift, and go to state 199


State 125

   86 stringExpression: stringExpression . PLUS stringExpression
   87                 | LEFT_PARENTHESIS stringExpression . RIGHT_PARENTHESIS

    PLUS               shift, and go to state 151
    RIGHT_PARENTHESIS  shift, and go to state 200


State 126

  102 logicalExpression: LEFT_PARENTHESIS logicalExpression . RIGHT_PARENTHESIS
  103                  | logicalExpression . AND logicalExpression
  104                  | logicalExpression . OR logicalExpression

    AND                shift, and go to state 152
    OR                 shift, and go to state 153
    RIGHT_PARENTHESIS  shift, and go to state 201


State 127

   70 intMathFactor: IDENTIFIER INCREMENT .

    $default  reduce using rule 70 (intMathFactor)


State 128

   71 intMathFactor: IDENTIFIER DECREMENT .

    $default  reduce using rule 71 (intMathFactor)


State 129

  161 argument: expression ',' . argument

    NOT               shift, and go to state 67
    LEFT_PARENTHESIS  shift, and go to state 68
    IDENTIFIER        shift, and go to state 69
    DIGIT             shift, and go to state 70
    FLOAT_LITERAL     shift, and go to state 71
    STRING_LITERAL    shift, and go to state 72
    BOOL_LITERAL      shift, and go to state 73

    expression           go to state 75
    intMathExpression    go to state 76
    intMathTerm          go to state 77
    intMathFactor        go to state 78
    intMathPrimary       go to state 79
    floatMathExpression  go to state 80
    floatMathTerm        go to state 81
    floatMathFactor      go to state 82
    stringExpression     go to state 83
    logicalExpression    go to state 84
    argument             go to state 202


State 130

   62 intMathExpression: intMathExpression PLUS . intMathTerm

    LEFT_PARENTHESIS  shift, and go to state 170
    IDENTIFIER        shift, and go to state 171
    DIGIT             shift, and go to state 70

    intMathTerm     go to state 203
    intMathFactor   go to state 78
    intMathPrimary  go to state 79


State 131

   63 intMathExpression: intMathExpression MINUS . intMathTerm

    LEFT_PARENTHESIS  shift, and go to state 170
    IDENTIFIER        shift, and go to state 171
    DIGIT             shift, and go to state 70

    intMathTerm     go to state 204
    intMathFactor   go to state 78
    intMathPrimary  go to state 79


State 132

   90 logicalExpression: intMathExpression GREATER . intMathExpression

    LEFT_PARENTHESIS  shift, and go to state 170
    IDENTIFIER        shift, and go to state 171
    DIGIT             shift, and go to state 70

    intMathExpression  go to state 205
    intMathTerm        go to state 77
    intMathFactor      go to state 78
    intMathPrimary     go to state 79


State 133

   91 logicalExpression: intMathExpression LESS . intMathExpression

    LEFT_PARENTHESIS  shift, and go to state 170
    IDENTIFIER        shift, and go to state 171
    DIGIT             shift, and go to state 70

    intMathExpression  go to state 206
    intMathTerm        go to state 77
    intMathFactor      go to state 78
    intMathPrimary     go to state 79


State 134

   92 logicalExpression: intMathExpression GREATER_EQUAL . intMathExpression

    LEFT_PARENTHESIS  shift, and go to state 170
    IDENTIFIER        shift, and go to state 171
    DIGIT             shift, and go to state 70

    intMathExpression  go to state 207
    intMathTerm        go to state 77
    intMathFactor      go to state 78
    intMathPrimary     go to state 79


State 135

   93 logicalExpression: intMathExpression LESS_EQUAL . intMathExpression

    LEFT_PARENTHESIS  shift, and go to state 170
    IDENTIFIER        shift, and go to state 171
    DIGIT             shift, and go to state 70

    intMathExpression  go to state 208
    intMathTerm        go to state 77
    intMathFactor      go to state 78
    intMathPrimary     go to state 79


State 136

   94 logicalExpression: intMathExpression EQUAL . intMathExpression

    LEFT_PARENTHESIS  shift, and go to state 170
    IDENTIFIER        shift, and go to state 171
    DIGIT             shift, and go to state 70

    intMathExpression  go to state 209
    intMathTerm        go to state 77
    intMathFactor      go to state 78
    intMathPrimary     go to state 79


State 137

   95 logicalExpression: intMathExpression NOT_EQUAL . intMathExpression

    LEFT_PARENTHESIS  shift, and go to state 170
    IDENTIFIER        shift, and go to state 171
    DIGIT             shift, and go to state 70

    intMathExpression  go to state 210
    intMathTerm        go to state 77
    intMathFactor      go to state 78
    intMathPrimary     go to state 79


State 138

   65 intMathTerm: intMathTerm MULTIPLY . intMathFactor

    LEFT_PARENTHESIS  shift, and go to state 170
    IDENTIFIER        shift, and go to state 171
    DIGIT             shift, and go to state 70

    intMathFactor   go to state 211
    intMathPrimary  go to state 79


State 139

   66 intMathTerm: intMathTerm DIVIDE . intMathFactor

    LEFT_PARENTHESIS  shift, and go to state 170
    IDENTIFIER        shift, and go to state 171
    DIGIT             shift, and go to state 70

    intMathFactor   go to state 212
    intMathPrimary  go to state 79


State 140

   67 intMathTerm: intMathTerm MODULO . intMathFactor

    LEFT_PARENTHESIS  shift, and go to state 170
    IDENTIFIER        shift, and go to state 171
    DIGIT             shift, and go to state 70

    intMathFactor   go to state 213
    intMathPrimary  go to state 79


State 141

   75 floatMathExpression: floatMathExpression PLUS . floatMathTerm

    LEFT_PARENTHESIS  shift, and go to state 174
    IDENTIFIER        shift, and go to state 175
    FLOAT_LITERAL     shift, and go to state 71

    floatMathTerm    go to state 214
    floatMathFactor  go to state 82


State 142

   76 floatMathExpression: floatMathExpression MINUS . floatMathTerm

    LEFT_PARENTHESIS  shift, and go to state 174
    IDENTIFIER        shift, and go to state 175
    FLOAT_LITERAL     shift, and go to state 71

    floatMathTerm    go to state 215
    floatMathFactor  go to state 82


State 143

   96 logicalExpression: floatMathExpression GREATER . floatMathExpression

    LEFT_PARENTHESIS  shift, and go to state 174
    IDENTIFIER        shift, and go to state 175
    FLOAT_LITERAL     shift, and go to state 71

    floatMathExpression  go to state 216
    floatMathTerm        go to state 81
    floatMathFactor      go to state 82


State 144

   97 logicalExpression: floatMathExpression LESS . floatMathExpression

    LEFT_PARENTHESIS  shift, and go to state 174
    IDENTIFIER        shift, and go to state 175
    FLOAT_LITERAL     shift, and go to state 71

    floatMathExpression  go to state 217
    floatMathTerm        go to state 81
    floatMathFactor      go to state 82


State 145

   98 logicalExpression: floatMathExpression GREATER_EQUAL . floatMathExpression

    LEFT_PARENTHESIS  shift, and go to state 174
    IDENTIFIER        shift, and go to state 175
    FLOAT_LITERAL     shift, and go to state 71

    floatMathExpression  go to state 218
    floatMathTerm        go to state 81
    floatMathFactor      go to state 82


State 146

   99 logicalExpression: floatMathExpression LESS_EQUAL . floatMathExpression

    LEFT_PARENTHESIS  shift, and go to state 174
    IDENTIFIER        shift, and go to state 175
    FLOAT_LITERAL     shift, and go to state 71

    floatMathExpression  go to state 219
    floatMathTerm        go to state 81
    floatMathFactor      go to state 82


State 147

  100 logicalExpression: floatMathExpression EQUAL . floatMathExpression

    LEFT_PARENTHESIS  shift, and go to state 174
    IDENTIFIER        shift, and go to state 175
    FLOAT_LITERAL     shift, and go to state 71

    floatMathExpression  go to state 220
    floatMathTerm        go to state 81
    floatMathFactor      go to state 82


State 148

  101 logicalExpression: floatMathExpression NOT_EQUAL . floatMathExpression

    LEFT_PARENTHESIS  shift, and go to state 174
    IDENTIFIER        shift, and go to state 175
    FLOAT_LITERAL     shift, and go to state 71

    floatMathExpression  go to state 221
    floatMathTerm        go to state 81
    floatMathFactor      go to state 82


State 149

   78 floatMathTerm: floatMathTerm MULTIPLY . floatMathFactor

    LEFT_PARENTHESIS  shift, and go to state 174
    IDENTIFIER        shift, and go to state 175
    FLOAT_LITERAL     shift, and go to state 71

    floatMathFactor  go to state 222


State 150

   79 floatMathTerm: floatMathTerm DIVIDE . floatMathFactor

    LEFT_PARENTHESIS  shift, and go to state 174
    IDENTIFIER        shift, and go to state 175
    FLOAT_LITERAL     shift, and go to state 71

    floatMathFactor  go to state 223


State 151

   86 stringExpression: stringExpression PLUS . stringExpression

    LEFT_PARENTHESIS  shift, and go to state 177
    IDENTIFIER        shift, and go to state 178
    STRING_LITERAL    shift, and go to state 72

    stringExpression  go to state 224


State 152

  103 logicalExpression: logicalExpression AND . logicalExpression

    NOT               shift, and go to state 67
    LEFT_PARENTHESIS  shift, and go to state 116
    IDENTIFIER        shift, and go to state 117
    DIGIT             shift, and go to state 70
    FLOAT_LITERAL     shift, and go to state 71
    BOOL_LITERAL      shift, and go to state 73

    intMathExpression    go to state 118
    intMathTerm          go to state 77
    intMathFactor        go to state 78
    intMathPrimary       go to state 79
    floatMathExpression  go to state 119
    floatMathTerm        go to state 81
    floatMathFactor      go to state 82
    logicalExpression    go to state 225


State 153

  104 logicalExpression: logicalExpression OR . logicalExpression

    NOT               shift, and go to state 67
    LEFT_PARENTHESIS  shift, and go to state 116
    IDENTIFIER        shift, and go to state 117
    DIGIT             shift, and go to state 70
    FLOAT_LITERAL     shift, and go to state 71
    BOOL_LITERAL      shift, and go to state 73

    intMathExpression    go to state 118
    intMathTerm          go to state 77
    intMathFactor        go to state 78
    intMathPrimary       go to state 79
    floatMathExpression  go to state 119
    floatMathTerm        go to state 81
    floatMathFactor      go to state 82
    logicalExpression    go to state 226


State 154

  149 returnStatement: RETURN argument ';' .

    $default  reduce using rule 149 (returnStatement)


State 155

  118 repeatStatement: REPEAT LEFT_CURLY_BRACE $@9 . blockStatements RIGHT_CURLY_BRACE UNTIL LEFT_PARENTHESIS logicalExpression RIGHT_PARENTHESIS

    INT         shift, and go to state 1
    CHAR        shift, and go to state 2
    FLOAT       shift, and go to state 3
    STRING      shift, and go to state 4
    CONST       shift, and go to state 5
    BOOL        shift, and go to state 6
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    CONTINUE    shift, and go to state 9
    BREAK       shift, and go to state 10
    WHILE       shift, and go to state 11
    FOR         shift, and go to state 12
    RETURN      shift, and go to state 13
    REPEAT      shift, and go to state 14
    ENUM        shift, and go to state 15
    PRINT       shift, and go to state 18
    COMMENT     shift, and go to state 19
    IDENTIFIER  shift, and go to state 20

    blockStatements                           go to state 227
    blockStatement                            go to state 24
    variableDeclarationStatement              go to state 25
    assignVariableDeclaration                 go to state 26
    noSemiColumnAssignVariableDeclaration     go to state 27
    nonAssignVariableDeclaration              go to state 28
    noSemiColumnNonAssignVariableDeclaration  go to state 29
    constDeclarationStatement                 go to state 30
    noSemiColumnConstDeclaration              go to state 31
    assignmentStatement                       go to state 32
    incStatement                              go to state 33
    decStatement                              go to state 34
    ifStatement                               go to state 35
    whileStatement                            go to state 36
    repeatStatement                           go to state 37
    forStatement                              go to state 38
    switchStatement                           go to state 39
    enumStatement                             go to state 40
    returnStatement                           go to state 42
    continueBreakStatement                    go to state 43
    printStatement                            go to state 44
    functionCallStatement                     go to state 45
    comment                                   go to state 46


State 156

  141 enumStatement: ENUM IDENTIFIER LEFT_CURLY_BRACE . $@12 enumIdentifiers RIGHT_CURLY_BRACE

    $default  reduce using rule 140 ($@12)

    $@12  go to state 228


State 157

  143 functionStatement: FUNCTION IDENTIFIER LEFT_PARENTHESIS . $@13 parameter RIGHT_PARENTHESIS LEFT_CURLY_BRACE blockStatements RIGHT_CURLY_BRACE

    $default  reduce using rule 142 ($@13)

    $@13  go to state 229


State 158

  166 main: MAIN $@14 LEFT_PARENTHESIS . RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@15 blockStatements RIGHT_CURLY_BRACE

    RIGHT_PARENTHESIS  shift, and go to state 230


State 159

  158 printStatement: PRINT LEFT_PARENTHESIS RIGHT_PARENTHESIS . ';'

    ';'  shift, and go to state 231


State 160

  157 printStatement: PRINT LEFT_PARENTHESIS argument . RIGHT_PARENTHESIS ';'

    RIGHT_PARENTHESIS  shift, and go to state 232


State 161

   60 incStatement: IDENTIFIER INCREMENT ';' .

    $default  reduce using rule 60 (incStatement)


State 162

   61 decStatement: IDENTIFIER DECREMENT ';' .

    $default  reduce using rule 61 (decStatement)


State 163

   59 assignmentStatement: IDENTIFIER ASSIGN CHAR_LITERAL . ';'

    ';'  shift, and go to state 233


State 164

   55 assignmentStatement: IDENTIFIER ASSIGN intMathExpression . ';'
   62 intMathExpression: intMathExpression . PLUS intMathTerm
   63                  | intMathExpression . MINUS intMathTerm
   90 logicalExpression: intMathExpression . GREATER intMathExpression
   91                  | intMathExpression . LESS intMathExpression
   92                  | intMathExpression . GREATER_EQUAL intMathExpression
   93                  | intMathExpression . LESS_EQUAL intMathExpression
   94                  | intMathExpression . EQUAL intMathExpression
   95                  | intMathExpression . NOT_EQUAL intMathExpression

    PLUS           shift, and go to state 130
    MINUS          shift, and go to state 131
    GREATER        shift, and go to state 132
    LESS           shift, and go to state 133
    GREATER_EQUAL  shift, and go to state 134
    LESS_EQUAL     shift, and go to state 135
    EQUAL          shift, and go to state 136
    NOT_EQUAL      shift, and go to state 137
    ';'            shift, and go to state 234


State 165

   56 assignmentStatement: IDENTIFIER ASSIGN floatMathExpression . ';'
   75 floatMathExpression: floatMathExpression . PLUS floatMathTerm
   76                    | floatMathExpression . MINUS floatMathTerm
   96 logicalExpression: floatMathExpression . GREATER floatMathExpression
   97                  | floatMathExpression . LESS floatMathExpression
   98                  | floatMathExpression . GREATER_EQUAL floatMathExpression
   99                  | floatMathExpression . LESS_EQUAL floatMathExpression
  100                  | floatMathExpression . EQUAL floatMathExpression
  101                  | floatMathExpression . NOT_EQUAL floatMathExpression

    PLUS           shift, and go to state 141
    MINUS          shift, and go to state 142
    GREATER        shift, and go to state 143
    LESS           shift, and go to state 144
    GREATER_EQUAL  shift, and go to state 145
    LESS_EQUAL     shift, and go to state 146
    EQUAL          shift, and go to state 147
    NOT_EQUAL      shift, and go to state 148
    ';'            shift, and go to state 235


State 166

   57 assignmentStatement: IDENTIFIER ASSIGN stringExpression . ';'
   86 stringExpression: stringExpression . PLUS stringExpression

    PLUS  shift, and go to state 151
    ';'   shift, and go to state 236


State 167

   58 assignmentStatement: IDENTIFIER ASSIGN logicalExpression . ';'
  103 logicalExpression: logicalExpression . AND logicalExpression
  104                  | logicalExpression . OR logicalExpression

    AND  shift, and go to state 152
    OR   shift, and go to state 153
    ';'  shift, and go to state 237


State 168

  160 functionCallStatement: IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS . ';'

    ';'  shift, and go to state 238


State 169

  159 functionCallStatement: IDENTIFIER LEFT_PARENTHESIS argument . RIGHT_PARENTHESIS ';'

    RIGHT_PARENTHESIS  shift, and go to state 239


State 170

   74 intMathPrimary: LEFT_PARENTHESIS . intMathExpression RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 170
    IDENTIFIER        shift, and go to state 171
    DIGIT             shift, and go to state 70

    intMathExpression  go to state 240
    intMathTerm        go to state 77
    intMathFactor      go to state 78
    intMathPrimary     go to state 79


State 171

   70 intMathFactor: IDENTIFIER . INCREMENT
   71              | IDENTIFIER . DECREMENT
   72 intMathPrimary: IDENTIFIER .

    INCREMENT  shift, and go to state 127
    DECREMENT  shift, and go to state 128

    $default  reduce using rule 72 (intMathPrimary)


State 172

   39 noSemiColumnAssignVariableDeclaration: INT IDENTIFIER ASSIGN intMathExpression .
   62 intMathExpression: intMathExpression . PLUS intMathTerm
   63                  | intMathExpression . MINUS intMathTerm

    PLUS   shift, and go to state 130
    MINUS  shift, and go to state 131

    $default  reduce using rule 39 (noSemiColumnAssignVariableDeclaration)


State 173

   38 noSemiColumnAssignVariableDeclaration: CHAR IDENTIFIER ASSIGN CHAR_LITERAL .

    $default  reduce using rule 38 (noSemiColumnAssignVariableDeclaration)


State 174

   83 floatMathFactor: LEFT_PARENTHESIS . floatMathExpression RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 174
    IDENTIFIER        shift, and go to state 175
    FLOAT_LITERAL     shift, and go to state 71

    floatMathExpression  go to state 241
    floatMathTerm        go to state 81
    floatMathFactor      go to state 82


State 175

   81 floatMathFactor: IDENTIFIER .

    $default  reduce using rule 81 (floatMathFactor)


State 176

   40 noSemiColumnAssignVariableDeclaration: FLOAT IDENTIFIER ASSIGN floatMathExpression .
   75 floatMathExpression: floatMathExpression . PLUS floatMathTerm
   76                    | floatMathExpression . MINUS floatMathTerm

    PLUS   shift, and go to state 141
    MINUS  shift, and go to state 142

    $default  reduce using rule 40 (noSemiColumnAssignVariableDeclaration)


State 177

   87 stringExpression: LEFT_PARENTHESIS . stringExpression RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 177
    IDENTIFIER        shift, and go to state 178
    STRING_LITERAL    shift, and go to state 72

    stringExpression  go to state 125


State 178

   85 stringExpression: IDENTIFIER .

    $default  reduce using rule 85 (stringExpression)


State 179

   41 noSemiColumnAssignVariableDeclaration: STRING IDENTIFIER ASSIGN stringExpression .
   86 stringExpression: stringExpression . PLUS stringExpression

    PLUS  shift, and go to state 151

    $default  reduce using rule 41 (noSemiColumnAssignVariableDeclaration)


State 180

   51 noSemiColumnConstDeclaration: CONST INT IDENTIFIER ASSIGN . intMathExpression

    LEFT_PARENTHESIS  shift, and go to state 170
    IDENTIFIER        shift, and go to state 171
    DIGIT             shift, and go to state 70

    intMathExpression  go to state 242
    intMathTerm        go to state 77
    intMathFactor      go to state 78
    intMathPrimary     go to state 79


State 181

   50 noSemiColumnConstDeclaration: CONST CHAR IDENTIFIER ASSIGN . CHAR_LITERAL

    CHAR_LITERAL  shift, and go to state 243


State 182

   52 noSemiColumnConstDeclaration: CONST FLOAT IDENTIFIER ASSIGN . floatMathExpression

    LEFT_PARENTHESIS  shift, and go to state 174
    IDENTIFIER        shift, and go to state 175
    FLOAT_LITERAL     shift, and go to state 71

    floatMathExpression  go to state 244
    floatMathTerm        go to state 81
    floatMathFactor      go to state 82


State 183

   53 noSemiColumnConstDeclaration: CONST STRING IDENTIFIER ASSIGN . stringExpression

    LEFT_PARENTHESIS  shift, and go to state 177
    IDENTIFIER        shift, and go to state 178
    STRING_LITERAL    shift, and go to state 72

    stringExpression  go to state 245


State 184

   54 noSemiColumnConstDeclaration: CONST BOOL IDENTIFIER ASSIGN . logicalExpression

    NOT               shift, and go to state 67
    LEFT_PARENTHESIS  shift, and go to state 116
    IDENTIFIER        shift, and go to state 117
    DIGIT             shift, and go to state 70
    FLOAT_LITERAL     shift, and go to state 71
    BOOL_LITERAL      shift, and go to state 73

    intMathExpression    go to state 118
    intMathTerm          go to state 77
    intMathFactor        go to state 78
    intMathPrimary       go to state 79
    floatMathExpression  go to state 119
    floatMathTerm        go to state 81
    floatMathFactor      go to state 82
    logicalExpression    go to state 246


State 185

   42 noSemiColumnAssignVariableDeclaration: BOOL IDENTIFIER ASSIGN logicalExpression .
  103 logicalExpression: logicalExpression . AND logicalExpression
  104                  | logicalExpression . OR logicalExpression

    AND  shift, and go to state 152
    OR   shift, and go to state 153

    $default  reduce using rule 42 (noSemiColumnAssignVariableDeclaration)


State 186

  103 logicalExpression: logicalExpression . AND logicalExpression
  104                  | logicalExpression . OR logicalExpression
  108 ifStatement: IF $@1 LEFT_PARENTHESIS logicalExpression . RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@2 blockStatements RIGHT_CURLY_BRACE

    AND                shift, and go to state 152
    OR                 shift, and go to state 153
    RIGHT_PARENTHESIS  shift, and go to state 247


State 187

  103 logicalExpression: logicalExpression . AND logicalExpression
  104                  | logicalExpression . OR logicalExpression
  114 ifStatement: IF $@3 LEFT_PARENTHESIS logicalExpression . RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@4 blockStatements RIGHT_CURLY_BRACE $@5 ELSE $@6 LEFT_CURLY_BRACE $@7 blockStatements RIGHT_CURLY_BRACE

    AND                shift, and go to state 152
    OR                 shift, and go to state 153
    RIGHT_PARENTHESIS  shift, and go to state 248


State 188

  133 switchStatement: SWITCH LEFT_PARENTHESIS IDENTIFIER RIGHT_PARENTHESIS . LEFT_CURLY_BRACE $@11 caseStatement RIGHT_CURLY_BRACE

    LEFT_CURLY_BRACE  shift, and go to state 249


State 189

  116 whileStatement: WHILE LEFT_PARENTHESIS logicalExpression RIGHT_PARENTHESIS . LEFT_CURLY_BRACE $@8 blockStatements RIGHT_CURLY_BRACE

    LEFT_CURLY_BRACE  shift, and go to state 250


State 190

   39 noSemiColumnAssignVariableDeclaration: INT . IDENTIFIER ASSIGN intMathExpression

    IDENTIFIER  shift, and go to state 251


State 191

   38 noSemiColumnAssignVariableDeclaration: CHAR . IDENTIFIER ASSIGN CHAR_LITERAL

    IDENTIFIER  shift, and go to state 252


State 192

   40 noSemiColumnAssignVariableDeclaration: FLOAT . IDENTIFIER ASSIGN floatMathExpression

    IDENTIFIER  shift, and go to state 253


State 193

   41 noSemiColumnAssignVariableDeclaration: STRING . IDENTIFIER ASSIGN stringExpression

    IDENTIFIER  shift, and go to state 254


State 194

   42 noSemiColumnAssignVariableDeclaration: BOOL . IDENTIFIER ASSIGN logicalExpression

    IDENTIFIER  shift, and go to state 255


State 195

  125 forDeclaration: IDENTIFIER . ASSIGN intMathExpression ';'
  126               | IDENTIFIER . ASSIGN floatMathExpression ';'
  127               | IDENTIFIER . ASSIGN stringExpression ';'
  128               | IDENTIFIER . ASSIGN BOOL_LITERAL ';'

    ASSIGN  shift, and go to state 256


State 196

  129 forDeclaration: assignVariableDeclaration .

    $default  reduce using rule 129 (forDeclaration)


State 197

  131 forStatement: FOR LEFT_PARENTHESIS $@10 forDeclaration . logicalExpression ';' forAssignment RIGHT_PARENTHESIS LEFT_CURLY_BRACE blockStatements RIGHT_CURLY_BRACE

    NOT               shift, and go to state 67
    LEFT_PARENTHESIS  shift, and go to state 116
    IDENTIFIER        shift, and go to state 117
    DIGIT             shift, and go to state 70
    FLOAT_LITERAL     shift, and go to state 71
    BOOL_LITERAL      shift, and go to state 73

    intMathExpression    go to state 118
    intMathTerm          go to state 77
    intMathFactor        go to state 78
    intMathPrimary       go to state 79
    floatMathExpression  go to state 119
    floatMathTerm        go to state 81
    floatMathFactor      go to state 82
    logicalExpression    go to state 257


State 198

   74 intMathPrimary: LEFT_PARENTHESIS intMathExpression RIGHT_PARENTHESIS .

    $default  reduce using rule 74 (intMathPrimary)


State 199

   83 floatMathFactor: LEFT_PARENTHESIS floatMathExpression RIGHT_PARENTHESIS .

    $default  reduce using rule 83 (floatMathFactor)


State 200

   87 stringExpression: LEFT_PARENTHESIS stringExpression RIGHT_PARENTHESIS .

    $default  reduce using rule 87 (stringExpression)


State 201

  102 logicalExpression: LEFT_PARENTHESIS logicalExpression RIGHT_PARENTHESIS .

    $default  reduce using rule 102 (logicalExpression)


State 202

  161 argument: expression ',' argument .

    $default  reduce using rule 161 (argument)


State 203

   62 intMathExpression: intMathExpression PLUS intMathTerm .
   65 intMathTerm: intMathTerm . MULTIPLY intMathFactor
   66            | intMathTerm . DIVIDE intMathFactor
   67            | intMathTerm . MODULO intMathFactor

    MULTIPLY  shift, and go to state 138
    DIVIDE    shift, and go to state 139
    MODULO    shift, and go to state 140

    $default  reduce using rule 62 (intMathExpression)


State 204

   63 intMathExpression: intMathExpression MINUS intMathTerm .
   65 intMathTerm: intMathTerm . MULTIPLY intMathFactor
   66            | intMathTerm . DIVIDE intMathFactor
   67            | intMathTerm . MODULO intMathFactor

    MULTIPLY  shift, and go to state 138
    DIVIDE    shift, and go to state 139
    MODULO    shift, and go to state 140

    $default  reduce using rule 63 (intMathExpression)


State 205

   62 intMathExpression: intMathExpression . PLUS intMathTerm
   63                  | intMathExpression . MINUS intMathTerm
   90 logicalExpression: intMathExpression GREATER intMathExpression .

    PLUS   shift, and go to state 130
    MINUS  shift, and go to state 131

    $default  reduce using rule 90 (logicalExpression)


State 206

   62 intMathExpression: intMathExpression . PLUS intMathTerm
   63                  | intMathExpression . MINUS intMathTerm
   91 logicalExpression: intMathExpression LESS intMathExpression .

    PLUS   shift, and go to state 130
    MINUS  shift, and go to state 131

    $default  reduce using rule 91 (logicalExpression)


State 207

   62 intMathExpression: intMathExpression . PLUS intMathTerm
   63                  | intMathExpression . MINUS intMathTerm
   92 logicalExpression: intMathExpression GREATER_EQUAL intMathExpression .

    PLUS   shift, and go to state 130
    MINUS  shift, and go to state 131

    $default  reduce using rule 92 (logicalExpression)


State 208

   62 intMathExpression: intMathExpression . PLUS intMathTerm
   63                  | intMathExpression . MINUS intMathTerm
   93 logicalExpression: intMathExpression LESS_EQUAL intMathExpression .

    PLUS   shift, and go to state 130
    MINUS  shift, and go to state 131

    $default  reduce using rule 93 (logicalExpression)


State 209

   62 intMathExpression: intMathExpression . PLUS intMathTerm
   63                  | intMathExpression . MINUS intMathTerm
   94 logicalExpression: intMathExpression EQUAL intMathExpression .

    PLUS   shift, and go to state 130
    MINUS  shift, and go to state 131

    $default  reduce using rule 94 (logicalExpression)


State 210

   62 intMathExpression: intMathExpression . PLUS intMathTerm
   63                  | intMathExpression . MINUS intMathTerm
   95 logicalExpression: intMathExpression NOT_EQUAL intMathExpression .

    PLUS   shift, and go to state 130
    MINUS  shift, and go to state 131

    $default  reduce using rule 95 (logicalExpression)


State 211

   65 intMathTerm: intMathTerm MULTIPLY intMathFactor .

    $default  reduce using rule 65 (intMathTerm)


State 212

   66 intMathTerm: intMathTerm DIVIDE intMathFactor .

    $default  reduce using rule 66 (intMathTerm)


State 213

   67 intMathTerm: intMathTerm MODULO intMathFactor .

    $default  reduce using rule 67 (intMathTerm)


State 214

   75 floatMathExpression: floatMathExpression PLUS floatMathTerm .
   78 floatMathTerm: floatMathTerm . MULTIPLY floatMathFactor
   79              | floatMathTerm . DIVIDE floatMathFactor

    MULTIPLY  shift, and go to state 149
    DIVIDE    shift, and go to state 150

    $default  reduce using rule 75 (floatMathExpression)


State 215

   76 floatMathExpression: floatMathExpression MINUS floatMathTerm .
   78 floatMathTerm: floatMathTerm . MULTIPLY floatMathFactor
   79              | floatMathTerm . DIVIDE floatMathFactor

    MULTIPLY  shift, and go to state 149
    DIVIDE    shift, and go to state 150

    $default  reduce using rule 76 (floatMathExpression)


State 216

   75 floatMathExpression: floatMathExpression . PLUS floatMathTerm
   76                    | floatMathExpression . MINUS floatMathTerm
   96 logicalExpression: floatMathExpression GREATER floatMathExpression .

    PLUS   shift, and go to state 141
    MINUS  shift, and go to state 142

    $default  reduce using rule 96 (logicalExpression)


State 217

   75 floatMathExpression: floatMathExpression . PLUS floatMathTerm
   76                    | floatMathExpression . MINUS floatMathTerm
   97 logicalExpression: floatMathExpression LESS floatMathExpression .

    PLUS   shift, and go to state 141
    MINUS  shift, and go to state 142

    $default  reduce using rule 97 (logicalExpression)


State 218

   75 floatMathExpression: floatMathExpression . PLUS floatMathTerm
   76                    | floatMathExpression . MINUS floatMathTerm
   98 logicalExpression: floatMathExpression GREATER_EQUAL floatMathExpression .

    PLUS   shift, and go to state 141
    MINUS  shift, and go to state 142

    $default  reduce using rule 98 (logicalExpression)


State 219

   75 floatMathExpression: floatMathExpression . PLUS floatMathTerm
   76                    | floatMathExpression . MINUS floatMathTerm
   99 logicalExpression: floatMathExpression LESS_EQUAL floatMathExpression .

    PLUS   shift, and go to state 141
    MINUS  shift, and go to state 142

    $default  reduce using rule 99 (logicalExpression)


State 220

   75 floatMathExpression: floatMathExpression . PLUS floatMathTerm
   76                    | floatMathExpression . MINUS floatMathTerm
  100 logicalExpression: floatMathExpression EQUAL floatMathExpression .

    PLUS   shift, and go to state 141
    MINUS  shift, and go to state 142

    $default  reduce using rule 100 (logicalExpression)


State 221

   75 floatMathExpression: floatMathExpression . PLUS floatMathTerm
   76                    | floatMathExpression . MINUS floatMathTerm
  101 logicalExpression: floatMathExpression NOT_EQUAL floatMathExpression .

    PLUS   shift, and go to state 141
    MINUS  shift, and go to state 142

    $default  reduce using rule 101 (logicalExpression)


State 222

   78 floatMathTerm: floatMathTerm MULTIPLY floatMathFactor .

    $default  reduce using rule 78 (floatMathTerm)


State 223

   79 floatMathTerm: floatMathTerm DIVIDE floatMathFactor .

    $default  reduce using rule 79 (floatMathTerm)


State 224

   86 stringExpression: stringExpression . PLUS stringExpression
   86                 | stringExpression PLUS stringExpression .

    PLUS  shift, and go to state 151

    PLUS      [reduce using rule 86 (stringExpression)]
    $default  reduce using rule 86 (stringExpression)


State 225

  103 logicalExpression: logicalExpression . AND logicalExpression
  103                  | logicalExpression AND logicalExpression .
  104                  | logicalExpression . OR logicalExpression

    AND  shift, and go to state 152
    OR   shift, and go to state 153

    AND       [reduce using rule 103 (logicalExpression)]
    OR        [reduce using rule 103 (logicalExpression)]
    $default  reduce using rule 103 (logicalExpression)


State 226

  103 logicalExpression: logicalExpression . AND logicalExpression
  104                  | logicalExpression . OR logicalExpression
  104                  | logicalExpression OR logicalExpression .

    AND  shift, and go to state 152
    OR   shift, and go to state 153

    AND       [reduce using rule 104 (logicalExpression)]
    OR        [reduce using rule 104 (logicalExpression)]
    $default  reduce using rule 104 (logicalExpression)


State 227

    7 blockStatements: blockStatements . blockStatement
  118 repeatStatement: REPEAT LEFT_CURLY_BRACE $@9 blockStatements . RIGHT_CURLY_BRACE UNTIL LEFT_PARENTHESIS logicalExpression RIGHT_PARENTHESIS

    INT                shift, and go to state 1
    CHAR               shift, and go to state 2
    FLOAT              shift, and go to state 3
    STRING             shift, and go to state 4
    CONST              shift, and go to state 5
    BOOL               shift, and go to state 6
    IF                 shift, and go to state 7
    SWITCH             shift, and go to state 8
    CONTINUE           shift, and go to state 9
    BREAK              shift, and go to state 10
    WHILE              shift, and go to state 11
    FOR                shift, and go to state 12
    RETURN             shift, and go to state 13
    REPEAT             shift, and go to state 14
    RIGHT_CURLY_BRACE  shift, and go to state 258
    ENUM               shift, and go to state 15
    PRINT              shift, and go to state 18
    COMMENT            shift, and go to state 19
    IDENTIFIER         shift, and go to state 20

    blockStatement                            go to state 97
    variableDeclarationStatement              go to state 25
    assignVariableDeclaration                 go to state 26
    noSemiColumnAssignVariableDeclaration     go to state 27
    nonAssignVariableDeclaration              go to state 28
    noSemiColumnNonAssignVariableDeclaration  go to state 29
    constDeclarationStatement                 go to state 30
    noSemiColumnConstDeclaration              go to state 31
    assignmentStatement                       go to state 32
    incStatement                              go to state 33
    decStatement                              go to state 34
    ifStatement                               go to state 35
    whileStatement                            go to state 36
    repeatStatement                           go to state 37
    forStatement                              go to state 38
    switchStatement                           go to state 39
    enumStatement                             go to state 40
    returnStatement                           go to state 42
    continueBreakStatement                    go to state 43
    printStatement                            go to state 44
    functionCallStatement                     go to state 45
    comment                                   go to state 46


State 228

  141 enumStatement: ENUM IDENTIFIER LEFT_CURLY_BRACE $@12 . enumIdentifiers RIGHT_CURLY_BRACE

    IDENTIFIER  shift, and go to state 259

    enumIdentifiers  go to state 260


State 229

  143 functionStatement: FUNCTION IDENTIFIER LEFT_PARENTHESIS $@13 . parameter RIGHT_PARENTHESIS LEFT_CURLY_BRACE blockStatements RIGHT_CURLY_BRACE

    INT     shift, and go to state 1
    CHAR    shift, and go to state 2
    FLOAT   shift, and go to state 3
    STRING  shift, and go to state 4
    CONST   shift, and go to state 5
    BOOL    shift, and go to state 6

    $default  reduce using rule 148 (parameter)

    noSemiColumnVariableDeclarationStatement  go to state 261
    noSemiColumnAssignVariableDeclaration     go to state 262
    noSemiColumnNonAssignVariableDeclaration  go to state 263
    noSemiColumnConstDeclaration              go to state 264
    parameter                                 go to state 265


State 230

  166 main: MAIN $@14 LEFT_PARENTHESIS RIGHT_PARENTHESIS . LEFT_CURLY_BRACE $@15 blockStatements RIGHT_CURLY_BRACE

    LEFT_CURLY_BRACE  shift, and go to state 266


State 231

  158 printStatement: PRINT LEFT_PARENTHESIS RIGHT_PARENTHESIS ';' .

    $default  reduce using rule 158 (printStatement)


State 232

  157 printStatement: PRINT LEFT_PARENTHESIS argument RIGHT_PARENTHESIS . ';'

    ';'  shift, and go to state 267


State 233

   59 assignmentStatement: IDENTIFIER ASSIGN CHAR_LITERAL ';' .

    $default  reduce using rule 59 (assignmentStatement)


State 234

   55 assignmentStatement: IDENTIFIER ASSIGN intMathExpression ';' .

    $default  reduce using rule 55 (assignmentStatement)


State 235

   56 assignmentStatement: IDENTIFIER ASSIGN floatMathExpression ';' .

    $default  reduce using rule 56 (assignmentStatement)


State 236

   57 assignmentStatement: IDENTIFIER ASSIGN stringExpression ';' .

    $default  reduce using rule 57 (assignmentStatement)


State 237

   58 assignmentStatement: IDENTIFIER ASSIGN logicalExpression ';' .

    $default  reduce using rule 58 (assignmentStatement)


State 238

  160 functionCallStatement: IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS ';' .

    $default  reduce using rule 160 (functionCallStatement)


State 239

  159 functionCallStatement: IDENTIFIER LEFT_PARENTHESIS argument RIGHT_PARENTHESIS . ';'

    ';'  shift, and go to state 268


State 240

   62 intMathExpression: intMathExpression . PLUS intMathTerm
   63                  | intMathExpression . MINUS intMathTerm
   74 intMathPrimary: LEFT_PARENTHESIS intMathExpression . RIGHT_PARENTHESIS

    PLUS               shift, and go to state 130
    MINUS              shift, and go to state 131
    RIGHT_PARENTHESIS  shift, and go to state 198


State 241

   75 floatMathExpression: floatMathExpression . PLUS floatMathTerm
   76                    | floatMathExpression . MINUS floatMathTerm
   83 floatMathFactor: LEFT_PARENTHESIS floatMathExpression . RIGHT_PARENTHESIS

    PLUS               shift, and go to state 141
    MINUS              shift, and go to state 142
    RIGHT_PARENTHESIS  shift, and go to state 199


State 242

   51 noSemiColumnConstDeclaration: CONST INT IDENTIFIER ASSIGN intMathExpression .
   62 intMathExpression: intMathExpression . PLUS intMathTerm
   63                  | intMathExpression . MINUS intMathTerm

    PLUS   shift, and go to state 130
    MINUS  shift, and go to state 131

    $default  reduce using rule 51 (noSemiColumnConstDeclaration)


State 243

   50 noSemiColumnConstDeclaration: CONST CHAR IDENTIFIER ASSIGN CHAR_LITERAL .

    $default  reduce using rule 50 (noSemiColumnConstDeclaration)


State 244

   52 noSemiColumnConstDeclaration: CONST FLOAT IDENTIFIER ASSIGN floatMathExpression .
   75 floatMathExpression: floatMathExpression . PLUS floatMathTerm
   76                    | floatMathExpression . MINUS floatMathTerm

    PLUS   shift, and go to state 141
    MINUS  shift, and go to state 142

    $default  reduce using rule 52 (noSemiColumnConstDeclaration)


State 245

   53 noSemiColumnConstDeclaration: CONST STRING IDENTIFIER ASSIGN stringExpression .
   86 stringExpression: stringExpression . PLUS stringExpression

    PLUS  shift, and go to state 151

    $default  reduce using rule 53 (noSemiColumnConstDeclaration)


State 246

   54 noSemiColumnConstDeclaration: CONST BOOL IDENTIFIER ASSIGN logicalExpression .
  103 logicalExpression: logicalExpression . AND logicalExpression
  104                  | logicalExpression . OR logicalExpression

    AND  shift, and go to state 152
    OR   shift, and go to state 153

    $default  reduce using rule 54 (noSemiColumnConstDeclaration)


State 247

  108 ifStatement: IF $@1 LEFT_PARENTHESIS logicalExpression RIGHT_PARENTHESIS . LEFT_CURLY_BRACE $@2 blockStatements RIGHT_CURLY_BRACE

    LEFT_CURLY_BRACE  shift, and go to state 269


State 248

  114 ifStatement: IF $@3 LEFT_PARENTHESIS logicalExpression RIGHT_PARENTHESIS . LEFT_CURLY_BRACE $@4 blockStatements RIGHT_CURLY_BRACE $@5 ELSE $@6 LEFT_CURLY_BRACE $@7 blockStatements RIGHT_CURLY_BRACE

    LEFT_CURLY_BRACE  shift, and go to state 270


State 249

  133 switchStatement: SWITCH LEFT_PARENTHESIS IDENTIFIER RIGHT_PARENTHESIS LEFT_CURLY_BRACE . $@11 caseStatement RIGHT_CURLY_BRACE

    $default  reduce using rule 132 ($@11)

    $@11  go to state 271


State 250

  116 whileStatement: WHILE LEFT_PARENTHESIS logicalExpression RIGHT_PARENTHESIS LEFT_CURLY_BRACE . $@8 blockStatements RIGHT_CURLY_BRACE

    $default  reduce using rule 115 ($@8)

    $@8  go to state 272


State 251

   39 noSemiColumnAssignVariableDeclaration: INT IDENTIFIER . ASSIGN intMathExpression

    ASSIGN  shift, and go to state 101


State 252

   38 noSemiColumnAssignVariableDeclaration: CHAR IDENTIFIER . ASSIGN CHAR_LITERAL

    ASSIGN  shift, and go to state 102


State 253

   40 noSemiColumnAssignVariableDeclaration: FLOAT IDENTIFIER . ASSIGN floatMathExpression

    ASSIGN  shift, and go to state 103


State 254

   41 noSemiColumnAssignVariableDeclaration: STRING IDENTIFIER . ASSIGN stringExpression

    ASSIGN  shift, and go to state 104


State 255

   42 noSemiColumnAssignVariableDeclaration: BOOL IDENTIFIER . ASSIGN logicalExpression

    ASSIGN  shift, and go to state 110


State 256

  125 forDeclaration: IDENTIFIER ASSIGN . intMathExpression ';'
  126               | IDENTIFIER ASSIGN . floatMathExpression ';'
  127               | IDENTIFIER ASSIGN . stringExpression ';'
  128               | IDENTIFIER ASSIGN . BOOL_LITERAL ';'

    LEFT_PARENTHESIS  shift, and go to state 273
    IDENTIFIER        shift, and go to state 274
    DIGIT             shift, and go to state 70
    FLOAT_LITERAL     shift, and go to state 71
    STRING_LITERAL    shift, and go to state 72
    BOOL_LITERAL      shift, and go to state 275

    intMathExpression    go to state 276
    intMathTerm          go to state 77
    intMathFactor        go to state 78
    intMathPrimary       go to state 79
    floatMathExpression  go to state 277
    floatMathTerm        go to state 81
    floatMathFactor      go to state 82
    stringExpression     go to state 278


State 257

  103 logicalExpression: logicalExpression . AND logicalExpression
  104                  | logicalExpression . OR logicalExpression
  131 forStatement: FOR LEFT_PARENTHESIS $@10 forDeclaration logicalExpression . ';' forAssignment RIGHT_PARENTHESIS LEFT_CURLY_BRACE blockStatements RIGHT_CURLY_BRACE

    AND  shift, and go to state 152
    OR   shift, and go to state 153
    ';'  shift, and go to state 279


State 258

  118 repeatStatement: REPEAT LEFT_CURLY_BRACE $@9 blockStatements RIGHT_CURLY_BRACE . UNTIL LEFT_PARENTHESIS logicalExpression RIGHT_PARENTHESIS

    UNTIL  shift, and go to state 280


State 259

  138 enumIdentifiers: IDENTIFIER . ',' enumIdentifiers
  139                | IDENTIFIER .

    ','  shift, and go to state 281

    $default  reduce using rule 139 (enumIdentifiers)


State 260

  141 enumStatement: ENUM IDENTIFIER LEFT_CURLY_BRACE $@12 enumIdentifiers . RIGHT_CURLY_BRACE

    RIGHT_CURLY_BRACE  shift, and go to state 282


State 261

  144 parameter: noSemiColumnVariableDeclarationStatement . ',' parameter
  145          | noSemiColumnVariableDeclarationStatement .

    ','  shift, and go to state 283

    $default  reduce using rule 145 (parameter)


State 262

   35 noSemiColumnVariableDeclarationStatement: noSemiColumnAssignVariableDeclaration .

    $default  reduce using rule 35 (noSemiColumnVariableDeclarationStatement)


State 263

   36 noSemiColumnVariableDeclarationStatement: noSemiColumnNonAssignVariableDeclaration .

    $default  reduce using rule 36 (noSemiColumnVariableDeclarationStatement)


State 264

  146 parameter: noSemiColumnConstDeclaration . ',' parameter
  147          | noSemiColumnConstDeclaration .

    ','  shift, and go to state 284

    $default  reduce using rule 147 (parameter)


State 265

  143 functionStatement: FUNCTION IDENTIFIER LEFT_PARENTHESIS $@13 parameter . RIGHT_PARENTHESIS LEFT_CURLY_BRACE blockStatements RIGHT_CURLY_BRACE

    RIGHT_PARENTHESIS  shift, and go to state 285


State 266

  166 main: MAIN $@14 LEFT_PARENTHESIS RIGHT_PARENTHESIS LEFT_CURLY_BRACE . $@15 blockStatements RIGHT_CURLY_BRACE

    $default  reduce using rule 165 ($@15)

    $@15  go to state 286


State 267

  157 printStatement: PRINT LEFT_PARENTHESIS argument RIGHT_PARENTHESIS ';' .

    $default  reduce using rule 157 (printStatement)


State 268

  159 functionCallStatement: IDENTIFIER LEFT_PARENTHESIS argument RIGHT_PARENTHESIS ';' .

    $default  reduce using rule 159 (functionCallStatement)


State 269

  108 ifStatement: IF $@1 LEFT_PARENTHESIS logicalExpression RIGHT_PARENTHESIS LEFT_CURLY_BRACE . $@2 blockStatements RIGHT_CURLY_BRACE

    $default  reduce using rule 107 ($@2)

    $@2  go to state 287


State 270

  114 ifStatement: IF $@3 LEFT_PARENTHESIS logicalExpression RIGHT_PARENTHESIS LEFT_CURLY_BRACE . $@4 blockStatements RIGHT_CURLY_BRACE $@5 ELSE $@6 LEFT_CURLY_BRACE $@7 blockStatements RIGHT_CURLY_BRACE

    $default  reduce using rule 110 ($@4)

    $@4  go to state 288


State 271

  133 switchStatement: SWITCH LEFT_PARENTHESIS IDENTIFIER RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@11 . caseStatement RIGHT_CURLY_BRACE

    CASE     shift, and go to state 289
    DEFAULT  shift, and go to state 290

    $default  reduce using rule 137 (caseStatement)

    caseStatement  go to state 291


State 272

  116 whileStatement: WHILE LEFT_PARENTHESIS logicalExpression RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@8 . blockStatements RIGHT_CURLY_BRACE

    INT         shift, and go to state 1
    CHAR        shift, and go to state 2
    FLOAT       shift, and go to state 3
    STRING      shift, and go to state 4
    CONST       shift, and go to state 5
    BOOL        shift, and go to state 6
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    CONTINUE    shift, and go to state 9
    BREAK       shift, and go to state 10
    WHILE       shift, and go to state 11
    FOR         shift, and go to state 12
    RETURN      shift, and go to state 13
    REPEAT      shift, and go to state 14
    ENUM        shift, and go to state 15
    PRINT       shift, and go to state 18
    COMMENT     shift, and go to state 19
    IDENTIFIER  shift, and go to state 20

    blockStatements                           go to state 292
    blockStatement                            go to state 24
    variableDeclarationStatement              go to state 25
    assignVariableDeclaration                 go to state 26
    noSemiColumnAssignVariableDeclaration     go to state 27
    nonAssignVariableDeclaration              go to state 28
    noSemiColumnNonAssignVariableDeclaration  go to state 29
    constDeclarationStatement                 go to state 30
    noSemiColumnConstDeclaration              go to state 31
    assignmentStatement                       go to state 32
    incStatement                              go to state 33
    decStatement                              go to state 34
    ifStatement                               go to state 35
    whileStatement                            go to state 36
    repeatStatement                           go to state 37
    forStatement                              go to state 38
    switchStatement                           go to state 39
    enumStatement                             go to state 40
    returnStatement                           go to state 42
    continueBreakStatement                    go to state 43
    printStatement                            go to state 44
    functionCallStatement                     go to state 45
    comment                                   go to state 46


State 273

   74 intMathPrimary: LEFT_PARENTHESIS . intMathExpression RIGHT_PARENTHESIS
   83 floatMathFactor: LEFT_PARENTHESIS . floatMathExpression RIGHT_PARENTHESIS
   87 stringExpression: LEFT_PARENTHESIS . stringExpression RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 273
    IDENTIFIER        shift, and go to state 274
    DIGIT             shift, and go to state 70
    FLOAT_LITERAL     shift, and go to state 71
    STRING_LITERAL    shift, and go to state 72

    intMathExpression    go to state 240
    intMathTerm          go to state 77
    intMathFactor        go to state 78
    intMathPrimary       go to state 79
    floatMathExpression  go to state 241
    floatMathTerm        go to state 81
    floatMathFactor      go to state 82
    stringExpression     go to state 125


State 274

   70 intMathFactor: IDENTIFIER . INCREMENT
   71              | IDENTIFIER . DECREMENT
   72 intMathPrimary: IDENTIFIER .
   81 floatMathFactor: IDENTIFIER .
   85 stringExpression: IDENTIFIER .

    INCREMENT  shift, and go to state 127
    DECREMENT  shift, and go to state 128

    PLUS               reduce using rule 72 (intMathPrimary)
    PLUS               [reduce using rule 81 (floatMathFactor)]
    PLUS               [reduce using rule 85 (stringExpression)]
    MINUS              reduce using rule 72 (intMathPrimary)
    MINUS              [reduce using rule 81 (floatMathFactor)]
    MULTIPLY           reduce using rule 72 (intMathPrimary)
    MULTIPLY           [reduce using rule 81 (floatMathFactor)]
    DIVIDE             reduce using rule 72 (intMathPrimary)
    DIVIDE             [reduce using rule 81 (floatMathFactor)]
    RIGHT_PARENTHESIS  reduce using rule 72 (intMathPrimary)
    RIGHT_PARENTHESIS  [reduce using rule 81 (floatMathFactor)]
    RIGHT_PARENTHESIS  [reduce using rule 85 (stringExpression)]
    ';'                reduce using rule 72 (intMathPrimary)
    ';'                [reduce using rule 81 (floatMathFactor)]
    ';'                [reduce using rule 85 (stringExpression)]
    $default           reduce using rule 72 (intMathPrimary)


State 275

  128 forDeclaration: IDENTIFIER ASSIGN BOOL_LITERAL . ';'

    ';'  shift, and go to state 293


State 276

   62 intMathExpression: intMathExpression . PLUS intMathTerm
   63                  | intMathExpression . MINUS intMathTerm
  125 forDeclaration: IDENTIFIER ASSIGN intMathExpression . ';'

    PLUS   shift, and go to state 130
    MINUS  shift, and go to state 131
    ';'    shift, and go to state 294


State 277

   75 floatMathExpression: floatMathExpression . PLUS floatMathTerm
   76                    | floatMathExpression . MINUS floatMathTerm
  126 forDeclaration: IDENTIFIER ASSIGN floatMathExpression . ';'

    PLUS   shift, and go to state 141
    MINUS  shift, and go to state 142
    ';'    shift, and go to state 295


State 278

   86 stringExpression: stringExpression . PLUS stringExpression
  127 forDeclaration: IDENTIFIER ASSIGN stringExpression . ';'

    PLUS  shift, and go to state 151
    ';'   shift, and go to state 296


State 279

  131 forStatement: FOR LEFT_PARENTHESIS $@10 forDeclaration logicalExpression ';' . forAssignment RIGHT_PARENTHESIS LEFT_CURLY_BRACE blockStatements RIGHT_CURLY_BRACE

    IDENTIFIER  shift, and go to state 297

    forAssignment  go to state 298


State 280

  118 repeatStatement: REPEAT LEFT_CURLY_BRACE $@9 blockStatements RIGHT_CURLY_BRACE UNTIL . LEFT_PARENTHESIS logicalExpression RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 299


State 281

  138 enumIdentifiers: IDENTIFIER ',' . enumIdentifiers

    IDENTIFIER  shift, and go to state 259

    enumIdentifiers  go to state 300


State 282

  141 enumStatement: ENUM IDENTIFIER LEFT_CURLY_BRACE $@12 enumIdentifiers RIGHT_CURLY_BRACE .

    $default  reduce using rule 141 (enumStatement)


State 283

  144 parameter: noSemiColumnVariableDeclarationStatement ',' . parameter

    INT     shift, and go to state 1
    CHAR    shift, and go to state 2
    FLOAT   shift, and go to state 3
    STRING  shift, and go to state 4
    CONST   shift, and go to state 5
    BOOL    shift, and go to state 6

    $default  reduce using rule 148 (parameter)

    noSemiColumnVariableDeclarationStatement  go to state 261
    noSemiColumnAssignVariableDeclaration     go to state 262
    noSemiColumnNonAssignVariableDeclaration  go to state 263
    noSemiColumnConstDeclaration              go to state 264
    parameter                                 go to state 301


State 284

  146 parameter: noSemiColumnConstDeclaration ',' . parameter

    INT     shift, and go to state 1
    CHAR    shift, and go to state 2
    FLOAT   shift, and go to state 3
    STRING  shift, and go to state 4
    CONST   shift, and go to state 5
    BOOL    shift, and go to state 6

    $default  reduce using rule 148 (parameter)

    noSemiColumnVariableDeclarationStatement  go to state 261
    noSemiColumnAssignVariableDeclaration     go to state 262
    noSemiColumnNonAssignVariableDeclaration  go to state 263
    noSemiColumnConstDeclaration              go to state 264
    parameter                                 go to state 302


State 285

  143 functionStatement: FUNCTION IDENTIFIER LEFT_PARENTHESIS $@13 parameter RIGHT_PARENTHESIS . LEFT_CURLY_BRACE blockStatements RIGHT_CURLY_BRACE

    LEFT_CURLY_BRACE  shift, and go to state 303


State 286

  166 main: MAIN $@14 LEFT_PARENTHESIS RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@15 . blockStatements RIGHT_CURLY_BRACE

    INT         shift, and go to state 1
    CHAR        shift, and go to state 2
    FLOAT       shift, and go to state 3
    STRING      shift, and go to state 4
    CONST       shift, and go to state 5
    BOOL        shift, and go to state 6
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    CONTINUE    shift, and go to state 9
    BREAK       shift, and go to state 10
    WHILE       shift, and go to state 11
    FOR         shift, and go to state 12
    RETURN      shift, and go to state 13
    REPEAT      shift, and go to state 14
    ENUM        shift, and go to state 15
    PRINT       shift, and go to state 18
    COMMENT     shift, and go to state 19
    IDENTIFIER  shift, and go to state 20

    blockStatements                           go to state 304
    blockStatement                            go to state 24
    variableDeclarationStatement              go to state 25
    assignVariableDeclaration                 go to state 26
    noSemiColumnAssignVariableDeclaration     go to state 27
    nonAssignVariableDeclaration              go to state 28
    noSemiColumnNonAssignVariableDeclaration  go to state 29
    constDeclarationStatement                 go to state 30
    noSemiColumnConstDeclaration              go to state 31
    assignmentStatement                       go to state 32
    incStatement                              go to state 33
    decStatement                              go to state 34
    ifStatement                               go to state 35
    whileStatement                            go to state 36
    repeatStatement                           go to state 37
    forStatement                              go to state 38
    switchStatement                           go to state 39
    enumStatement                             go to state 40
    returnStatement                           go to state 42
    continueBreakStatement                    go to state 43
    printStatement                            go to state 44
    functionCallStatement                     go to state 45
    comment                                   go to state 46


State 287

  108 ifStatement: IF $@1 LEFT_PARENTHESIS logicalExpression RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@2 . blockStatements RIGHT_CURLY_BRACE

    INT         shift, and go to state 1
    CHAR        shift, and go to state 2
    FLOAT       shift, and go to state 3
    STRING      shift, and go to state 4
    CONST       shift, and go to state 5
    BOOL        shift, and go to state 6
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    CONTINUE    shift, and go to state 9
    BREAK       shift, and go to state 10
    WHILE       shift, and go to state 11
    FOR         shift, and go to state 12
    RETURN      shift, and go to state 13
    REPEAT      shift, and go to state 14
    ENUM        shift, and go to state 15
    PRINT       shift, and go to state 18
    COMMENT     shift, and go to state 19
    IDENTIFIER  shift, and go to state 20

    blockStatements                           go to state 305
    blockStatement                            go to state 24
    variableDeclarationStatement              go to state 25
    assignVariableDeclaration                 go to state 26
    noSemiColumnAssignVariableDeclaration     go to state 27
    nonAssignVariableDeclaration              go to state 28
    noSemiColumnNonAssignVariableDeclaration  go to state 29
    constDeclarationStatement                 go to state 30
    noSemiColumnConstDeclaration              go to state 31
    assignmentStatement                       go to state 32
    incStatement                              go to state 33
    decStatement                              go to state 34
    ifStatement                               go to state 35
    whileStatement                            go to state 36
    repeatStatement                           go to state 37
    forStatement                              go to state 38
    switchStatement                           go to state 39
    enumStatement                             go to state 40
    returnStatement                           go to state 42
    continueBreakStatement                    go to state 43
    printStatement                            go to state 44
    functionCallStatement                     go to state 45
    comment                                   go to state 46


State 288

  114 ifStatement: IF $@3 LEFT_PARENTHESIS logicalExpression RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@4 . blockStatements RIGHT_CURLY_BRACE $@5 ELSE $@6 LEFT_CURLY_BRACE $@7 blockStatements RIGHT_CURLY_BRACE

    INT         shift, and go to state 1
    CHAR        shift, and go to state 2
    FLOAT       shift, and go to state 3
    STRING      shift, and go to state 4
    CONST       shift, and go to state 5
    BOOL        shift, and go to state 6
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    CONTINUE    shift, and go to state 9
    BREAK       shift, and go to state 10
    WHILE       shift, and go to state 11
    FOR         shift, and go to state 12
    RETURN      shift, and go to state 13
    REPEAT      shift, and go to state 14
    ENUM        shift, and go to state 15
    PRINT       shift, and go to state 18
    COMMENT     shift, and go to state 19
    IDENTIFIER  shift, and go to state 20

    blockStatements                           go to state 306
    blockStatement                            go to state 24
    variableDeclarationStatement              go to state 25
    assignVariableDeclaration                 go to state 26
    noSemiColumnAssignVariableDeclaration     go to state 27
    nonAssignVariableDeclaration              go to state 28
    noSemiColumnNonAssignVariableDeclaration  go to state 29
    constDeclarationStatement                 go to state 30
    noSemiColumnConstDeclaration              go to state 31
    assignmentStatement                       go to state 32
    incStatement                              go to state 33
    decStatement                              go to state 34
    ifStatement                               go to state 35
    whileStatement                            go to state 36
    repeatStatement                           go to state 37
    forStatement                              go to state 38
    switchStatement                           go to state 39
    enumStatement                             go to state 40
    returnStatement                           go to state 42
    continueBreakStatement                    go to state 43
    printStatement                            go to state 44
    functionCallStatement                     go to state 45
    comment                                   go to state 46


State 289

  134 caseStatement: CASE . values ':' blockStatements BREAK ';' caseStatement
  135              | CASE . values ':' blockStatements BREAK ';'

    DIGIT           shift, and go to state 307
    FLOAT_LITERAL   shift, and go to state 308
    STRING_LITERAL  shift, and go to state 309
    CHAR_LITERAL    shift, and go to state 310
    BOOL_LITERAL    shift, and go to state 311

    values  go to state 312


State 290

  136 caseStatement: DEFAULT . ':' blockStatements BREAK ';'

    ':'  shift, and go to state 313


State 291

  133 switchStatement: SWITCH LEFT_PARENTHESIS IDENTIFIER RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@11 caseStatement . RIGHT_CURLY_BRACE

    RIGHT_CURLY_BRACE  shift, and go to state 314


State 292

    7 blockStatements: blockStatements . blockStatement
  116 whileStatement: WHILE LEFT_PARENTHESIS logicalExpression RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@8 blockStatements . RIGHT_CURLY_BRACE

    INT                shift, and go to state 1
    CHAR               shift, and go to state 2
    FLOAT              shift, and go to state 3
    STRING             shift, and go to state 4
    CONST              shift, and go to state 5
    BOOL               shift, and go to state 6
    IF                 shift, and go to state 7
    SWITCH             shift, and go to state 8
    CONTINUE           shift, and go to state 9
    BREAK              shift, and go to state 10
    WHILE              shift, and go to state 11
    FOR                shift, and go to state 12
    RETURN             shift, and go to state 13
    REPEAT             shift, and go to state 14
    RIGHT_CURLY_BRACE  shift, and go to state 315
    ENUM               shift, and go to state 15
    PRINT              shift, and go to state 18
    COMMENT            shift, and go to state 19
    IDENTIFIER         shift, and go to state 20

    blockStatement                            go to state 97
    variableDeclarationStatement              go to state 25
    assignVariableDeclaration                 go to state 26
    noSemiColumnAssignVariableDeclaration     go to state 27
    nonAssignVariableDeclaration              go to state 28
    noSemiColumnNonAssignVariableDeclaration  go to state 29
    constDeclarationStatement                 go to state 30
    noSemiColumnConstDeclaration              go to state 31
    assignmentStatement                       go to state 32
    incStatement                              go to state 33
    decStatement                              go to state 34
    ifStatement                               go to state 35
    whileStatement                            go to state 36
    repeatStatement                           go to state 37
    forStatement                              go to state 38
    switchStatement                           go to state 39
    enumStatement                             go to state 40
    returnStatement                           go to state 42
    continueBreakStatement                    go to state 43
    printStatement                            go to state 44
    functionCallStatement                     go to state 45
    comment                                   go to state 46


State 293

  128 forDeclaration: IDENTIFIER ASSIGN BOOL_LITERAL ';' .

    $default  reduce using rule 128 (forDeclaration)


State 294

  125 forDeclaration: IDENTIFIER ASSIGN intMathExpression ';' .

    $default  reduce using rule 125 (forDeclaration)


State 295

  126 forDeclaration: IDENTIFIER ASSIGN floatMathExpression ';' .

    $default  reduce using rule 126 (forDeclaration)


State 296

  127 forDeclaration: IDENTIFIER ASSIGN stringExpression ';' .

    $default  reduce using rule 127 (forDeclaration)


State 297

  119 forAssignment: IDENTIFIER . ASSIGN intMathExpression
  120              | IDENTIFIER . ASSIGN floatMathExpression
  121              | IDENTIFIER . ASSIGN stringExpression
  122              | IDENTIFIER . ASSIGN BOOL_LITERAL
  123              | IDENTIFIER . INCREMENT
  124              | IDENTIFIER . DECREMENT

    INCREMENT  shift, and go to state 316
    DECREMENT  shift, and go to state 317
    ASSIGN     shift, and go to state 318


State 298

  131 forStatement: FOR LEFT_PARENTHESIS $@10 forDeclaration logicalExpression ';' forAssignment . RIGHT_PARENTHESIS LEFT_CURLY_BRACE blockStatements RIGHT_CURLY_BRACE

    RIGHT_PARENTHESIS  shift, and go to state 319


State 299

  118 repeatStatement: REPEAT LEFT_CURLY_BRACE $@9 blockStatements RIGHT_CURLY_BRACE UNTIL LEFT_PARENTHESIS . logicalExpression RIGHT_PARENTHESIS

    NOT               shift, and go to state 67
    LEFT_PARENTHESIS  shift, and go to state 116
    IDENTIFIER        shift, and go to state 117
    DIGIT             shift, and go to state 70
    FLOAT_LITERAL     shift, and go to state 71
    BOOL_LITERAL      shift, and go to state 73

    intMathExpression    go to state 118
    intMathTerm          go to state 77
    intMathFactor        go to state 78
    intMathPrimary       go to state 79
    floatMathExpression  go to state 119
    floatMathTerm        go to state 81
    floatMathFactor      go to state 82
    logicalExpression    go to state 320


State 300

  138 enumIdentifiers: IDENTIFIER ',' enumIdentifiers .

    $default  reduce using rule 138 (enumIdentifiers)


State 301

  144 parameter: noSemiColumnVariableDeclarationStatement ',' parameter .

    $default  reduce using rule 144 (parameter)


State 302

  146 parameter: noSemiColumnConstDeclaration ',' parameter .

    $default  reduce using rule 146 (parameter)


State 303

  143 functionStatement: FUNCTION IDENTIFIER LEFT_PARENTHESIS $@13 parameter RIGHT_PARENTHESIS LEFT_CURLY_BRACE . blockStatements RIGHT_CURLY_BRACE

    INT         shift, and go to state 1
    CHAR        shift, and go to state 2
    FLOAT       shift, and go to state 3
    STRING      shift, and go to state 4
    CONST       shift, and go to state 5
    BOOL        shift, and go to state 6
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    CONTINUE    shift, and go to state 9
    BREAK       shift, and go to state 10
    WHILE       shift, and go to state 11
    FOR         shift, and go to state 12
    RETURN      shift, and go to state 13
    REPEAT      shift, and go to state 14
    ENUM        shift, and go to state 15
    PRINT       shift, and go to state 18
    COMMENT     shift, and go to state 19
    IDENTIFIER  shift, and go to state 20

    blockStatements                           go to state 321
    blockStatement                            go to state 24
    variableDeclarationStatement              go to state 25
    assignVariableDeclaration                 go to state 26
    noSemiColumnAssignVariableDeclaration     go to state 27
    nonAssignVariableDeclaration              go to state 28
    noSemiColumnNonAssignVariableDeclaration  go to state 29
    constDeclarationStatement                 go to state 30
    noSemiColumnConstDeclaration              go to state 31
    assignmentStatement                       go to state 32
    incStatement                              go to state 33
    decStatement                              go to state 34
    ifStatement                               go to state 35
    whileStatement                            go to state 36
    repeatStatement                           go to state 37
    forStatement                              go to state 38
    switchStatement                           go to state 39
    enumStatement                             go to state 40
    returnStatement                           go to state 42
    continueBreakStatement                    go to state 43
    printStatement                            go to state 44
    functionCallStatement                     go to state 45
    comment                                   go to state 46


State 304

    7 blockStatements: blockStatements . blockStatement
  166 main: MAIN $@14 LEFT_PARENTHESIS RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@15 blockStatements . RIGHT_CURLY_BRACE

    INT                shift, and go to state 1
    CHAR               shift, and go to state 2
    FLOAT              shift, and go to state 3
    STRING             shift, and go to state 4
    CONST              shift, and go to state 5
    BOOL               shift, and go to state 6
    IF                 shift, and go to state 7
    SWITCH             shift, and go to state 8
    CONTINUE           shift, and go to state 9
    BREAK              shift, and go to state 10
    WHILE              shift, and go to state 11
    FOR                shift, and go to state 12
    RETURN             shift, and go to state 13
    REPEAT             shift, and go to state 14
    RIGHT_CURLY_BRACE  shift, and go to state 322
    ENUM               shift, and go to state 15
    PRINT              shift, and go to state 18
    COMMENT            shift, and go to state 19
    IDENTIFIER         shift, and go to state 20

    blockStatement                            go to state 97
    variableDeclarationStatement              go to state 25
    assignVariableDeclaration                 go to state 26
    noSemiColumnAssignVariableDeclaration     go to state 27
    nonAssignVariableDeclaration              go to state 28
    noSemiColumnNonAssignVariableDeclaration  go to state 29
    constDeclarationStatement                 go to state 30
    noSemiColumnConstDeclaration              go to state 31
    assignmentStatement                       go to state 32
    incStatement                              go to state 33
    decStatement                              go to state 34
    ifStatement                               go to state 35
    whileStatement                            go to state 36
    repeatStatement                           go to state 37
    forStatement                              go to state 38
    switchStatement                           go to state 39
    enumStatement                             go to state 40
    returnStatement                           go to state 42
    continueBreakStatement                    go to state 43
    printStatement                            go to state 44
    functionCallStatement                     go to state 45
    comment                                   go to state 46


State 305

    7 blockStatements: blockStatements . blockStatement
  108 ifStatement: IF $@1 LEFT_PARENTHESIS logicalExpression RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@2 blockStatements . RIGHT_CURLY_BRACE

    INT                shift, and go to state 1
    CHAR               shift, and go to state 2
    FLOAT              shift, and go to state 3
    STRING             shift, and go to state 4
    CONST              shift, and go to state 5
    BOOL               shift, and go to state 6
    IF                 shift, and go to state 7
    SWITCH             shift, and go to state 8
    CONTINUE           shift, and go to state 9
    BREAK              shift, and go to state 10
    WHILE              shift, and go to state 11
    FOR                shift, and go to state 12
    RETURN             shift, and go to state 13
    REPEAT             shift, and go to state 14
    RIGHT_CURLY_BRACE  shift, and go to state 323
    ENUM               shift, and go to state 15
    PRINT              shift, and go to state 18
    COMMENT            shift, and go to state 19
    IDENTIFIER         shift, and go to state 20

    blockStatement                            go to state 97
    variableDeclarationStatement              go to state 25
    assignVariableDeclaration                 go to state 26
    noSemiColumnAssignVariableDeclaration     go to state 27
    nonAssignVariableDeclaration              go to state 28
    noSemiColumnNonAssignVariableDeclaration  go to state 29
    constDeclarationStatement                 go to state 30
    noSemiColumnConstDeclaration              go to state 31
    assignmentStatement                       go to state 32
    incStatement                              go to state 33
    decStatement                              go to state 34
    ifStatement                               go to state 35
    whileStatement                            go to state 36
    repeatStatement                           go to state 37
    forStatement                              go to state 38
    switchStatement                           go to state 39
    enumStatement                             go to state 40
    returnStatement                           go to state 42
    continueBreakStatement                    go to state 43
    printStatement                            go to state 44
    functionCallStatement                     go to state 45
    comment                                   go to state 46


State 306

    7 blockStatements: blockStatements . blockStatement
  114 ifStatement: IF $@3 LEFT_PARENTHESIS logicalExpression RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@4 blockStatements . RIGHT_CURLY_BRACE $@5 ELSE $@6 LEFT_CURLY_BRACE $@7 blockStatements RIGHT_CURLY_BRACE

    INT                shift, and go to state 1
    CHAR               shift, and go to state 2
    FLOAT              shift, and go to state 3
    STRING             shift, and go to state 4
    CONST              shift, and go to state 5
    BOOL               shift, and go to state 6
    IF                 shift, and go to state 7
    SWITCH             shift, and go to state 8
    CONTINUE           shift, and go to state 9
    BREAK              shift, and go to state 10
    WHILE              shift, and go to state 11
    FOR                shift, and go to state 12
    RETURN             shift, and go to state 13
    REPEAT             shift, and go to state 14
    RIGHT_CURLY_BRACE  shift, and go to state 324
    ENUM               shift, and go to state 15
    PRINT              shift, and go to state 18
    COMMENT            shift, and go to state 19
    IDENTIFIER         shift, and go to state 20

    blockStatement                            go to state 97
    variableDeclarationStatement              go to state 25
    assignVariableDeclaration                 go to state 26
    noSemiColumnAssignVariableDeclaration     go to state 27
    nonAssignVariableDeclaration              go to state 28
    noSemiColumnNonAssignVariableDeclaration  go to state 29
    constDeclarationStatement                 go to state 30
    noSemiColumnConstDeclaration              go to state 31
    assignmentStatement                       go to state 32
    incStatement                              go to state 33
    decStatement                              go to state 34
    ifStatement                               go to state 35
    whileStatement                            go to state 36
    repeatStatement                           go to state 37
    forStatement                              go to state 38
    switchStatement                           go to state 39
    enumStatement                             go to state 40
    returnStatement                           go to state 42
    continueBreakStatement                    go to state 43
    printStatement                            go to state 44
    functionCallStatement                     go to state 45
    comment                                   go to state 46


State 307

   24 values: DIGIT .

    $default  reduce using rule 24 (values)


State 308

   25 values: FLOAT_LITERAL .

    $default  reduce using rule 25 (values)


State 309

   26 values: STRING_LITERAL .

    $default  reduce using rule 26 (values)


State 310

   27 values: CHAR_LITERAL .

    $default  reduce using rule 27 (values)


State 311

   28 values: BOOL_LITERAL .

    $default  reduce using rule 28 (values)


State 312

  134 caseStatement: CASE values . ':' blockStatements BREAK ';' caseStatement
  135              | CASE values . ':' blockStatements BREAK ';'

    ':'  shift, and go to state 325


State 313

  136 caseStatement: DEFAULT ':' . blockStatements BREAK ';'

    INT         shift, and go to state 1
    CHAR        shift, and go to state 2
    FLOAT       shift, and go to state 3
    STRING      shift, and go to state 4
    CONST       shift, and go to state 5
    BOOL        shift, and go to state 6
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    CONTINUE    shift, and go to state 9
    BREAK       shift, and go to state 10
    WHILE       shift, and go to state 11
    FOR         shift, and go to state 12
    RETURN      shift, and go to state 13
    REPEAT      shift, and go to state 14
    ENUM        shift, and go to state 15
    PRINT       shift, and go to state 18
    COMMENT     shift, and go to state 19
    IDENTIFIER  shift, and go to state 20

    blockStatements                           go to state 326
    blockStatement                            go to state 24
    variableDeclarationStatement              go to state 25
    assignVariableDeclaration                 go to state 26
    noSemiColumnAssignVariableDeclaration     go to state 27
    nonAssignVariableDeclaration              go to state 28
    noSemiColumnNonAssignVariableDeclaration  go to state 29
    constDeclarationStatement                 go to state 30
    noSemiColumnConstDeclaration              go to state 31
    assignmentStatement                       go to state 32
    incStatement                              go to state 33
    decStatement                              go to state 34
    ifStatement                               go to state 35
    whileStatement                            go to state 36
    repeatStatement                           go to state 37
    forStatement                              go to state 38
    switchStatement                           go to state 39
    enumStatement                             go to state 40
    returnStatement                           go to state 42
    continueBreakStatement                    go to state 43
    printStatement                            go to state 44
    functionCallStatement                     go to state 45
    comment                                   go to state 46


State 314

  133 switchStatement: SWITCH LEFT_PARENTHESIS IDENTIFIER RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@11 caseStatement RIGHT_CURLY_BRACE .

    $default  reduce using rule 133 (switchStatement)


State 315

  116 whileStatement: WHILE LEFT_PARENTHESIS logicalExpression RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@8 blockStatements RIGHT_CURLY_BRACE .

    $default  reduce using rule 116 (whileStatement)


State 316

  123 forAssignment: IDENTIFIER INCREMENT .

    $default  reduce using rule 123 (forAssignment)


State 317

  124 forAssignment: IDENTIFIER DECREMENT .

    $default  reduce using rule 124 (forAssignment)


State 318

  119 forAssignment: IDENTIFIER ASSIGN . intMathExpression
  120              | IDENTIFIER ASSIGN . floatMathExpression
  121              | IDENTIFIER ASSIGN . stringExpression
  122              | IDENTIFIER ASSIGN . BOOL_LITERAL

    LEFT_PARENTHESIS  shift, and go to state 273
    IDENTIFIER        shift, and go to state 274
    DIGIT             shift, and go to state 70
    FLOAT_LITERAL     shift, and go to state 71
    STRING_LITERAL    shift, and go to state 72
    BOOL_LITERAL      shift, and go to state 327

    intMathExpression    go to state 328
    intMathTerm          go to state 77
    intMathFactor        go to state 78
    intMathPrimary       go to state 79
    floatMathExpression  go to state 329
    floatMathTerm        go to state 81
    floatMathFactor      go to state 82
    stringExpression     go to state 330


State 319

  131 forStatement: FOR LEFT_PARENTHESIS $@10 forDeclaration logicalExpression ';' forAssignment RIGHT_PARENTHESIS . LEFT_CURLY_BRACE blockStatements RIGHT_CURLY_BRACE

    LEFT_CURLY_BRACE  shift, and go to state 331


State 320

  103 logicalExpression: logicalExpression . AND logicalExpression
  104                  | logicalExpression . OR logicalExpression
  118 repeatStatement: REPEAT LEFT_CURLY_BRACE $@9 blockStatements RIGHT_CURLY_BRACE UNTIL LEFT_PARENTHESIS logicalExpression . RIGHT_PARENTHESIS

    AND                shift, and go to state 152
    OR                 shift, and go to state 153
    RIGHT_PARENTHESIS  shift, and go to state 332


State 321

    7 blockStatements: blockStatements . blockStatement
  143 functionStatement: FUNCTION IDENTIFIER LEFT_PARENTHESIS $@13 parameter RIGHT_PARENTHESIS LEFT_CURLY_BRACE blockStatements . RIGHT_CURLY_BRACE

    INT                shift, and go to state 1
    CHAR               shift, and go to state 2
    FLOAT              shift, and go to state 3
    STRING             shift, and go to state 4
    CONST              shift, and go to state 5
    BOOL               shift, and go to state 6
    IF                 shift, and go to state 7
    SWITCH             shift, and go to state 8
    CONTINUE           shift, and go to state 9
    BREAK              shift, and go to state 10
    WHILE              shift, and go to state 11
    FOR                shift, and go to state 12
    RETURN             shift, and go to state 13
    REPEAT             shift, and go to state 14
    RIGHT_CURLY_BRACE  shift, and go to state 333
    ENUM               shift, and go to state 15
    PRINT              shift, and go to state 18
    COMMENT            shift, and go to state 19
    IDENTIFIER         shift, and go to state 20

    blockStatement                            go to state 97
    variableDeclarationStatement              go to state 25
    assignVariableDeclaration                 go to state 26
    noSemiColumnAssignVariableDeclaration     go to state 27
    nonAssignVariableDeclaration              go to state 28
    noSemiColumnNonAssignVariableDeclaration  go to state 29
    constDeclarationStatement                 go to state 30
    noSemiColumnConstDeclaration              go to state 31
    assignmentStatement                       go to state 32
    incStatement                              go to state 33
    decStatement                              go to state 34
    ifStatement                               go to state 35
    whileStatement                            go to state 36
    repeatStatement                           go to state 37
    forStatement                              go to state 38
    switchStatement                           go to state 39
    enumStatement                             go to state 40
    returnStatement                           go to state 42
    continueBreakStatement                    go to state 43
    printStatement                            go to state 44
    functionCallStatement                     go to state 45
    comment                                   go to state 46


State 322

  166 main: MAIN $@14 LEFT_PARENTHESIS RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@15 blockStatements RIGHT_CURLY_BRACE .

    $default  reduce using rule 166 (main)


State 323

  108 ifStatement: IF $@1 LEFT_PARENTHESIS logicalExpression RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@2 blockStatements RIGHT_CURLY_BRACE .

    $default  reduce using rule 108 (ifStatement)


State 324

  114 ifStatement: IF $@3 LEFT_PARENTHESIS logicalExpression RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@4 blockStatements RIGHT_CURLY_BRACE . $@5 ELSE $@6 LEFT_CURLY_BRACE $@7 blockStatements RIGHT_CURLY_BRACE

    $default  reduce using rule 111 ($@5)

    $@5  go to state 334


State 325

  134 caseStatement: CASE values ':' . blockStatements BREAK ';' caseStatement
  135              | CASE values ':' . blockStatements BREAK ';'

    INT         shift, and go to state 1
    CHAR        shift, and go to state 2
    FLOAT       shift, and go to state 3
    STRING      shift, and go to state 4
    CONST       shift, and go to state 5
    BOOL        shift, and go to state 6
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    CONTINUE    shift, and go to state 9
    BREAK       shift, and go to state 10
    WHILE       shift, and go to state 11
    FOR         shift, and go to state 12
    RETURN      shift, and go to state 13
    REPEAT      shift, and go to state 14
    ENUM        shift, and go to state 15
    PRINT       shift, and go to state 18
    COMMENT     shift, and go to state 19
    IDENTIFIER  shift, and go to state 20

    blockStatements                           go to state 335
    blockStatement                            go to state 24
    variableDeclarationStatement              go to state 25
    assignVariableDeclaration                 go to state 26
    noSemiColumnAssignVariableDeclaration     go to state 27
    nonAssignVariableDeclaration              go to state 28
    noSemiColumnNonAssignVariableDeclaration  go to state 29
    constDeclarationStatement                 go to state 30
    noSemiColumnConstDeclaration              go to state 31
    assignmentStatement                       go to state 32
    incStatement                              go to state 33
    decStatement                              go to state 34
    ifStatement                               go to state 35
    whileStatement                            go to state 36
    repeatStatement                           go to state 37
    forStatement                              go to state 38
    switchStatement                           go to state 39
    enumStatement                             go to state 40
    returnStatement                           go to state 42
    continueBreakStatement                    go to state 43
    printStatement                            go to state 44
    functionCallStatement                     go to state 45
    comment                                   go to state 46


State 326

    7 blockStatements: blockStatements . blockStatement
  136 caseStatement: DEFAULT ':' blockStatements . BREAK ';'

    INT         shift, and go to state 1
    CHAR        shift, and go to state 2
    FLOAT       shift, and go to state 3
    STRING      shift, and go to state 4
    CONST       shift, and go to state 5
    BOOL        shift, and go to state 6
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    CONTINUE    shift, and go to state 9
    BREAK       shift, and go to state 336
    WHILE       shift, and go to state 11
    FOR         shift, and go to state 12
    RETURN      shift, and go to state 13
    REPEAT      shift, and go to state 14
    ENUM        shift, and go to state 15
    PRINT       shift, and go to state 18
    COMMENT     shift, and go to state 19
    IDENTIFIER  shift, and go to state 20

    blockStatement                            go to state 97
    variableDeclarationStatement              go to state 25
    assignVariableDeclaration                 go to state 26
    noSemiColumnAssignVariableDeclaration     go to state 27
    nonAssignVariableDeclaration              go to state 28
    noSemiColumnNonAssignVariableDeclaration  go to state 29
    constDeclarationStatement                 go to state 30
    noSemiColumnConstDeclaration              go to state 31
    assignmentStatement                       go to state 32
    incStatement                              go to state 33
    decStatement                              go to state 34
    ifStatement                               go to state 35
    whileStatement                            go to state 36
    repeatStatement                           go to state 37
    forStatement                              go to state 38
    switchStatement                           go to state 39
    enumStatement                             go to state 40
    returnStatement                           go to state 42
    continueBreakStatement                    go to state 43
    printStatement                            go to state 44
    functionCallStatement                     go to state 45
    comment                                   go to state 46


State 327

  122 forAssignment: IDENTIFIER ASSIGN BOOL_LITERAL .

    $default  reduce using rule 122 (forAssignment)


State 328

   62 intMathExpression: intMathExpression . PLUS intMathTerm
   63                  | intMathExpression . MINUS intMathTerm
  119 forAssignment: IDENTIFIER ASSIGN intMathExpression .

    PLUS   shift, and go to state 130
    MINUS  shift, and go to state 131

    $default  reduce using rule 119 (forAssignment)


State 329

   75 floatMathExpression: floatMathExpression . PLUS floatMathTerm
   76                    | floatMathExpression . MINUS floatMathTerm
  120 forAssignment: IDENTIFIER ASSIGN floatMathExpression .

    PLUS   shift, and go to state 141
    MINUS  shift, and go to state 142

    $default  reduce using rule 120 (forAssignment)


State 330

   86 stringExpression: stringExpression . PLUS stringExpression
  121 forAssignment: IDENTIFIER ASSIGN stringExpression .

    PLUS  shift, and go to state 151

    $default  reduce using rule 121 (forAssignment)


State 331

  131 forStatement: FOR LEFT_PARENTHESIS $@10 forDeclaration logicalExpression ';' forAssignment RIGHT_PARENTHESIS LEFT_CURLY_BRACE . blockStatements RIGHT_CURLY_BRACE

    INT         shift, and go to state 1
    CHAR        shift, and go to state 2
    FLOAT       shift, and go to state 3
    STRING      shift, and go to state 4
    CONST       shift, and go to state 5
    BOOL        shift, and go to state 6
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    CONTINUE    shift, and go to state 9
    BREAK       shift, and go to state 10
    WHILE       shift, and go to state 11
    FOR         shift, and go to state 12
    RETURN      shift, and go to state 13
    REPEAT      shift, and go to state 14
    ENUM        shift, and go to state 15
    PRINT       shift, and go to state 18
    COMMENT     shift, and go to state 19
    IDENTIFIER  shift, and go to state 20

    blockStatements                           go to state 337
    blockStatement                            go to state 24
    variableDeclarationStatement              go to state 25
    assignVariableDeclaration                 go to state 26
    noSemiColumnAssignVariableDeclaration     go to state 27
    nonAssignVariableDeclaration              go to state 28
    noSemiColumnNonAssignVariableDeclaration  go to state 29
    constDeclarationStatement                 go to state 30
    noSemiColumnConstDeclaration              go to state 31
    assignmentStatement                       go to state 32
    incStatement                              go to state 33
    decStatement                              go to state 34
    ifStatement                               go to state 35
    whileStatement                            go to state 36
    repeatStatement                           go to state 37
    forStatement                              go to state 38
    switchStatement                           go to state 39
    enumStatement                             go to state 40
    returnStatement                           go to state 42
    continueBreakStatement                    go to state 43
    printStatement                            go to state 44
    functionCallStatement                     go to state 45
    comment                                   go to state 46


State 332

  118 repeatStatement: REPEAT LEFT_CURLY_BRACE $@9 blockStatements RIGHT_CURLY_BRACE UNTIL LEFT_PARENTHESIS logicalExpression RIGHT_PARENTHESIS .

    $default  reduce using rule 118 (repeatStatement)


State 333

  143 functionStatement: FUNCTION IDENTIFIER LEFT_PARENTHESIS $@13 parameter RIGHT_PARENTHESIS LEFT_CURLY_BRACE blockStatements RIGHT_CURLY_BRACE .

    $default  reduce using rule 143 (functionStatement)


State 334

  114 ifStatement: IF $@3 LEFT_PARENTHESIS logicalExpression RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@4 blockStatements RIGHT_CURLY_BRACE $@5 . ELSE $@6 LEFT_CURLY_BRACE $@7 blockStatements RIGHT_CURLY_BRACE

    ELSE  shift, and go to state 338


State 335

    7 blockStatements: blockStatements . blockStatement
  134 caseStatement: CASE values ':' blockStatements . BREAK ';' caseStatement
  135              | CASE values ':' blockStatements . BREAK ';'

    INT         shift, and go to state 1
    CHAR        shift, and go to state 2
    FLOAT       shift, and go to state 3
    STRING      shift, and go to state 4
    CONST       shift, and go to state 5
    BOOL        shift, and go to state 6
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    CONTINUE    shift, and go to state 9
    BREAK       shift, and go to state 339
    WHILE       shift, and go to state 11
    FOR         shift, and go to state 12
    RETURN      shift, and go to state 13
    REPEAT      shift, and go to state 14
    ENUM        shift, and go to state 15
    PRINT       shift, and go to state 18
    COMMENT     shift, and go to state 19
    IDENTIFIER  shift, and go to state 20

    blockStatement                            go to state 97
    variableDeclarationStatement              go to state 25
    assignVariableDeclaration                 go to state 26
    noSemiColumnAssignVariableDeclaration     go to state 27
    nonAssignVariableDeclaration              go to state 28
    noSemiColumnNonAssignVariableDeclaration  go to state 29
    constDeclarationStatement                 go to state 30
    noSemiColumnConstDeclaration              go to state 31
    assignmentStatement                       go to state 32
    incStatement                              go to state 33
    decStatement                              go to state 34
    ifStatement                               go to state 35
    whileStatement                            go to state 36
    repeatStatement                           go to state 37
    forStatement                              go to state 38
    switchStatement                           go to state 39
    enumStatement                             go to state 40
    returnStatement                           go to state 42
    continueBreakStatement                    go to state 43
    printStatement                            go to state 44
    functionCallStatement                     go to state 45
    comment                                   go to state 46


State 336

  136 caseStatement: DEFAULT ':' blockStatements BREAK . ';'
  151 continueBreakStatement: BREAK . ';'
  152                       | BREAK . IDENTIFIER ';'
  153                       | BREAK .

    IDENTIFIER  shift, and go to state 63
    ';'         shift, and go to state 340

    IDENTIFIER  [reduce using rule 153 (continueBreakStatement)]
    $default    reduce using rule 153 (continueBreakStatement)


State 337

    7 blockStatements: blockStatements . blockStatement
  131 forStatement: FOR LEFT_PARENTHESIS $@10 forDeclaration logicalExpression ';' forAssignment RIGHT_PARENTHESIS LEFT_CURLY_BRACE blockStatements . RIGHT_CURLY_BRACE

    INT                shift, and go to state 1
    CHAR               shift, and go to state 2
    FLOAT              shift, and go to state 3
    STRING             shift, and go to state 4
    CONST              shift, and go to state 5
    BOOL               shift, and go to state 6
    IF                 shift, and go to state 7
    SWITCH             shift, and go to state 8
    CONTINUE           shift, and go to state 9
    BREAK              shift, and go to state 10
    WHILE              shift, and go to state 11
    FOR                shift, and go to state 12
    RETURN             shift, and go to state 13
    REPEAT             shift, and go to state 14
    RIGHT_CURLY_BRACE  shift, and go to state 341
    ENUM               shift, and go to state 15
    PRINT              shift, and go to state 18
    COMMENT            shift, and go to state 19
    IDENTIFIER         shift, and go to state 20

    blockStatement                            go to state 97
    variableDeclarationStatement              go to state 25
    assignVariableDeclaration                 go to state 26
    noSemiColumnAssignVariableDeclaration     go to state 27
    nonAssignVariableDeclaration              go to state 28
    noSemiColumnNonAssignVariableDeclaration  go to state 29
    constDeclarationStatement                 go to state 30
    noSemiColumnConstDeclaration              go to state 31
    assignmentStatement                       go to state 32
    incStatement                              go to state 33
    decStatement                              go to state 34
    ifStatement                               go to state 35
    whileStatement                            go to state 36
    repeatStatement                           go to state 37
    forStatement                              go to state 38
    switchStatement                           go to state 39
    enumStatement                             go to state 40
    returnStatement                           go to state 42
    continueBreakStatement                    go to state 43
    printStatement                            go to state 44
    functionCallStatement                     go to state 45
    comment                                   go to state 46


State 338

  114 ifStatement: IF $@3 LEFT_PARENTHESIS logicalExpression RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@4 blockStatements RIGHT_CURLY_BRACE $@5 ELSE . $@6 LEFT_CURLY_BRACE $@7 blockStatements RIGHT_CURLY_BRACE

    $default  reduce using rule 112 ($@6)

    $@6  go to state 342


State 339

  134 caseStatement: CASE values ':' blockStatements BREAK . ';' caseStatement
  135              | CASE values ':' blockStatements BREAK . ';'
  151 continueBreakStatement: BREAK . ';'
  152                       | BREAK . IDENTIFIER ';'
  153                       | BREAK .

    IDENTIFIER  shift, and go to state 63
    ';'         shift, and go to state 343

    IDENTIFIER  [reduce using rule 153 (continueBreakStatement)]
    $default    reduce using rule 153 (continueBreakStatement)


State 340

  136 caseStatement: DEFAULT ':' blockStatements BREAK ';' .
  151 continueBreakStatement: BREAK ';' .

    RIGHT_CURLY_BRACE  reduce using rule 136 (caseStatement)
    $default           reduce using rule 151 (continueBreakStatement)


State 341

  131 forStatement: FOR LEFT_PARENTHESIS $@10 forDeclaration logicalExpression ';' forAssignment RIGHT_PARENTHESIS LEFT_CURLY_BRACE blockStatements RIGHT_CURLY_BRACE .

    $default  reduce using rule 131 (forStatement)


State 342

  114 ifStatement: IF $@3 LEFT_PARENTHESIS logicalExpression RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@4 blockStatements RIGHT_CURLY_BRACE $@5 ELSE $@6 . LEFT_CURLY_BRACE $@7 blockStatements RIGHT_CURLY_BRACE

    LEFT_CURLY_BRACE  shift, and go to state 344


State 343

  134 caseStatement: CASE values ':' blockStatements BREAK ';' . caseStatement
  135              | CASE values ':' blockStatements BREAK ';' .
  151 continueBreakStatement: BREAK ';' .

    CASE     shift, and go to state 289
    DEFAULT  shift, and go to state 290

    RIGHT_CURLY_BRACE  reduce using rule 135 (caseStatement)
    RIGHT_CURLY_BRACE  [reduce using rule 137 (caseStatement)]
    $default           reduce using rule 151 (continueBreakStatement)

    caseStatement  go to state 345


State 344

  114 ifStatement: IF $@3 LEFT_PARENTHESIS logicalExpression RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@4 blockStatements RIGHT_CURLY_BRACE $@5 ELSE $@6 LEFT_CURLY_BRACE . $@7 blockStatements RIGHT_CURLY_BRACE

    $default  reduce using rule 113 ($@7)

    $@7  go to state 346


State 345

  134 caseStatement: CASE values ':' blockStatements BREAK ';' caseStatement .

    $default  reduce using rule 134 (caseStatement)


State 346

  114 ifStatement: IF $@3 LEFT_PARENTHESIS logicalExpression RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@4 blockStatements RIGHT_CURLY_BRACE $@5 ELSE $@6 LEFT_CURLY_BRACE $@7 . blockStatements RIGHT_CURLY_BRACE

    INT         shift, and go to state 1
    CHAR        shift, and go to state 2
    FLOAT       shift, and go to state 3
    STRING      shift, and go to state 4
    CONST       shift, and go to state 5
    BOOL        shift, and go to state 6
    IF          shift, and go to state 7
    SWITCH      shift, and go to state 8
    CONTINUE    shift, and go to state 9
    BREAK       shift, and go to state 10
    WHILE       shift, and go to state 11
    FOR         shift, and go to state 12
    RETURN      shift, and go to state 13
    REPEAT      shift, and go to state 14
    ENUM        shift, and go to state 15
    PRINT       shift, and go to state 18
    COMMENT     shift, and go to state 19
    IDENTIFIER  shift, and go to state 20

    blockStatements                           go to state 347
    blockStatement                            go to state 24
    variableDeclarationStatement              go to state 25
    assignVariableDeclaration                 go to state 26
    noSemiColumnAssignVariableDeclaration     go to state 27
    nonAssignVariableDeclaration              go to state 28
    noSemiColumnNonAssignVariableDeclaration  go to state 29
    constDeclarationStatement                 go to state 30
    noSemiColumnConstDeclaration              go to state 31
    assignmentStatement                       go to state 32
    incStatement                              go to state 33
    decStatement                              go to state 34
    ifStatement                               go to state 35
    whileStatement                            go to state 36
    repeatStatement                           go to state 37
    forStatement                              go to state 38
    switchStatement                           go to state 39
    enumStatement                             go to state 40
    returnStatement                           go to state 42
    continueBreakStatement                    go to state 43
    printStatement                            go to state 44
    functionCallStatement                     go to state 45
    comment                                   go to state 46


State 347

    7 blockStatements: blockStatements . blockStatement
  114 ifStatement: IF $@3 LEFT_PARENTHESIS logicalExpression RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@4 blockStatements RIGHT_CURLY_BRACE $@5 ELSE $@6 LEFT_CURLY_BRACE $@7 blockStatements . RIGHT_CURLY_BRACE

    INT                shift, and go to state 1
    CHAR               shift, and go to state 2
    FLOAT              shift, and go to state 3
    STRING             shift, and go to state 4
    CONST              shift, and go to state 5
    BOOL               shift, and go to state 6
    IF                 shift, and go to state 7
    SWITCH             shift, and go to state 8
    CONTINUE           shift, and go to state 9
    BREAK              shift, and go to state 10
    WHILE              shift, and go to state 11
    FOR                shift, and go to state 12
    RETURN             shift, and go to state 13
    REPEAT             shift, and go to state 14
    RIGHT_CURLY_BRACE  shift, and go to state 348
    ENUM               shift, and go to state 15
    PRINT              shift, and go to state 18
    COMMENT            shift, and go to state 19
    IDENTIFIER         shift, and go to state 20

    blockStatement                            go to state 97
    variableDeclarationStatement              go to state 25
    assignVariableDeclaration                 go to state 26
    noSemiColumnAssignVariableDeclaration     go to state 27
    nonAssignVariableDeclaration              go to state 28
    noSemiColumnNonAssignVariableDeclaration  go to state 29
    constDeclarationStatement                 go to state 30
    noSemiColumnConstDeclaration              go to state 31
    assignmentStatement                       go to state 32
    incStatement                              go to state 33
    decStatement                              go to state 34
    ifStatement                               go to state 35
    whileStatement                            go to state 36
    repeatStatement                           go to state 37
    forStatement                              go to state 38
    switchStatement                           go to state 39
    enumStatement                             go to state 40
    returnStatement                           go to state 42
    continueBreakStatement                    go to state 43
    printStatement                            go to state 44
    functionCallStatement                     go to state 45
    comment                                   go to state 46


State 348

  114 ifStatement: IF $@3 LEFT_PARENTHESIS logicalExpression RIGHT_PARENTHESIS LEFT_CURLY_BRACE $@4 blockStatements RIGHT_CURLY_BRACE $@5 ELSE $@6 LEFT_CURLY_BRACE $@7 blockStatements RIGHT_CURLY_BRACE .

    $default  reduce using rule 114 (ifStatement)
